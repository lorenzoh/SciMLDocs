{"attributes":{"backlinks":[],"path":"/home/runner/.julia/packages/NonlinearSolve/kBzny/docs/src/index.md","title":"NonlinearSolve.jl: High-Performance Unified Nonlinear Solvers"},"tag":"document","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"h1","children":["NonlinearSolve.jl: High-Performance Unified Nonlinear Solvers"],"type":"node"},{"attributes":{},"tag":"p","children":["NonlinearSolve.jl is a unified interface for the nonlinear solving packages of Julia. It includes its own high-performance nonlinear solvers which include the ability to swap out to fast direct and iterative linear solvers, along with the ability to use sparse automatic differentiation for Jacobian construction and Jacobian-vector products. It interfaces with other packages of the Julia ecosystem to make it easy to test alternative solver packages and pass small types to control algorithm swapping. It also interfaces with the ",{"attributes":{"href":"https://mtk.sciml.ai/dev/","title":""},"tag":"a","children":["ModelingToolkit.jl"],"type":"node"}," world of symbolic modeling to allow for automatically generating high-performance code."],"type":"node"},{"attributes":{},"tag":"p","children":["Performance is key: the current methods are made to be highly performant on scalar and statically sized small problems, with options for large-scale systems. If you run into any performance issues, please file an issue. Note that this package is distinct from ",{"attributes":{"href":"https://github.com/SciML/SciMLNLSolve.jl","title":""},"tag":"a","children":["SciMLNLSolve.jl"],"type":"node"},". Consult the [NonlinearSystemSolvers](",{"attributes":{},"tag":"citation","children":[],"type":"node"}," nonlinearsystemsolvers) page for information on how to import solvers from different packages."],"type":"node"},{"attributes":{},"tag":"h2","children":["Installation"],"type":"node"},{"attributes":{},"tag":"p","children":["To install NonlinearSolve.jl, use the Julia package manager:"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"USING","children":[{"attributes":{},"tag":"USING","children":["using"],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["Pkg"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Pkg"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"IDENTIFIER","children":["add"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"},{"attributes":{},"tag":"STRING","children":["NonlinearSolve"],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h2","children":["Contributing"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["Please refer to the ",{"attributes":{"href":"https://github.com/SciML/ColPrac/blob/master/README.md","title":""},"tag":"a","children":["SciML ColPrac: Contributor's Guide on Collaborative Practices for Community Packages"],"type":"node"}," for guidance on PRs, issues, and other matters relating to contributing to ModelingToolkit."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["There are a few community forums:"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["the #diffeq-bridged channel in the ",{"attributes":{"href":"https://julialang.org/slack/","title":""},"tag":"a","children":["Julia Slack"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{"href":"https://gitter.im/JuliaDiffEq/Lobby","title":""},"tag":"a","children":["JuliaDiffEq"],"type":"node"}," on Gitter"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["on the Julia Discourse forums (look for the ",{"attributes":{"href":"https://discourse.julialang.org/tag/modelingtoolkit","title":""},"tag":"a","children":["modelingtoolkit tag"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["see also ",{"attributes":{"href":"https://sciml.ai/community/","title":""},"tag":"a","children":["SciML Community page"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h2","children":["Roadmap"],"type":"node"},{"attributes":{},"tag":"p","children":["The current algorithms should support automatic differentiation, though improved adjoint overloads are planned to be added in the current update (which will make use of the ",{"attributes":{},"tag":"code","children":["f(u,p)"],"type":"node"}," form). Future updates will include standard methods for larger scale nonlinear solving like Newton-Krylov methods."],"type":"node"}],"type":"node"}],"type":"node"}