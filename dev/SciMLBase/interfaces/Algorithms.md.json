{"attributes":{"backlinks":[],"path":"/Users/lorenz/.julia/packages/SciMLBase/dYFnI/docs/src/interfaces/Algorithms.md","title":"SciMLAlgorithms"},"tag":"document","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"h1","children":["SciMLAlgorithms"],"type":"node"},{"attributes":{},"tag":"h2","children":["Definition of the SciMLAlgorithm Interface"],"type":"node"},{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["SciMLAlgorithms"],"type":"node"}," are defined as types which have dispatches to the function signature:"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"DOT","children":[{"attributes":{"reftype":"symbol","document_id":"references/CommonSolve"},"tag":"reference","children":["CommonSolve"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{"reftype":"symbol","document_id":"references/CommonSolve.solve"},"tag":"reference","children":["solve"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"DECLARATION","children":[{"attributes":{},"tag":"IDENTIFIER","children":["prob"],"type":"node"},{"attributes":{},"tag":"DECLARATION","children":["::"],"type":"node"},{"attributes":{"reftype":"symbol","document_id":"references/SciMLBase.SciMLProblem"},"tag":"reference","children":["SciMLProblem"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"DECLARATION","children":[{"attributes":{},"tag":"IDENTIFIER","children":["alg"],"type":"node"},{"attributes":{},"tag":"DECLARATION","children":["::"],"type":"node"},{"attributes":{"reftype":"symbol","document_id":"references/SciMLBase.SciMLAlgorithm"},"tag":"reference","children":["SciMLAlgorithm"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"PARAMETERS","children":[{"attributes":{},"tag":"SEMICOLON","children":[";"],"type":"node"},{"attributes":{},"tag":"DDDOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["kwargs"],"type":"node"},{"attributes":{},"tag":"DDDOT","children":["..."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h3","children":["Algorithm-Specific Arguments"],"type":"node"},{"attributes":{},"tag":"p","children":["Note that because the keyword arguments of ",{"attributes":{},"tag":"code","children":["solve"],"type":"node"}," are designed to be common across the whole problem type, algorithms should have the algorithm-specific keyword arguments defined as part of the algorithm constructor. For example, ",{"attributes":{},"tag":"code","children":["Rodas5"],"type":"node"}," has a choice of ",{"attributes":{},"tag":"code","children":["autodiff::Bool"],"type":"node"}," which is not common across all ODE solvers, and thus ",{"attributes":{},"tag":"code","children":["autodiff"],"type":"node"}," is a algorithm-specific keyword argument handled via ",{"attributes":{},"tag":"code","children":["Rodas5(autodiff=true)"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"h3","children":["Remake"],"type":"node"},{"attributes":{},"tag":"p","children":["Note that ",{"attributes":{},"tag":"code","children":["remake"],"type":"node"}," is applicable to ",{"attributes":{},"tag":"code","children":["SciMLAlgorithm"],"type":"node"}," types, but this is not used in the public API. It's used for solvers to swap out components like ForwardDiff chunk sizes."],"type":"node"},{"attributes":{},"tag":"h2","children":["Common Algorithm Keyword Arguments"],"type":"node"},{"attributes":{},"tag":"p","children":["Commonly used algorithm keyword arguments are:"],"type":"node"},{"attributes":{},"tag":"h2","children":["Traits"],"type":"node"},{"attributes":{"lang":"@docs"},"tag":"codeblock","children":["SciMLBase.isautodifferentiable\nSciMLBase.allows_arbitrary_number_types\nSciMLBase.allowscomplex\nSciMLBase.isadaptive\nSciMLBase.isdiscrete\n"],"type":"node"},{"attributes":{},"tag":"h3","children":["Abstract SciML Algorithms"],"type":"node"},{"attributes":{"lang":"@docs"},"tag":"codeblock","children":["SciMLBase.SciMLAlgorithm\nSciMLBase.DEAlgorithm\nSciMLBase.AbstractLinearAlgorithm\nSciMLBase.AbstractNonlinearAlgorithm\nSciMLBase.AbstractQuadratureAlgorithm\nSciMLBase.AbstractOptimizationAlgorithm\nSciMLBase.AbstractSteadyStateAlgorithm\nSciMLBase.AbstractODEAlgorithm\nSciMLBase.AbstractSecondOrderODEAlgorithm\nSciMLBase.AbstractRODEAlgorithm\nSciMLBase.AbstractSDEAlgorithm\nSciMLBase.AbstractDAEAlgorithm\nSciMLBase.AbstractDDEAlgorithm\nSciMLBase.AbstractSDDEAlgorithm\n"],"type":"node"},{"attributes":{},"tag":"h3","children":["Concrete SciML Algorithms"],"type":"node"},{"attributes":{},"tag":"p","children":["The concrete SciML algorithms are found in the respective solver documentations."],"type":"node"}],"type":"node"}],"type":"node"}