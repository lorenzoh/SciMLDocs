{"attributes":{"backlinks":[],"path":"/Users/lorenz/.julia/packages/DiffEqOperators/NWEwW/docs/src/index.md","title":"DiffEqOperators.jl"},"tag":"document","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"h1","children":["DiffEqOperators.jl"],"type":"node"},{"attributes":{},"tag":"p","children":["DiffEqOperators.jl is a package for finite difference discretization of partial differential equations. It is for building fast lazy operators for high order non-uniform finite differences."],"type":"node"},{"attributes":{"class":"note"},"tag":"admonition","children":[{"attributes":{},"tag":"admonitiontitle","children":["Note"],"type":"node"},{"attributes":{},"tag":"admonitionbody","children":[{"attributes":{},"tag":"p","children":["For automated finite difference discretization of symbolically-defined PDEs, see ",{"attributes":{"href":"https://github.com/SciML/MethodOfLines.jl","title":""},"tag":"a","children":["MethodOfLines.jl"],"type":"node"},"."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{"class":"warn"},"tag":"admonition","children":[{"attributes":{},"tag":"admonitiontitle","children":["Warn"],"type":"node"},{"attributes":{},"tag":"admonitionbody","children":[{"attributes":{},"tag":"p","children":["This library is not complete, especially for higher dimensional operators. Use with caution."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["For the operators, both centered and ",{"attributes":{"href":"https://en.wikipedia.org/wiki/Upwind_scheme","title":""},"tag":"a","children":["upwind"],"type":"node"}," operators are provided, for domains of any dimension, arbitrarily spaced grids, and for any order of accuracy. The cases of 1, 2, and 3 dimensions with an evenly spaced grid are optimized with a convolution routine from ",{"attributes":{},"tag":"code","children":["NNlib.jl"],"type":"node"},". Care is taken to give efficiency by avoiding unnecessary allocations, using purpose-built stencil compilers, allowing GPUs and parallelism, etc. Any operator can be concretized as an ",{"attributes":{},"tag":"code","children":["Array"],"type":"node"},", a ",{"attributes":{},"tag":"code","children":["BandedMatrix"],"type":"node"}," or a sparse matrix."],"type":"node"}],"type":"node"}],"type":"node"}