{"attributes":{"backlinks":[],"path":"/Users/lorenz/.julia/packages/Surrogates/zwNvG/docs/src/sphere_function.md","title":"Sphere function"},"tag":"document","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"h1","children":["Sphere function"],"type":"node"},{"attributes":{},"tag":"p","children":["The sphere function of dimension d is defined as: ",{"attributes":{},"tag":"math","children":["f(x) = \\sum_{i=1}^d x_i"],"type":"node"}," with lower bound -10 and upper bound 10."],"type":"node"},{"attributes":{},"tag":"p","children":["Let's import Surrogates and Plots:"],"type":"node"},{"attributes":{"lang":"@example sphere_function"},"tag":"codeblock","children":["using Surrogates\nusing Plots\ndefault()\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Define the objective function:"],"type":"node"},{"attributes":{"lang":"@example sphere_function"},"tag":"codeblock","children":["function sphere_function(x)\n    return sum(x.^2)\nend\n"],"type":"node"},{"attributes":{},"tag":"p","children":["The 1D case is just a simple parabola, let's plot it:"],"type":"node"},{"attributes":{"lang":"@example sphere_function"},"tag":"codeblock","children":["n = 20\nlb = -10\nub = 10\nx = sample(n,lb,ub,SobolSample())\ny = sphere_function.(x)\nxs = lb:0.001:ub\nplot(x, y, seriestype=:scatter, label=\"Sampled points\", xlims=(lb, ub), ylims=(-2, 120), legend=:top)\nplot!(xs,sphere_function.(xs), label=\"True function\", legend=:top)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Fitting RadialSurrogate with different radial basis:"],"type":"node"},{"attributes":{"lang":"@example sphere_function"},"tag":"codeblock","children":["rad_1d_linear = RadialBasis(x,y,lb,ub)\nrad_1d_cubic = RadialBasis(x,y,lb,ub,rad = cubicRadial)\nrad_1d_multiquadric = RadialBasis(x,y,lb,ub, rad = multiquadricRadial)\nplot(x, y, seriestype=:scatter, label=\"Sampled points\", xlims=(lb, ub), ylims=(-2, 120), legend=:top)\nplot!(xs,sphere_function.(xs), label=\"True function\", legend=:top)\nplot!(xs, rad_1d_linear.(xs), label=\"Radial surrogate with linear\", legend=:top)\nplot!(xs, rad_1d_cubic.(xs), label=\"Radial surrogate with cubic\", legend=:top)\nplot!(xs, rad_1d_multiquadric.(xs), label=\"Radial surrogate with multiquadric\", legend=:top)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Fitting Lobachevsky Surrogate with different values of hyperparameters alpha:"],"type":"node"},{"attributes":{"lang":"@example sphere_function"},"tag":"codeblock","children":["loba_1 = LobachevskySurrogate(x,y,lb,ub)\nloba_2 = LobachevskySurrogate(x,y,lb,ub,alpha = 1.5, n = 6)\nloba_3 = LobachevskySurrogate(x,y,lb,ub,alpha = 0.3, n = 6)\nplot(x, y, seriestype=:scatter, label=\"Sampled points\", xlims=(lb, ub), ylims=(-2, 120), legend=:top)\nplot!(xs,sphere_function.(xs), label=\"True function\", legend=:top)\nplot!(xs, loba_1.(xs), label=\"Lobachevsky surrogate 1\", legend=:top)\nplot!(xs, loba_2.(xs), label=\"Lobachevsky surrogate 2\", legend=:top)\nplot!(xs, loba_3.(xs), label=\"Lobachevsky surrogate 3\", legend=:top)\n"],"type":"node"}],"type":"node"}],"type":"node"}