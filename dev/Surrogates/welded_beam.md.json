{"attributes":{"backlinks":[],"path":"/Users/lorenz/.julia/packages/Surrogates/zwNvG/docs/src/welded_beam.md","title":"welded_beam"},"tag":"document","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"p","children":["#Welded beam function"],"type":"node"},{"attributes":{},"tag":"p","children":["The welded beam function is defined as: ",{"attributes":{},"tag":"math","children":["f(h,l,t) = \\sqrt{\\frac{a^2 + b^2 + abl}{\\sqrt{0.25(l^2+(h+t)^2)}}}"],"type":"node"}," With: ",{"attributes":{},"tag":"math","children":["a = \\frac{6000}{\\sqrt{2}hl}"],"type":"node"}," ",{"attributes":{},"tag":"math","children":["b = \\frac{6000(14 + 0.5l)*\\sqrt{0.25(l^2+(h+t)^2)}}{2*[0.707hl(\\frac{l^2}{12}+0.25*(h+t)^2)]}"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["It has 3 dimension."],"type":"node"},{"attributes":{"lang":"@example welded"},"tag":"codeblock","children":["using Surrogates\nusing Plots\nusing LinearAlgebra\ndefault()\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Define the objective function:"],"type":"node"},{"attributes":{"lang":"@example welded"},"tag":"codeblock","children":["function f(x)\n    h = x[1]\n    l = x[2]\n    t = x[3]\n    a = 6000/(sqrt(2)*h*l)\n    b = (6000*(14+0.5*l)*sqrt(0.25*(l^2+(h+t)^2)))/(2*(0.707*h*l*(l^2/12 + 0.25*(h+t)^2)))\n    return (sqrt(a^2+b^2 + l*a*b))/(sqrt(0.25*(l^2+(h+t)^2)))\nend\n"],"type":"node"},{"attributes":{"lang":"@example welded"},"tag":"codeblock","children":["n = 300\nd = 3\nlb = [0.125,5.0,5.0]\nub = [1.,10.,10.]\nx = sample(n,lb,ub,SobolSample())\ny = f.(x)\nn_test = 1000\nx_test = sample(n_test,lb,ub,GoldenSample());\ny_true = f.(x_test);\n"],"type":"node"},{"attributes":{"lang":"@example welded"},"tag":"codeblock","children":["my_rad = RadialBasis(x,y,lb,ub)\ny_rad = my_rad.(x_test)\nmse_rad = norm(y_true - y_rad,2)/n_test\nprint(\"MSE Radial: $mse_rad\")\n\nmy_krig = Kriging(x,y,lb,ub)\ny_krig = my_krig.(x_test)\nmse_krig = norm(y_true - y_krig,2)/n_test\nprint(\"MSE Kriging: $mse_krig\")\n\nmy_loba = LobachevskySurrogate(x,y,lb,ub)\ny_loba = my_loba.(x_test)\nmse_rad = norm(y_true - y_loba,2)/n_test\nprint(\"MSE Lobachevsky: $mse_rad\")\n"],"type":"node"}],"type":"node"}],"type":"node"}