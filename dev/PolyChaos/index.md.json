{"attributes":{"backlinks":[],"path":"/Users/lorenz/.julia/packages/PolyChaos/THVqe/docs/src/index.md","title":"Overview"},"tag":"document","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":"@setup mysetup"},"tag":"codeblock","children":["using PolyChaos\n"],"type":"node"},{"attributes":{},"tag":"h1","children":["Overview"],"type":"node"},{"attributes":{},"tag":"p","children":["PolyChaos is a collection of numerical routines for orthogonal polynomials written in the ",{"attributes":{"href":"https://julialang.org/","title":""},"tag":"a","children":["Julia"],"type":"node"}," programming language. Starting from some non-negative weight (aka an absolutely continuous nonnegative measure), PolyChaos allows"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["to compute the coefficients for the monic three-term recurrence relation,"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["to evaluate the orthogonal polynomials at arbitrary points,"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["to compute the quadrature rule,"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["to compute tensors of scalar products,"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["to do all of the above in a multivariate setting (aka product measures)."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["If the weight function is a probability density function, PolyChaos further provides routines to compute ",{"attributes":{"href":"https://en.wikipedia.org/wiki/Polynomial_chaos","title":""},"tag":"a","children":["polynomial chaos expansions"],"type":"node"}," (PCEs) of random variables with this very density function. These routines allow"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["to compute affine PCE coefficients for arbitrary densities,"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["to compute moments,"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["to compute the tensors of scalar products."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["PolyChaos contains several ",{"attributes":{},"tag":"em","children":["canonical"],"type":"node"}," orthogonal polynomials such as Jacobi or Hermite polynomials. For these, closed-form expressions and state-of-the art quadrature rules are used whenever possible. However, a cornerstone principle of PolyChaos is to provide all the functionality for user-specific, arbitrary weights."],"type":"node"},{"attributes":{"class":"note"},"tag":"admonition","children":[{"attributes":{},"tag":"admonitiontitle","children":["Note"],"type":"node"},{"attributes":{},"tag":"admonitionbody","children":[{"attributes":{},"tag":"p","children":["What PolyChaos is not (at least currently):"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["a self-contained introduction to orthogonal polynomials, quadrature rules and/or polynomial chaos expansions. We assume the user brings some experience to the table. However, over time we will focus on strengthening the tutorial charater of the package."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["a symbolic toolbox"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["a replacement for ",{"attributes":{"href":"https://github.com/ajt60gaibb/FastGaussQuadrature.jl","title":""},"tag":"a","children":["FastGaussQuadrature.jl"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h2","children":["Installation"],"type":"node"},{"attributes":{},"tag":"p","children":["The package requires ",{"attributes":{},"tag":"code","children":["Julia 1.3"],"type":"node"}," or newer. In ",{"attributes":{},"tag":"code","children":["Julia"],"type":"node"}," switch to the package manager"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":["julia> ]\n(v1.03 pkg> add PolyChaos"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["This will install PolyChaos and its dependencies. Once that is done, load the package:"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"IDENTIFIER","children":["julia"],"type":"node"},{"attributes":{},"tag":"GREATER","children":[">"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"USING","children":[{"attributes":{},"tag":"USING","children":["using"],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{"reftype":"symbol","document_id":"references/PolyChaos"},"tag":"reference","children":["PolyChaos"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["That's it."],"type":"node"},{"attributes":{},"tag":"p","children":["Let's take a look at a simple example. We would like to solve the integral"],"type":"node"},{"attributes":{},"tag":"mathblock","children":["\\int_0^1 6 x^5 \\mathrm{d}x."],"type":"node"},{"attributes":{},"tag":"p","children":["Exploiting the underlying uniform measure, the integration can be done exactly with a 3-point quadrature rule."],"type":"node"},{"attributes":{"lang":"jldoctest"},"tag":"codeblock","children":["julia> using PolyChaos\n\njulia> opq = Uniform01OrthoPoly(3, addQuadrature = true)\nUniform01OrthoPoly{Array{Float64,1},Uniform01Measure,Quad{Float64,Array{Float64,1}}}(3, [0.5, 0.5, 0.5, 0.5], [1.0, 0.08333333333333333, 0.06666666666666667, 0.06428571428571428], Uniform01Measure(PolyChaos.w_uniform01, (0.0, 1.0), true), Quad{Float64,Array{Float64,1}}(\"golubwelsch\", 3, [0.11270166537925838, 0.49999999999999994, 0.8872983346207417], [0.2777777777777777, 0.4444444444444444, 0.27777777777777757]))\n\njulia> integrate(x -> 6x^5, opq)\n0.9999999999999993\n\njulia> show(opq)\n\nUnivariate orthogonal polynomials\ndegree:         3\n#coeffs:        4\nα =             [0.5, 0.5, 0.5, 0.5]\nβ =             [1.0, 0.08333333333333333, 0.06666666666666667, 0.06428571428571428]\n\nMeasure dλ(t)=w(t)dt\nw:      w_uniform01\ndom:    (0.0, 1.0)\nsymmetric:      true\n"],"type":"node"},{"attributes":{},"tag":"p","children":["To get going with PolyChaos check out the tutorials such as the one on [numerical integration](",{"attributes":{},"tag":"citation","children":[{"mimes":{"text/plain":"Any[]"},"type":"leaf"},{"mimes":{"text/plain":"Dict{Symbol, String}()"},"type":"leaf"}],"type":"node"}," NumericalIntegration). In case you are unfamiliar with orthogonal polynomials, perhaps [this background information](",{"attributes":{},"tag":"citation","children":[{"mimes":{"text/plain":"Any[]"},"type":"leaf"},{"mimes":{"text/plain":"Dict{Symbol, String}()"},"type":"leaf"}],"type":"node"}," MathematicalBackground) is of help."],"type":"node"},{"attributes":{},"tag":"h2","children":["References"],"type":"node"},{"attributes":{},"tag":"p","children":["The code base of ",{"attributes":{},"tag":"code","children":["PolyChaos"],"type":"node"}," is partially based on Walter Gautschi's ",{"attributes":{"href":"https://www.cs.purdue.edu/archives/2002/wxg/codes/OPQ.html","title":""},"tag":"a","children":["Matlab suite of programs for generating orthogonal polynomials and related quadrature rules"],"type":"node"},", with much of the theory presented in his book ",{"attributes":{},"tag":"em","children":["Orthogonal Polynomials: Computation and Approximation"],"type":"node"}," published in 2004 by the Oxford University Press."],"type":"node"},{"attributes":{},"tag":"p","children":["For the theory of polynomial chaos expansion we mainly consulted T. J. Sullivan. ",{"attributes":{},"tag":"em","children":["Introduction to Uncertainty Quantification"],"type":"node"},". Springer International Publishing Switzerland. 2015."],"type":"node"},{"attributes":{},"tag":"h2","children":["Contributing"],"type":"node"},{"attributes":{},"tag":"p","children":["We are always looking for contributors. If you are interested, just get in touch: tillmann [dot] muehlpfordt [at] kit [dot] edu."],"type":"node"},{"attributes":{},"tag":"p","children":["Or just fork and/or star the repository:"],"type":"node"},{"attributes":{},"tag":"p","children":["Julia's package manager works nicely with Github: simply install the hosted package via ",{"attributes":{},"tag":"code","children":["Pkg.clone"],"type":"node"}," and the ",{"attributes":{"href":"https://help.github.com/articles/which-remote-url-should-i-use/","title":""},"tag":"a","children":["repository's URL"],"type":"node"},". A fork is created with"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Pkg"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"IDENTIFIER","children":["clone"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"},{"attributes":{},"tag":"STRING","children":["https://github.com/timueh/PolyChaos.jl"],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["The fork will replace the original package."],"type":"node"},{"attributes":{},"tag":"p","children":["Call"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Pkg"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"IDENTIFIER","children":["dir"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"},{"attributes":{},"tag":"STRING","children":["PolyChaos"],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["to figure out where the package was cloned to. Go to that location and figure out what branch you are on via ",{"attributes":{},"tag":"code","children":["git branch"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"h2","children":["Citing"],"type":"node"},{"attributes":{},"tag":"p","children":["If you found the software useful and applied it to your own research, we'd appreciate a citation. Add the following to your BibTeX file"],"type":"node"},{"attributes":{"lang":"tex"},"tag":"codeblock","children":["@ARTICLE{2020arXiv200403970M,\n       author = {{M{\\\"u}hlpfordt}, Tillmann and {Zahn}, Frederik and {Hagenmeyer}, Veit and\n         {Faulwasser}, Timm},\n        title = \"{PolyChaos.jl -- A Julia Package for Polynomial Chaos in Systems and Control}\",\n      journal = {arXiv e-prints},\n     keywords = {Electrical Engineering and Systems Science - Systems and Control, Mathematics - Numerical Analysis, Mathematics - Optimization and Control},\n         year = 2020,\n        month = apr,\n          eid = {arXiv:2004.03970},\n        pages = {arXiv:2004.03970},\narchivePrefix = {arXiv},\n       eprint = {2004.03970},\n}\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Of course you are more than welcome to partake in GitHub's gamification: starring and forking is much appreciated."],"type":"node"},{"attributes":{},"tag":"p","children":["Enjoy."],"type":"node"}],"type":"node"}],"type":"node"}