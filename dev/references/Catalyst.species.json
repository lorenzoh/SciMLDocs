{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"Catalyst/src/Catalyst.jl","docid":"sourcefiles/Catalyst/src/Catalyst.jl"},{"tag":"sourcefile","title":"Catalyst/src/latexify_recipes.jl","docid":"sourcefiles/Catalyst/src/latexify_recipes.jl"},{"tag":"sourcefile","title":"Catalyst/src/reactionsystem.jl","docid":"sourcefiles/Catalyst/src/reactionsystem.jl"},{"tag":"sourcefile","title":"Catalyst/src/graphs.jl","docid":"sourcefiles/Catalyst/src/graphs.jl"},{"tag":"sourcefile","title":"Catalyst/src/networkapi.jl","docid":"sourcefiles/Catalyst/src/networkapi.jl"},{"tag":"document","title":"Using Catalyst","docid":"Catalyst/tutorials/using_catalyst.md"},{"tag":"sourcefile","title":"Catalyst/src/reaction_network.jl","docid":"sourcefiles/Catalyst/src/reaction_network.jl"}],"methods":[{"line":47,"file":"/Users/lorenz/.julia/packages/Catalyst/2UqoT/src/networkapi.jl","method_id":"Catalyst.species_1","symbol_id":"Catalyst.species","filedoc":"sourcefiles/Catalyst/src/networkapi.jl","signature":"species(network::Catalyst.ReactionSystem, sts)"},{"line":61,"file":"/Users/lorenz/.julia/packages/Catalyst/2UqoT/src/networkapi.jl","method_id":"Catalyst.species_2","symbol_id":"Catalyst.species","filedoc":"sourcefiles/Catalyst/src/networkapi.jl","signature":"species(network)"}],"name":"species","title":"species","symbol_id":"Catalyst.species","public":true,"module_id":"Catalyst"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["species(network)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Given a ",{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["ReactionSystem"],"type":"node"}],"type":"node"},", return a vector of all species defined in the system and any subsystems that are of type ",{"attributes":{},"tag":"code","children":["ReactionSystem"],"type":"node"},". To get the variables in the system and all subsystems, including non-",{"attributes":{},"tag":"code","children":["ReactionSystem"],"type":"node"}," subsystems, uses ",{"attributes":{},"tag":"code","children":["states(network)"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["Notes:"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["If ",{"attributes":{},"tag":"code","children":["ModelingToolkit.get_systems(network)"],"type":"node"}," is non-empty will allocate."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}