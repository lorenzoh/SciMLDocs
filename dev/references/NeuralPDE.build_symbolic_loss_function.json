{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"NeuralPDE/src/pinns_pde_solve.jl","docid":"sourcefiles/NeuralPDE/src/pinns_pde_solve.jl"},{"tag":"sourcefile","title":"NeuralPDE/src/NeuralPDE.jl","docid":"sourcefiles/NeuralPDE/src/NeuralPDE.jl"}],"methods":[{"line":590,"file":"/Users/lorenz/.julia/packages/NeuralPDE/y7uHG/src/pinns_pde_solve.jl","method_id":"NeuralPDE.build_symbolic_loss_function_1","symbol_id":"NeuralPDE.build_symbolic_loss_function","filedoc":"sourcefiles/NeuralPDE/src/pinns_pde_solve.jl","signature":"build_symbolic_loss_function(eqs, _indvars, _depvars, dict_depvar_input, phi, derivative, integral, chain, initθ, strategy; bc_indvars, eq_params, param_estim, default_p, integrand, dict_transformation_vars, transformation_vars, integrating_depvars)"},{"line":646,"file":"/Users/lorenz/.julia/packages/NeuralPDE/y7uHG/src/pinns_pde_solve.jl","method_id":"NeuralPDE.build_symbolic_loss_function_2","symbol_id":"NeuralPDE.build_symbolic_loss_function","filedoc":"sourcefiles/NeuralPDE/src/pinns_pde_solve.jl","signature":"build_symbolic_loss_function(eqs, indvars, depvars, dict_indvars, dict_depvars, dict_depvar_input, phi, derivative, integral, chain, initθ, strategy; eq_params, param_estim, default_p, bc_indvars, integrand, dict_transformation_vars, transformation_vars, integrating_depvars)"}],"name":"build_symbolic_loss_function","title":"build_symbolic_loss_function","symbol_id":"NeuralPDE.build_symbolic_loss_function","public":true,"module_id":"NeuralPDE"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"p","children":["Build a loss function for a PDE or a boundary condition"],"type":"node"},{"attributes":{},"tag":"h1","children":["Examples: System of PDEs:"],"type":"node"},{"attributes":{},"tag":"p","children":["Take expressions in the form:"],"type":"node"},{"attributes":{},"tag":"p","children":["[Dx(u1(x,y)) + 4",{"attributes":{},"tag":"em","children":["Dy(u2(x,y)) ~ 0,"," ","Dx(u2(x,y)) + 9"],"type":"node"},"Dy(u1(x,y)) ~ 0]"],"type":"node"},{"attributes":{},"tag":"p","children":["to"],"type":"node"},{"attributes":{},"tag":"p","children":[":((cord, θ, phi, derivative, u)->begin #= ... =# #= ... =# begin (θ1, θ2) = (θ[1:33], θ\"[34:66]) (phi1, phi2) = (phi[1], phi[2]) let (x, y) = (cord[1], cord[2]) [(+)(derivative(phi1, u, [x, y], [[ε, 0.0]], 1, θ1), (",{"attributes":{},"tag":"em","children":[")(4, derivative(phi2, u, [x, y], [[0.0, ε]], 1, θ2))) - 0,"," ","(+)(derivative(phi2, u, [x, y], [[ε, 0.0]], 1, θ2), ("],"type":"node"},")(9, derivative(phi1, u, [x, y], [[0.0, ε]], 1, θ1))) - 0] end end end)"],"type":"node"}],"type":"node"}],"type":"node"}