{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"PolyChaos/src/polynomial_chaos.jl","docid":"sourcefiles/PolyChaos/src/polynomial_chaos.jl"}],"methods":[{"line":282,"file":"/Users/lorenz/.julia/packages/PolyChaos/THVqe/src/polynomial_chaos.jl","method_id":"PolyChaos.samplePCE_1","symbol_id":"PolyChaos.samplePCE","filedoc":"sourcefiles/PolyChaos/src/polynomial_chaos.jl","signature":"samplePCE(n::Int64, x::AbstractVector{<:Real}, op::PolyChaos.AbstractCanonicalOrthoPoly; method)"},{"line":287,"file":"/Users/lorenz/.julia/packages/PolyChaos/THVqe/src/polynomial_chaos.jl","method_id":"PolyChaos.samplePCE_2","symbol_id":"PolyChaos.samplePCE","filedoc":"sourcefiles/PolyChaos/src/polynomial_chaos.jl","signature":"samplePCE(n::Int64, x::AbstractVector{<:Real}, mop::PolyChaos.MultiOrthoPoly; method)"},{"line":277,"file":"/Users/lorenz/.julia/packages/PolyChaos/THVqe/src/polynomial_chaos.jl","method_id":"PolyChaos.samplePCE_3","symbol_id":"PolyChaos.samplePCE","filedoc":"sourcefiles/PolyChaos/src/polynomial_chaos.jl","signature":"samplePCE(n::Int64, x::AbstractVector{<:Real}, op::PolyChaos.AbstractOrthoPoly; method)"}],"name":"samplePCE","title":"samplePCE","symbol_id":"PolyChaos.samplePCE","public":true,"module_id":"PolyChaos"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"strong","children":["Univariate"],"type":"node"}],"type":"node"},{"attributes":{"lang":""},"tag":"codeblock","children":["samplePCE(n::Int,x::AbstractVector{<:Real},op::AbstractOrthoPoly;method::String=\"adaptiverejection\")\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Combines ",{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["sampleMeasure"],"type":"node"}],"type":"node"}," and ",{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["evaluatePCE"],"type":"node"}],"type":"node"},", i.e. it first draws ",{"attributes":{},"tag":"code","children":["n"],"type":"node"}," samples from the measure, then evaluates the PCE for those samples."],"type":"node"},{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"strong","children":["Multivariate"],"type":"node"}],"type":"node"},{"attributes":{"lang":""},"tag":"codeblock","children":["samplePCE(n::Int,x::AbstractVector{<:Real},mop::MultiOrthoPoly;method::Vector{String}=[\"adaptiverejection\" for i=1:length(mop.meas.name)])\n"],"type":"node"}],"type":"node"}],"type":"node"}