{"attributes":{"kind":"struct","backlinks":[{"tag":"sourcefile","title":"NeuralOperators/src/operator_kernel.jl","docid":"sourcefiles/NeuralOperators/src/operator_kernel.jl"}],"methods":[{"line":191,"file":"/Users/lorenz/.julia/packages/NeuralOperators/yBMmF/src/operator_kernel.jl","method_id":"NeuralOperators.GraphKernel_1","symbol_id":"NeuralOperators.GraphKernel","filedoc":"sourcefiles/NeuralOperators/src/operator_kernel.jl","signature":"NeuralOperators.GraphKernel(κ, ch::Int64)"},{"line":191,"file":"/Users/lorenz/.julia/packages/NeuralOperators/yBMmF/src/operator_kernel.jl","method_id":"NeuralOperators.GraphKernel_2","symbol_id":"NeuralOperators.GraphKernel","filedoc":"sourcefiles/NeuralOperators/src/operator_kernel.jl","signature":"NeuralOperators.GraphKernel(κ, ch::Int64, σ; init)"},{"line":186,"file":"/Users/lorenz/.julia/packages/NeuralOperators/yBMmF/src/operator_kernel.jl","method_id":"NeuralOperators.GraphKernel_3","symbol_id":"NeuralOperators.GraphKernel","filedoc":"sourcefiles/NeuralOperators/src/operator_kernel.jl","signature":"NeuralOperators.GraphKernel(linear::A, κ::B, σ::F)"}],"name":"GraphKernel","title":"GraphKernel","symbol_id":"NeuralOperators.GraphKernel","public":true,"module_id":"NeuralOperators"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["GraphKernel(κ, ch, σ=identity)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Graph kernel layer."],"type":"node"},{"attributes":{},"tag":"h2","children":["Arguments"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["κ"],"type":"node"},": A neural network layer for approximation, e.g. a ",{"attributes":{},"tag":"code","children":["Dense"],"type":"node"}," layer or a MLP."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["ch"],"type":"node"},": Channel size for linear transform, e.g. ",{"attributes":{},"tag":"code","children":["32"],"type":"node"},"."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["σ"],"type":"node"},": Activation function."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}