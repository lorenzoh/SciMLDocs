{"attributes":{"kind":"struct","backlinks":[{"tag":"sourcefile","title":"SciMLBase/src/SciMLBase.jl","docid":"sourcefiles/SciMLBase/src/SciMLBase.jl"},{"tag":"sourcefile","title":"SciMLBase/src/problems/ode_problems.jl","docid":"sourcefiles/SciMLBase/src/problems/ode_problems.jl"}],"methods":[{"line":206,"file":"/home/runner/.julia/packages/SciMLBase/dYFnI/src/problems/ode_problems.jl","method_id":"SciMLBase.DynamicalODEProblem_1","symbol_id":"SciMLBase.DynamicalODEProblem","filedoc":"sourcefiles/SciMLBase/src/problems/ode_problems.jl","signature":"SciMLBase.DynamicalODEProblem(f::SciMLBase.DynamicalODEFunction, du0, u0, tspan)"},{"line":206,"file":"/home/runner/.julia/packages/SciMLBase/dYFnI/src/problems/ode_problems.jl","method_id":"SciMLBase.DynamicalODEProblem_2","symbol_id":"SciMLBase.DynamicalODEProblem","filedoc":"sourcefiles/SciMLBase/src/problems/ode_problems.jl","signature":"SciMLBase.DynamicalODEProblem(f::SciMLBase.DynamicalODEFunction, du0, u0, tspan, p; kwargs...)"},{"line":209,"file":"/home/runner/.julia/packages/SciMLBase/dYFnI/src/problems/ode_problems.jl","method_id":"SciMLBase.DynamicalODEProblem_3","symbol_id":"SciMLBase.DynamicalODEProblem","filedoc":"sourcefiles/SciMLBase/src/problems/ode_problems.jl","signature":"SciMLBase.DynamicalODEProblem(f1, f2, du0, u0, tspan)"},{"line":209,"file":"/home/runner/.julia/packages/SciMLBase/dYFnI/src/problems/ode_problems.jl","method_id":"SciMLBase.DynamicalODEProblem_4","symbol_id":"SciMLBase.DynamicalODEProblem","filedoc":"sourcefiles/SciMLBase/src/problems/ode_problems.jl","signature":"SciMLBase.DynamicalODEProblem(f1, f2, du0, u0, tspan, p; kwargs...)"}],"name":"DynamicalODEProblem","title":"DynamicalODEProblem","symbol_id":"SciMLBase.DynamicalODEProblem","public":true,"module_id":"SciMLBase"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"p","children":["Defines an dynamical ordinary differential equation (ODE) problem. Documentation Page: https://diffeq.sciml.ai/stable/types/dynamical_types/"],"type":"node"},{"attributes":{},"tag":"p","children":["Dynamical ordinary differential equations, such as those arising from the definition of a Hamiltonian system or a second order ODE, have a special structure that can be utilized in the solution of the differential equation. On this page we describe how to define second order differential equations for their efficient numerical solution."],"type":"node"},{"attributes":{},"tag":"h2","children":["Mathematical Specification of a Dynamical ODE Problem"],"type":"node"},{"attributes":{},"tag":"p","children":["These algorithms require a Partitioned ODE of the form:"],"type":"node"},{"attributes":{},"tag":"mathblock","children":["\\frac{dv}{dt} = f_1(u,t) \\\\\n\\frac{du}{dt} = f_2(v) \\\\"],"type":"node"},{"attributes":{},"tag":"p","children":["This is a Partitioned ODE partitioned into two groups, so the functions should be specified as ",{"attributes":{},"tag":"code","children":["f1(dv,v,u,p,t)"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["f2(du,v,u,p,t)"],"type":"node"}," (in the inplace form), where ",{"attributes":{},"tag":"code","children":["f1"],"type":"node"}," is independent of ",{"attributes":{},"tag":"code","children":["v"],"type":"node"}," (unless specified by the solver), and ",{"attributes":{},"tag":"code","children":["f2"],"type":"node"}," is independent of ",{"attributes":{},"tag":"code","children":["u"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["t"],"type":"node"},". This includes discretizations arising from ",{"attributes":{},"tag":"code","children":["SecondOrderODEProblem"],"type":"node"},"s where the velocity is not used in the acceleration function, and Hamiltonians where the potential is (or can be) time-dependent but the kinetic energy is only dependent on ",{"attributes":{},"tag":"code","children":["v"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["Note that some methods assume that the integral of ",{"attributes":{},"tag":"code","children":["f2"],"type":"node"}," is a quadratic form. That means that ",{"attributes":{},"tag":"code","children":["f2=v'*M*v"],"type":"node"},", i.e. ",{"attributes":{},"tag":"math","children":["\\int f_2 = \\frac{1}{2} m v^2"],"type":"node"},", giving ",{"attributes":{},"tag":"code","children":["du = v"],"type":"node"},". This is equivalent to saying that the kinetic energy is related to ",{"attributes":{},"tag":"math","children":["v^2"],"type":"node"},". The methods which require this assumption will lose accuracy if this assumption is violated. Methods listed make note of this requirement with \"Requires quadratic kinetic energy\"."],"type":"node"},{"attributes":{},"tag":"h3","children":["Constructor"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/SciMLBase.DynamicalODEProblem"},"tag":"reference","children":["DynamicalODEProblem"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"DECLARATION","children":[{"attributes":{},"tag":"IDENTIFIER","children":["f"],"type":"node"},{"attributes":{},"tag":"DECLARATION","children":["::"],"type":"node"},{"attributes":{"reftype":"symbol","document_id":"references/SciMLBase.DynamicalODEFunction"},"tag":"reference","children":["DynamicalODEFunction"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["v0"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["u0"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["tspan"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["p"],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/SciMLBase.NullParameters"},"tag":"reference","children":["NullParameters"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"PARAMETERS","children":[{"attributes":{},"tag":"SEMICOLON","children":[";"],"type":"node"},{"attributes":{},"tag":"DDDOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["kwargs"],"type":"node"},{"attributes":{},"tag":"DDDOT","children":["..."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"CURLY","children":[{"attributes":{"reftype":"symbol","document_id":"references/SciMLBase.DynamicalODEProblem"},"tag":"reference","children":["DynamicalODEProblem"],"type":"node"},{"attributes":{},"tag":"LBRACE","children":["{"],"type":"node"},{"attributes":{"reftype":"symbol","document_id":"references/SciMLBase.isinplace"},"tag":"reference","children":["isinplace"],"type":"node"},{"attributes":{},"tag":"RBRACE","children":["}"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["f1"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["f2"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["v0"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["u0"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["tspan"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["p"],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/SciMLBase.NullParameters"},"tag":"reference","children":["NullParameters"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"PARAMETERS","children":[{"attributes":{},"tag":"SEMICOLON","children":[";"],"type":"node"},{"attributes":{},"tag":"DDDOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["kwargs"],"type":"node"},{"attributes":{},"tag":"DDDOT","children":["..."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Defines the ODE with the specified functions. ",{"attributes":{},"tag":"code","children":["isinplace"],"type":"node"}," optionally sets whether the function is inplace or not. This is determined automatically, but not inferred."],"type":"node"},{"attributes":{},"tag":"p","children":["Parameters are optional, and if not given then a ",{"attributes":{},"tag":"code","children":["NullParameters()"],"type":"node"}," singleton will be used which will throw nice errors if you try to index non-existent parameters. Any extra keyword arguments are passed on to the solvers. For example, if you set a ",{"attributes":{},"tag":"code","children":["callback"],"type":"node"}," in the problem, then that ",{"attributes":{},"tag":"code","children":["callback"],"type":"node"}," will be added in every solve call."],"type":"node"},{"attributes":{},"tag":"h3","children":["Fields"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["f1"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["f2"],"type":"node"},": The functions in the ODE."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["v0"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["u0"],"type":"node"},": The initial conditions."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["tspan"],"type":"node"},": The timespan for the problem."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["p"],"type":"node"},": The parameters for the problem. Defaults to ",{"attributes":{},"tag":"code","children":["NullParameters"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["kwargs"],"type":"node"},": The keyword arguments passed onto the solves."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"hr","children":[],"type":"node"},{"attributes":{"lang":""},"tag":"codeblock","children":["DynamicalODEProblem(f::DynamicalODEFunction,v0,u0,tspan,p=NullParameters(),callback=CallbackSet())\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Define a dynamical ODE function from a ",{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["DynamicalODEFunction"],"type":"node"}],"type":"node"},"."],"type":"node"}],"type":"node"}],"type":"node"}