{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"Catalyst/src/Catalyst.jl","docid":"sourcefiles/Catalyst/src/Catalyst.jl"},{"tag":"sourcefile","title":"Catalyst/src/networkapi.jl","docid":"sourcefiles/Catalyst/src/networkapi.jl"}],"methods":[{"line":1338,"file":"/Users/lorenz/.julia/packages/Catalyst/2UqoT/src/networkapi.jl","method_id":"Catalyst.addparam!_1","symbol_id":"Catalyst.addparam!","filedoc":"sourcefiles/Catalyst/src/networkapi.jl","signature":"addparam!(network::Catalyst.ReactionSystem, p::SymbolicUtils.Symbolic; disablechecks)"},{"line":1367,"file":"/Users/lorenz/.julia/packages/Catalyst/2UqoT/src/networkapi.jl","method_id":"Catalyst.addparam!_2","symbol_id":"Catalyst.addparam!","filedoc":"sourcefiles/Catalyst/src/networkapi.jl","signature":"addparam!(network::Catalyst.ReactionSystem, p::Symbolics.Num; disablechecks)"}],"name":"addparam!","title":"addparam!","symbol_id":"Catalyst.addparam!","public":true,"module_id":"Catalyst"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["addparam!(network::ReactionSystem, p::Symbolic; disablechecks=false)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Given a ",{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["ReactionSystem"],"type":"node"}],"type":"node"},", add the parameter corresponding to the variable ",{"attributes":{},"tag":"code","children":["p"],"type":"node"}," to the network (if it is not already defined). Returns the integer id of the parameter within the system."],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["disablechecks"],"type":"node"}," will disable checking for whether the passed in variable is already defined, which is useful when adding many new variables to the system. ",{"attributes":{},"tag":"em","children":["Do not disable checks"],"type":"node"}," unless you are sure the passed in variable is a new variable, as this will potentially leave the system in an undefined state."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"hr","children":[{"mimes":{"text/plain":"Any[]"},"type":"leaf"},{"mimes":{"text/plain":"Dict{Symbol, String}()"},"type":"leaf"}],"type":"node"},{"attributes":{"lang":""},"tag":"codeblock","children":["addparam!(network::ReactionSystem, p::Num; disablechecks=false)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Given a ",{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["ReactionSystem"],"type":"node"}],"type":"node"},", add the parameter corresponding to the variable ",{"attributes":{},"tag":"code","children":["p"],"type":"node"}," to the network (if it is not already defined). Returns the integer id of the parameter within the system."],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["disablechecks"],"type":"node"}," will disable checking for whether the passed in variable is already defined, which is useful when adding many new variables to the system. ",{"attributes":{},"tag":"em","children":["Do not disable checks"],"type":"node"}," unless you are sure the passed in variable is a new variable, as this will potentially leave the system in an undefined state."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}