{"attributes":{"kind":"struct","backlinks":[{"tag":"document","title":"Neural Ordinary Differential Equations with Flux.train!","docid":"DiffEqSensitivity/neural_ode/neural_ode_flux.md"},{"tag":"sourcefile","title":"DiffEqFlux/src/hnn.jl","docid":"sourcefiles/DiffEqFlux/src/hnn.jl"},{"tag":"document","title":"Neural ODEs on GPUs","docid":"DiffEqSensitivity/neural_ode/GPUs.md"},{"tag":"document","title":"Bayesian Neural ODEs: SGLD","docid":"DiffEqSensitivity/bayesian/BayesianNODE_SGLD.md"},{"tag":"sourcefile","title":"Catalyst/src/Catalyst.jl","docid":"sourcefiles/Catalyst/src/Catalyst.jl"},{"tag":"documentation","title":"ODEForwardSensitivityProblem","docid":"references/DiffEqSensitivity.ODEForwardSensitivityProblem"},{"tag":"document","title":"Strategies to Avoid Local Minima","docid":"DiffEqSensitivity/training_tips/local_minima.md"},{"tag":"document","title":"Neural Ordinary Differential Equations with GalacticOptim.jl","docid":"DiffEqSensitivity/neural_ode/neural_ode_galacticoptim.md"},{"tag":"document","title":"Parameter Estimation on Highly Stiff Systems","docid":"DiffEqSensitivity/ode_fitting/stiff_ode_fit.md"},{"tag":"document","title":"Catalyst.jl API","docid":"Catalyst/api/catalyst_api.md"},{"tag":"document","title":"[Direct Sensitivity Analysis Functionality]( direct_sensitivity)","docid":"DiffEqSensitivity/ad_examples/direct_sensitivity.md"},{"tag":"document","title":"Training Neural Networks in Hybrid Differential Equations","docid":"DiffEqSensitivity/hybrid_jump_fitting/hybrid_diffeq.md"},{"tag":"sourcefile","title":"DiffEqSensitivity/src/forward_sensitivity.jl","docid":"sourcefiles/DiffEqSensitivity/src/forward_sensitivity.jl"},{"tag":"document","title":"Parallelized Morris and Sobol Sensitivity Analysis of an ODE","docid":"GlobalSensitivity/tutorials/parallelized_gsa.md"},{"tag":"document","title":"Newton and Hessian-Free Newton-Krylov with Second Order Adjoint Sensitivity Analysis","docid":"DiffEqSensitivity/ode_fitting/second_order_adjoints.md"},{"tag":"sourcefile","title":"SciMLBase/src/SciMLBase.jl","docid":"sourcefiles/SciMLBase/src/SciMLBase.jl"},{"tag":"sourcefile","title":"DiffEqFlux/src/neural_de.jl","docid":"sourcefiles/DiffEqFlux/src/neural_de.jl"},{"tag":"document","title":"Physics-Informed Machine Learning (PIML) with TensorLayer","docid":"DiffEqFlux/examples/tensor_layer.md"},{"tag":"sourcefile","title":"SciMLBase/src/problems/ode_problems.jl","docid":"sourcefiles/SciMLBase/src/problems/ode_problems.jl"},{"tag":"document","title":"Parameter Estimation","docid":"Catalyst/tutorials/parameter_estimation.md"},{"tag":"sourcefile","title":"DiffEqFlux/src/multiple_shooting.jl","docid":"sourcefiles/DiffEqFlux/src/multiple_shooting.jl"},{"tag":"document","title":"Bayesian Neural ODEs: NUTS","docid":"DiffEqSensitivity/bayesian/BayesianNODE_NUTS.md"},{"tag":"document","title":"[Solving Optimal Control Problems with Universal Differential Equations]( optcontrol)","docid":"DiffEqSensitivity/optimal_control/optimal_control.md"},{"tag":"document","title":"Training a Neural Ordinary Differential Equation with Mini-Batching","docid":"DiffEqSensitivity/neural_ode/minibatch.md"},{"tag":"document","title":"Neural Ordinary Differential Equations","docid":"DiffEqFlux/examples/neural_ode.md"},{"tag":"document","title":"Prediction error method (PEM)","docid":"DiffEqSensitivity/ode_fitting/prediction_error_method.md"},{"tag":"sourcefile","title":"DiffEqSensitivity/src/quadrature_adjoint.jl","docid":"sourcefiles/DiffEqSensitivity/src/quadrature_adjoint.jl"},{"tag":"sourcefile","title":"DiffEqSensitivity/src/backsolve_adjoint.jl","docid":"sourcefiles/DiffEqSensitivity/src/backsolve_adjoint.jl"},{"tag":"document","title":"Global Sensitivity Analysis of the Lotka-Volterra model","docid":"GlobalSensitivity/tutorials/juliacon21.md"},{"tag":"document","title":"Example: Nice DiffEq Syntax Without A DSL","docid":"LabelledArrays/Example_dsl.md"},{"tag":"document","title":"Handling Divergent and Unstable Trajectories","docid":"DiffEqSensitivity/training_tips/divergence.md"},{"tag":"document","title":"The Reaction DSL","docid":"Catalyst/tutorials/dsl.md"},{"tag":"documentation","title":"BacksolveAdjoint","docid":"references/DiffEqSensitivity.BacksolveAdjoint"},{"tag":"sourcefile","title":"ModelingToolkit/src/systems/diffeqs/modelingtoolkitize.jl","docid":"sourcefiles/ModelingToolkit/src/systems/diffeqs/modelingtoolkitize.jl"},{"tag":"document","title":"Solving ODEs with Neural Networks","docid":"NeuralPDE/examples/ode.md"},{"tag":"document","title":"Multiple Shooting","docid":"DiffEqFlux/examples/multiple_shooting.md"},{"tag":"document","title":"Data-Parallel Multithreaded, Distributed, and Multi-GPU Batching","docid":"DiffEqSensitivity/ode_fitting/data_parallel.md"},{"tag":"document","title":"Smoothed Collocation for Fast Two-Stage Training","docid":"DiffEqFlux/examples/collocation.md"},{"tag":"sourcefile","title":"Catalyst/src/reactionsystem.jl","docid":"sourcefiles/Catalyst/src/reactionsystem.jl"},{"tag":"sourcefile","title":"ModelingToolkit/src/systems/diffeqs/abstractodesystem.jl","docid":"sourcefiles/ModelingToolkit/src/systems/diffeqs/abstractodesystem.jl"},{"tag":"document","title":"ParameterizedFunctions.jl: Simple High Level ODE Definitions","docid":"ParameterizedFunctions/index.md"},{"tag":"documentation","title":"ODEFunction","docid":"references/SciMLBase.ODEFunction"},{"tag":"document","title":"Minibatch examples","docid":"Optimization/tutorials/minibatch.md"},{"tag":"sourcefile","title":"SciMLBase/src/remake.jl","docid":"sourcefiles/SciMLBase/src/remake.jl"},{"tag":"sourcefile","title":"DiffEqSensitivity/src/concrete_solve.jl","docid":"sourcefiles/DiffEqSensitivity/src/concrete_solve.jl"},{"tag":"documentation","title":"liouville_transform","docid":"references/ModelingToolkit.liouville_transform"},{"tag":"document","title":"Universal Differential Equations for Neural Feedback Control","docid":"DiffEqSensitivity/optimal_control/feedback_control.md"},{"tag":"document","title":"Bouncing Ball Hybrid ODE Optimization","docid":"DiffEqSensitivity/hybrid_jump_fitting/bouncing_ball.md"},{"tag":"document","title":"Handling Exogenous Input Signals","docid":"DiffEqSensitivity/ode_fitting/exogenous_input.md"},{"tag":"sourcefile","title":"DiffEqFlux/src/ffjord.jl","docid":"sourcefiles/DiffEqFlux/src/ffjord.jl"},{"tag":"document","title":"[Differentiating an ODE Solution with Automatic Differentiation]( auto_diff)","docid":"DiffEqSensitivity/ad_examples/differentiating_ode.md"},{"tag":"document","title":"Composing Ordinary Differential Equations","docid":"ModelingToolkit/tutorials/ode_modeling.md"},{"tag":"documentation","title":"SteadyStateProblem","docid":"references/SciMLBase.SteadyStateProblem"},{"tag":"document","title":"Basic Chemical Reaction Network Examples","docid":"Catalyst/tutorials/basic_examples.md"},{"tag":"document","title":"[Sensitivity analysis for chaotic systems (shadowing methods)]( shadowing_methods)","docid":"DiffEqSensitivity/ad_examples/chaotic_ode.md"},{"tag":"documentation","title":"second_order_sensitivities","docid":"references/DiffEqSensitivity.second_order_sensitivities"},{"tag":"document","title":"Benchmarks","docid":"DiffEqSensitivity/Benchmark.md"},{"tag":"document","title":"Optimising Parameters of a Lorenz System","docid":"NeuralPDE/pinn/parm_estim.md"},{"tag":"document","title":"Enforcing Physical Constraints via Universal Differential-Algebraic Equations","docid":"DiffEqSensitivity/dae_fitting/physical_constraints.md"},{"tag":"document","title":"[Sensitivity Algorithms for Differential Equations with Automatic Differentiation (AD)]( sensitivity_diffeq)","docid":"DiffEqSensitivity/manual/differential_equation_sensitivities.md"},{"tag":"document","title":"FAQs","docid":"Catalyst/faqs.md"},{"tag":"sourcefile","title":"ModelingToolkit/src/ModelingToolkit.jl","docid":"sourcefiles/ModelingToolkit/src/ModelingToolkit.jl"},{"tag":"sourcefile","title":"ModelingToolkit/src/systems/diffeqs/odesystem.jl","docid":"sourcefiles/ModelingToolkit/src/systems/diffeqs/odesystem.jl"},{"tag":"document","title":"Using Catalyst","docid":"Catalyst/tutorials/using_catalyst.md"},{"tag":"document","title":"SciMLProblems","docid":"SciMLBase/interfaces/Problems.md"},{"tag":"document","title":"Catalyst.jl for Reaction Models","docid":"Catalyst/index.md"},{"tag":"document","title":"Automated Sparse Analytical Jacobians","docid":"ModelingToolkit/mtkitize_tutorials/sparse_jacobians.md"},{"tag":"sourcefile","title":"ModelingToolkit/src/structural_transformation/codegen.jl","docid":"sourcefiles/ModelingToolkit/src/structural_transformation/codegen.jl"},{"tag":"sourcefile","title":"MethodOfLines/src/discretization/MOL_discretization.jl","docid":"sourcefiles/MethodOfLines/src/discretization/MOL_discretization.jl"},{"tag":"sourcefile","title":"DiffEqSensitivity/src/sensitivity_interface.jl","docid":"sourcefiles/DiffEqSensitivity/src/sensitivity_interface.jl"},{"tag":"documentation","title":"second_order_sensitivity_product","docid":"references/DiffEqSensitivity.second_order_sensitivity_product"},{"tag":"document","title":"Partial Differential Equation (PDE) Constrained Optimization","docid":"DiffEqSensitivity/pde_fitting/pde_constrained.md"},{"tag":"document","title":"Optimization of Ordinary Differential Equations","docid":"DiffEqSensitivity/ode_fitting/optimization_ode.md"},{"tag":"document","title":"Solving KdV Solitons with Upwinding Operators","docid":"DiffEqOperators/operator_tutorials/kdv.md"},{"tag":"documentation","title":"adjoint_sensitivities","docid":"references/DiffEqSensitivity.adjoint_sensitivities"},{"tag":"document","title":"[Model Validation and Units]( units)","docid":"ModelingToolkit/basics/Validation.md"},{"tag":"document","title":"Simultaneous Fitting of Multiple Neural Networks","docid":"DiffEqSensitivity/training_tips/multiple_nn.md"},{"tag":"sourcefile","title":"DiffEqSensitivity/src/interpolating_adjoint.jl","docid":"sourcefiles/DiffEqSensitivity/src/interpolating_adjoint.jl"}],"methods":[{"line":719,"file":"/Users/lorenz/.julia/packages/ModelingToolkit/fp90z/src/systems/diffeqs/abstractodesystem.jl","method_id":"SciMLBase.ODEProblem_1","symbol_id":"SciMLBase.ODEProblem","filedoc":"sourcefiles/SciMLBase/src/systems/diffeqs/abstractodesystem.jl","signature":"ODEProblem(sys::ModelingToolkit.AbstractODESystem, args...; kwargs...)"},{"line":1187,"file":"/Users/lorenz/.julia/packages/Catalyst/2UqoT/src/reactionsystem.jl","method_id":"SciMLBase.ODEProblem_2","symbol_id":"SciMLBase.ODEProblem","filedoc":"sourcefiles/SciMLBase/src/reactionsystem.jl","signature":"ODEProblem(rs::Catalyst.ReactionSystem, u0, tspan)"},{"line":1187,"file":"/Users/lorenz/.julia/packages/Catalyst/2UqoT/src/reactionsystem.jl","method_id":"SciMLBase.ODEProblem_3","symbol_id":"SciMLBase.ODEProblem","filedoc":"sourcefiles/SciMLBase/src/reactionsystem.jl","signature":"ODEProblem(rs::Catalyst.ReactionSystem, u0, tspan, p, args...; check_length, name, combinatoric_ratelaws, include_zero_odes, remove_conserved, checks, kwargs...)"},{"line":129,"file":"/Users/lorenz/.julia/packages/SciMLBase/dYFnI/src/problems/ode_problems.jl","method_id":"SciMLBase.ODEProblem_4","symbol_id":"SciMLBase.ODEProblem","filedoc":"sourcefiles/SciMLBase/src/problems/ode_problems.jl","signature":"ODEProblem(f::SciMLBase.AbstractODEFunction, u0, tspan, args...; kwargs...)"},{"line":133,"file":"/Users/lorenz/.julia/packages/SciMLBase/dYFnI/src/problems/ode_problems.jl","method_id":"SciMLBase.ODEProblem_5","symbol_id":"SciMLBase.ODEProblem","filedoc":"sourcefiles/SciMLBase/src/problems/ode_problems.jl","signature":"ODEProblem(f, u0, tspan)"},{"line":133,"file":"/Users/lorenz/.julia/packages/SciMLBase/dYFnI/src/problems/ode_problems.jl","method_id":"SciMLBase.ODEProblem_6","symbol_id":"SciMLBase.ODEProblem","filedoc":"sourcefiles/SciMLBase/src/problems/ode_problems.jl","signature":"ODEProblem(f, u0, tspan, p; kwargs...)"}],"name":"ODEProblem","title":"ODEProblem","symbol_id":"SciMLBase.ODEProblem","public":true,"module_id":"SciMLBase"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"p","children":["Defines an ordinary differential equation (ODE) problem. Documentation Page: https://diffeq.sciml.ai/stable/types/ode_types/"],"type":"node"},{"attributes":{},"tag":"h2","children":["Mathematical Specification of an ODE Problem"],"type":"node"},{"attributes":{},"tag":"p","children":["To define an ODE Problem, you simply need to give the function ",{"attributes":{},"tag":"math","children":["f"],"type":"node"}," and the initial condition ",{"attributes":{},"tag":"math","children":["u_0"],"type":"node"}," which define an ODE:"],"type":"node"},{"attributes":{},"tag":"mathblock","children":["M \\frac{du}{dt} = f(u,p,t)"],"type":"node"},{"attributes":{},"tag":"p","children":["There are two different ways of specifying ",{"attributes":{},"tag":"code","children":["f"],"type":"node"},":"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["f(du,u,p,t)"],"type":"node"},": in-place. Memory-efficient when avoiding allocations. Best option for most cases unless mutation is not allowed."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["f(u,p,t)"],"type":"node"},": returning ",{"attributes":{},"tag":"code","children":["du"],"type":"node"},". Less memory-efficient way, particularly suitable when mutation is not allowed (e.g. with certain automatic differentiation packages such as Zygote)."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["u₀"],"type":"node"}," should be an AbstractArray (or number) whose geometry matches the desired geometry of ",{"attributes":{},"tag":"code","children":["u"],"type":"node"},". Note that we are not limited to numbers or vectors for ",{"attributes":{},"tag":"code","children":["u₀"],"type":"node"},"; one is allowed to provide ",{"attributes":{},"tag":"code","children":["u₀"],"type":"node"}," as arbitrary matrices / higher dimension tensors as well."],"type":"node"},{"attributes":{},"tag":"p","children":["For the mass matrix ",{"attributes":{},"tag":"math","children":["M"],"type":"node"},", see the documentation of ",{"attributes":{},"tag":"code","children":["ODEFunction"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"h2","children":["Problem Type"],"type":"node"},{"attributes":{},"tag":"h3","children":["Constructors"],"type":"node"},{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["ODEProblem"],"type":"node"}," can be constructed by first building an ",{"attributes":{},"tag":"code","children":["ODEFunction"],"type":"node"}," or by simply passing the ODE right-hand side to the constructor. The constructors are:"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["ODEProblem(f::ODEFunction,u0,tspan,p=NullParameters();kwargs...)"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["ODEProblem{isinplace}(f,u0,tspan,p=NullParameters();kwargs...)"],"type":"node"}," : Defines the ODE with the specified functions. ",{"attributes":{},"tag":"code","children":["isinplace"],"type":"node"}," optionally sets whether the function is inplace or not. This is determined automatically, but not inferred."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Parameters are optional, and if not given then a ",{"attributes":{},"tag":"code","children":["NullParameters()"],"type":"node"}," singleton will be used which will throw nice errors if you try to index non-existent parameters. Any extra keyword arguments are passed on to the solvers. For example, if you set a ",{"attributes":{},"tag":"code","children":["callback"],"type":"node"}," in the problem, then that ",{"attributes":{},"tag":"code","children":["callback"],"type":"node"}," will be added in every solve call."],"type":"node"},{"attributes":{},"tag":"p","children":["For specifying Jacobians and mass matrices, see the ",{"attributes":{},"tag":"code","children":["ODEFunction"],"type":"node"}," documentation."],"type":"node"},{"attributes":{},"tag":"h3","children":["Fields"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["f"],"type":"node"},": The function in the ODE."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["u0"],"type":"node"},": The initial condition."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["tspan"],"type":"node"},": The timespan for the problem."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["p"],"type":"node"},": The parameters."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["kwargs"],"type":"node"},": The keyword arguments passed onto the solves."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h2","children":["Example Problems"],"type":"node"},{"attributes":{},"tag":"p","children":["Example problems can be found in ",{"attributes":{"href":"https://github.com/JuliaDiffEq/DiffEqProblemLibrary.jl/tree/master/src/ode","title":""},"tag":"a","children":["DiffEqProblemLibrary.jl"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["To use a sample problem, such as ",{"attributes":{},"tag":"code","children":["prob_ode_linear"],"type":"node"},", you can do something like:"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"COMMENT","children":["#] add DiffEqProblemLibrary"],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"},{"attributes":{},"tag":"USING","children":[{"attributes":{},"tag":"USING","children":["using"],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["DiffEqProblemLibrary"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["ODEProblemLibrary"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"},{"attributes":{},"tag":"COMMENT","children":["# load problems"],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["ODEProblemLibrary"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"IDENTIFIER","children":["importodeproblems"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"},{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"IDENTIFIER","children":["prob"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["ODEProblemLibrary"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"IDENTIFIER","children":["prob_ode_linear"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"},{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"IDENTIFIER","children":["sol"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/CommonSolve.solve"},"tag":"reference","children":["solve"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["prob"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"hr","children":[{"mimes":{"text/plain":"Any[]"},"type":"leaf"},{"mimes":{"text/plain":"Dict{Symbol, String}()"},"type":"leaf"}],"type":"node"},{"attributes":{"lang":""},"tag":"codeblock","children":["ODEProblem(f::ODEFunction,u0,tspan,p=NullParameters(),callback=CallbackSet())\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Define an ODE problem from an ",{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["ODEFunction"],"type":"node"}],"type":"node"},"."],"type":"node"}],"type":"node"}],"type":"node"}