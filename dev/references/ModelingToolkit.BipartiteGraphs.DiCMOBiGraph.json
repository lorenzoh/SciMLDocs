{"attributes":{"kind":"struct","backlinks":[{"tag":"sourcefile","title":"ModelingToolkit/src/structural_transformation/bipartite_tearing/modia_tearing.jl","docid":"sourcefiles/ModelingToolkit/src/structural_transformation/bipartite_tearing/modia_tearing.jl"},{"tag":"sourcefile","title":"ModelingToolkit/src/bipartite_graph.jl","docid":"sourcefiles/ModelingToolkit/src/bipartite_graph.jl"},{"tag":"sourcefile","title":"ModelingToolkit/src/structural_transformation/tearing.jl","docid":"sourcefiles/ModelingToolkit/src/structural_transformation/tearing.jl"},{"tag":"sourcefile","title":"ModelingToolkit/src/structural_transformation/partial_state_selection.jl","docid":"sourcefiles/ModelingToolkit/src/structural_transformation/partial_state_selection.jl"},{"tag":"sourcefile","title":"ModelingToolkit/src/structural_transformation/utils.jl","docid":"sourcefiles/ModelingToolkit/src/structural_transformation/utils.jl"},{"tag":"sourcefile","title":"ModelingToolkit/src/structural_transformation/symbolics_tearing.jl","docid":"sourcefiles/ModelingToolkit/src/structural_transformation/symbolics_tearing.jl"},{"tag":"sourcefile","title":"ModelingToolkit/src/structural_transformation/codegen.jl","docid":"sourcefiles/ModelingToolkit/src/structural_transformation/codegen.jl"}],"methods":[],"name":"DiCMOBiGraph","title":"DiCMOBiGraph","symbol_id":"ModelingToolkit.BipartiteGraphs.DiCMOBiGraph","public":true,"module_id":"ModelingToolkit.BipartiteGraphs"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["struct DiCMOBiGraph\n"],"type":"node"},{"attributes":{},"tag":"p","children":["This data structure implements a \"directed, contracted, matching-oriented\" view of an original (undirected) bipartite graph. It has two modes, depending on the ",{"attributes":{},"tag":"code","children":["Transposed"],"type":"node"}," flag, which switches the direction of the induced matching."],"type":"node"},{"attributes":{},"tag":"p","children":["Essentially the graph adapter performs two largely orthogonal functions [",{"attributes":{},"tag":"code","children":["Transposed == true"],"type":"node"}," differences are indicated in square brackets]:"],"type":"node"},{"attributes":{},"tag":"ol","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["It pairs an undirected bipartite graph with a matching of the destination vertex."],"type":"node"},{"attributes":{},"tag":"p","children":["This matching is used to induce an orientation on the otherwise undirected graph: Matched edges pass from destination to source [source to desination], all other edges pass in the opposite direction."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["It exposes the graph view obtained by contracting the destination [source] vertices along the matched edges."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["The result of this operation is an induced, directed graph on the source [destination] vertices. The resulting graph has a few desirable properties. In particular, this graph is acyclic if and only if the induced directed graph on the original bipartite graph is acyclic."],"type":"node"},{"attributes":{},"tag":"h1","children":["Hypergraph interpretation"],"type":"node"},{"attributes":{},"tag":"p","children":["Consider the bipartite graph ",{"attributes":{},"tag":"code","children":["B"],"type":"node"}," as the incidence graph of some hypergraph ",{"attributes":{},"tag":"code","children":["H"],"type":"node"},". Note that a maching ",{"attributes":{},"tag":"code","children":["M"],"type":"node"}," on ",{"attributes":{},"tag":"code","children":["B"],"type":"node"}," in the above sense is equivalent to determining an (1,n)-orientation on the hypergraph (i.e. each directed hyperedge has exactly one head, but any arbitrary number of tails). In this setting, this is simply the graph formed by expanding each directed hyperedge into ",{"attributes":{},"tag":"code","children":["n"],"type":"node"}," ordinary edges between the same vertices."],"type":"node"}],"type":"node"}],"type":"node"}