{"attributes":{"kind":"struct","backlinks":[{"tag":"sourcefile","title":"SciMLBase/src/problems/basic_problems.jl","docid":"sourcefiles/SciMLBase/src/problems/basic_problems.jl"},{"tag":"sourcefile","title":"Integrals/src/Integrals.jl","docid":"sourcefiles/Integrals/src/Integrals.jl"},{"tag":"sourcefile","title":"SciMLBase/src/SciMLBase.jl","docid":"sourcefiles/SciMLBase/src/SciMLBase.jl"},{"tag":"document","title":"Numerically Solving Integrals","docid":"Integrals/tutorials/numerical_integrals.md"},{"tag":"sourcefile","title":"NeuralPDE/src/pinns_pde_solve.jl","docid":"sourcefiles/NeuralPDE/src/pinns_pde_solve.jl"},{"tag":"document","title":"Differentiating Integrals","docid":"Integrals/tutorials/differentiating_integrals.md"}],"methods":[{"line":229,"file":"/Users/lorenz/.julia/packages/SciMLBase/dYFnI/src/problems/basic_problems.jl","method_id":"SciMLBase.IntegralProblem_1","symbol_id":"SciMLBase.IntegralProblem","filedoc":"sourcefiles/SciMLBase/src/problems/basic_problems.jl","signature":"IntegralProblem(f, lb, ub, args...; kwargs...)"}],"name":"IntegralProblem","title":"IntegralProblem","symbol_id":"SciMLBase.IntegralProblem","public":true,"module_id":"SciMLBase"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"p","children":["Defines an integral problem. Documentation Page: https://github.com/SciML/Integrals.jl"],"type":"node"},{"attributes":{},"tag":"h2","children":["Mathematical Specification of a Integral Problem"],"type":"node"},{"attributes":{},"tag":"p","children":["Integral problems are multi-dimensional integrals defined as:"],"type":"node"},{"attributes":{},"tag":"mathblock","children":["\\int_{lb}^{ub} f(u,p) du"],"type":"node"},{"attributes":{},"tag":"p","children":["where ",{"attributes":{},"tag":"math","children":["p"],"type":"node"}," are parameters. ",{"attributes":{},"tag":"code","children":["u"],"type":"node"}," is a ",{"attributes":{},"tag":"code","children":["Number"],"type":"node"}," or ",{"attributes":{},"tag":"code","children":["AbstractArray"],"type":"node"}," whose geometry matches the space being integrated."],"type":"node"},{"attributes":{},"tag":"h2","children":["Problem Type"],"type":"node"},{"attributes":{},"tag":"h3","children":["Constructors"],"type":"node"},{"attributes":{},"tag":"p","children":["IntegralProblem(f,lb,ub,p=NullParameters();                   nout=1, batch = 0, kwargs...)"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["f: the integrand, ",{"attributes":{},"tag":"code","children":["dx=f(x,p)"],"type":"node"}," for out-of-place or ",{"attributes":{},"tag":"code","children":["f(dx,x,p)"],"type":"node"}," for in-place."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["lb: Either a number or vector of lower bounds."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["ub: Either a number or vector of upper bounds."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["p: The parameters associated with the problem."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["nout: The output size of the function f. Defaults to 1, i.e., a scalar integral output."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["batch: The preferred number of points to batch. This allows user-side parallelization  of the integrand. If batch != 0, then each x[:,i] is a different point of the integral  to calculate, and the output should be nout x batchsize. Note that batch is a suggestion  for the number of points, and it is not necessarily true that batch is the same as  batchsize in all algorithms."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["kwargs:: Keyword arguments copied to the solvers."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Additionally, we can supply iip like IntegralProblem(...) as true or false to declare at  compile time whether the integrator function is in-place."],"type":"node"},{"attributes":{},"tag":"h3","children":["Fields"],"type":"node"},{"attributes":{},"tag":"p","children":["The fields match the names of the constructor arguments."],"type":"node"}],"type":"node"}],"type":"node"}