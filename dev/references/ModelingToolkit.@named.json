{"attributes":{"kind":"function","backlinks":[],"methods":[{"line":951,"file":"/Users/lorenz/.julia/packages/ModelingToolkit/fp90z/src/systems/abstractsystem.jl","method_id":"ModelingToolkit.@named_1","symbol_id":"ModelingToolkit.@named","filedoc":"sourcefiles/ModelingToolkit/src/systems/abstractsystem.jl","signature":"var\"@named\"(__source__::LineNumberNode, __module__::Module, name::Symbol, idxs, call)"},{"line":939,"file":"/Users/lorenz/.julia/packages/ModelingToolkit/fp90z/src/systems/abstractsystem.jl","method_id":"ModelingToolkit.@named_2","symbol_id":"ModelingToolkit.@named","filedoc":"sourcefiles/ModelingToolkit/src/systems/abstractsystem.jl","signature":"var\"@named\"(__source__::LineNumberNode, __module__::Module, expr)"}],"name":"@named","title":"@named","symbol_id":"ModelingToolkit.@named","public":true,"module_id":"ModelingToolkit"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["@named y = foo(x)\n@named y[1:10] = foo(x)\n@named y 1:10 i -> foo(x*i)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Rewrite ",{"attributes":{},"tag":"code","children":["@named y = foo(x)"],"type":"node"}," to ",{"attributes":{},"tag":"code","children":["y = foo(x; name=:y)"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["Rewrite ",{"attributes":{},"tag":"code","children":["@named y[1:10] = foo(x)"],"type":"node"}," to ",{"attributes":{},"tag":"code","children":["y = map(i′->foo(x; name=Symbol(:y_, i′)), 1:10)"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["Rewrite ",{"attributes":{},"tag":"code","children":["@named y 1:10 i -> foo(x*i)"],"type":"node"}," to ",{"attributes":{},"tag":"code","children":["y = map(i->foo(x*i; name=Symbol(:y_, i)), 1:10)"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["Examples:"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":["julia> using ModelingToolkit\n\njulia> foo(i; name) = i, name\nfoo (generic function with 1 method)\n\njulia> x = 41\n41\n\njulia> @named y = foo(x)\n(41, :y)\n\njulia> @named y[1:3] = foo(x)\n3-element Vector{Tuple{Int64, Symbol}}:\n (41, :y_1)\n (41, :y_2)\n (41, :y_3)\n\njulia> @named y 1:3 i -> foo(x*i)\n3-element Vector{Tuple{Int64, Symbol}}:\n (41, :y_1)\n (82, :y_2)\n (123, :y_3)"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}