{"attributes":{"backlinks":[],"path":"/Users/lorenz/.julia/packages/LabelledArrays/lfn1b/docs/src/LArrays.md","title":"LArrays"},"tag":"document","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"h1","children":["LArrays"],"type":"node"},{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["LArrays"],"type":"node"}," are fully mutable arrays with labels. There is no performance loss by using labelled indexing instead of purely numerical indexing. Using the macro with values and labels generates the labelled array with the given values:"],"type":"node"},{"attributes":{},"tag":"p","children":["Users interested in using labelled elements in their arrays should also consider ",{"attributes":{},"tag":"code","children":["ComponentArrays"],"type":"node"}," from the ",{"attributes":{"href":"https://github.com/jonniedie/ComponentArrays.jl","title":""},"tag":"a","children":["ComponentArrays.jl"],"type":"node"}," library. ",{"attributes":{},"tag":"code","children":["ComponentArrays"],"type":"node"}," are well integrated into the SciML ecosystem."],"type":"node"},{"attributes":{},"tag":"h2","children":[{"attributes":{},"tag":"code","children":["@LArray"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["@LVector"],"type":"node"}," macros"],"type":"node"},{"attributes":{},"tag":"p","children":["Macro constructors are convenient for building most ",{"attributes":{},"tag":"code","children":["LArray"],"type":"node"}," objects. An ",{"attributes":{},"tag":"code","children":["@LArray"],"type":"node"}," may be of arbitrary dimension while an ",{"attributes":{},"tag":"code","children":["@LVector"],"type":"node"}," is a one dimensional array."],"type":"node"},{"attributes":{"lang":"@docs"},"tag":"codeblock","children":["@LArray\n@LVector\n"],"type":"node"},{"attributes":{},"tag":"h2","children":[{"attributes":{},"tag":"code","children":["LArray"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["LVector"],"type":"node"}," constructors"],"type":"node"},{"attributes":{},"tag":"p","children":["The original constructors for ",{"attributes":{},"tag":"code","children":["LArray"],"type":"node"},"s and ",{"attributes":{},"tag":"code","children":["LVector"],"type":"node"},"s are as follows:"],"type":"node"},{"attributes":{"lang":"@docs"},"tag":"codeblock","children":["LArray\nLVector\n"],"type":"node"},{"attributes":{},"tag":"h2","children":["Manipulating ",{"attributes":{},"tag":"code","children":["LArrays"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["LVectors"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["User may want a list of the labels or keys in an ",{"attributes":{},"tag":"code","children":["LArray"],"type":"node"}," or ",{"attributes":{},"tag":"code","children":["LVector"],"type":"node"},". The ",{"attributes":{},"tag":"code","children":["symbols(::LArray)"],"type":"node"}," function returns a tuple of array labels."],"type":"node"},{"attributes":{"lang":"@docs"},"tag":"codeblock","children":["symbols\n"],"type":"node"}],"type":"node"}],"type":"node"}