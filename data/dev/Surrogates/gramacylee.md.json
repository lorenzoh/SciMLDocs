{"attributes":{"backlinks":[],"path":"/Users/lorenz/.julia/packages/Surrogates/zwNvG/docs/src/gramacylee.md","title":"gramacylee"},"tag":"document","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"h2","children":["Gramacy & Lee Function"],"type":"node"},{"attributes":{},"tag":"p","children":["Gramacy & Lee Function is a continues function. It is not convex. The function is defined on 1-dimensional space. It is an unimodal. The function can be defined on any input domain but it is usually evaluated on ",{"attributes":{},"tag":"math","children":["x \\in [-0.5, 2.5]"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["The Gramacy & Lee is as follows: ",{"attributes":{},"tag":"math","children":["f(x) = \\frac{sin(10\\pi x)}{2x} + (x-1)^4"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["Let's import these two packages ",{"attributes":{},"tag":"code","children":["Surrogates"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["Plots"],"type":"node"},":"],"type":"node"},{"attributes":{"lang":"@example gramacylee1D"},"tag":"codeblock","children":["using Surrogates\nusing Plots\ndefault()\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Now, let's define our objective function:"],"type":"node"},{"attributes":{"lang":"@example gramacylee1D"},"tag":"codeblock","children":["function gramacylee(x)\n    term1 = sin(10*pi*x) / 2*x;\n    term2 = (x - 1)^4;\n    y = term1 + term2;\nend\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Let's sample f in 25 points between -0.5 and 2.5 using the ",{"attributes":{},"tag":"code","children":["sample"],"type":"node"}," function. The sampling points are chosen using a Sobol Sample, this can be done by passing ",{"attributes":{},"tag":"code","children":["SobolSample()"],"type":"node"}," to the ",{"attributes":{},"tag":"code","children":["sample"],"type":"node"}," function."],"type":"node"},{"attributes":{"lang":"@example gramacylee1D"},"tag":"codeblock","children":["n = 25\nlower_bound = -0.5\nupper_bound = 2.5\nx = sample(n, lower_bound, upper_bound, SobolSample())\ny = gramacylee.(x)\nxs = lower_bound:0.001:upper_bound\nscatter(x, y, label=\"Sampled points\", xlims=(lower_bound, upper_bound), ylims=(-5, 20), legend=:top)\nplot!(xs, gramacylee.(xs), label=\"True function\", legend=:top)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Now, let's fit Gramacy & Lee Function with different Surrogates:"],"type":"node"},{"attributes":{"lang":"@example gramacylee1D"},"tag":"codeblock","children":["my_pol = PolynomialChaosSurrogate(x, y, lower_bound, upper_bound)\nloba_1 = LobachevskySurrogate(x, y, lower_bound, upper_bound)\nkrig = Kriging(x, y, lower_bound, upper_bound)\nscatter(x, y, label=\"Sampled points\", xlims=(lower_bound, upper_bound), ylims=(-5, 20), legend=:top)\nplot!(xs, gramacylee.(xs), label=\"True function\", legend=:top)\nplot!(xs, my_pol.(xs), label=\"Polynomial expansion\", legend=:top)\nplot!(xs, loba_1.(xs), label=\"Lobachevsky\", legend=:top)\nplot!(xs, krig.(xs), label=\"Kriging\", legend=:top)\n"],"type":"node"}],"type":"node"}],"type":"node"}