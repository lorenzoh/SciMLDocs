{"attributes":{"backlinks":[],"path":"/Users/lorenz/.julia/packages/Surrogates/zwNvG/docs/src/polychaos.md","title":"Polynomial chaos surrogate"},"tag":"document","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"h1","children":["Polynomial chaos surrogate"],"type":"node"},{"attributes":{"class":"note"},"tag":"admonition","children":[{"attributes":{},"tag":"admonitiontitle","children":["Note"],"type":"node"},{"attributes":{},"tag":"admonitionbody","children":[{"attributes":{},"tag":"p","children":["This surrogate requires the 'SurrogatesPolyChaos' module which can be added by inputting \"]add SurrogatesPolyChaos\" from the Julia command line."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["We can create a surrogate using a polynomial expansion, with a different polynomial basis depending on the distribution of the data we are trying to fit. Under the hood, PolyChaos.jl has been used. It is possible to specify a type of polynomial for each dimension of the problem."],"type":"node"},{"attributes":{},"tag":"h3","children":["Sampling"],"type":"node"},{"attributes":{},"tag":"p","children":["We choose to sample f in 25 points between 0 and 10 using the ",{"attributes":{},"tag":"code","children":["sample"],"type":"node"}," function. The sampling points are chosen using a Low Discrepancy, this can be done by passing ",{"attributes":{},"tag":"code","children":["LowDiscrepancySample()"],"type":"node"}," to the ",{"attributes":{},"tag":"code","children":["sample"],"type":"node"}," function."],"type":"node"},{"attributes":{"lang":"@example polychaos"},"tag":"codeblock","children":["using Surrogates\nusing SurrogatesPolyChaos\nusing Plots\ndefault()\n\nn = 20\nlower_bound = 1.0\nupper_bound = 6.0\nx = sample(n,lower_bound,upper_bound,LowDiscrepancySample(2))\nf = x -> log(x)*x + sin(x)\ny = f.(x)\nscatter(x, y, label=\"Sampled points\", xlims=(lower_bound, upper_bound), legend=:top)\nplot!(f, label=\"True function\", xlims=(lower_bound, upper_bound), legend=:top)\n"],"type":"node"},{"attributes":{},"tag":"h2","children":["Building a Surrogate"],"type":"node"},{"attributes":{"lang":"@example polychaos"},"tag":"codeblock","children":["poly1 = PolynomialChaosSurrogate(x,y,lower_bound,upper_bound)\npoly2 = PolynomialChaosSurrogate(x,y,lower_bound,upper_bound, op = SurrogatesPolyChaos.GaussOrthoPoly(5))\nplot(x, y, seriestype=:scatter, label=\"Sampled points\", xlims=(lower_bound, upper_bound), legend=:top)\nplot!(f, label=\"True function\",  xlims=(lower_bound, upper_bound), legend=:top)\nplot!(poly1, label=\"First polynomial\",  xlims=(lower_bound, upper_bound), legend=:top)\nplot!(poly2, label=\"Second polynomial\",  xlims=(lower_bound, upper_bound), legend=:top)\n"],"type":"node"}],"type":"node"}],"type":"node"}