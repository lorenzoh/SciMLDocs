{"attributes":{"backlinks":[],"path":"/Users/lorenz/.julia/packages/Surrogates/zwNvG/docs/src/ackley.md","title":"Ackley function"},"tag":"document","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"h1","children":["Ackley function"],"type":"node"},{"attributes":{},"tag":"p","children":["The Ackley function is defined as: ",{"attributes":{},"tag":"math","children":["f(x) = -a*exp(-b\\sqrt{\\frac{1}{d}\\sum_{i=1}^d x_i^2}) - exp(\\frac{1}{d} \\sum_{i=1}^d cos(cx_i)) + a + exp(1)"],"type":"node"}," Usually the recommended values are: ",{"attributes":{},"tag":"math","children":["a = 20"],"type":"node"},", ",{"attributes":{},"tag":"math","children":["b = 0.2"],"type":"node"}," and ",{"attributes":{},"tag":"math","children":["c = 2\\pi"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Let's see the 1D case."],"type":"node"},{"attributes":{"lang":"@example ackley"},"tag":"codeblock","children":["using Surrogates\nusing Plots\ndefault()\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Now, let's define the ",{"attributes":{},"tag":"code","children":["Ackley"],"type":"node"}," function:"],"type":"node"},{"attributes":{"lang":"@example ackley"},"tag":"codeblock","children":["function ackley(x)\n    a, b, c = 20.0, -0.2, 2.0*Ï€\n    len_recip = inv(length(x))\n    sum_sqrs = zero(eltype(x))\n    sum_cos = sum_sqrs\n    for i in x\n        sum_cos += cos(c*i)\n        sum_sqrs += i^2\n    end\n    return (-a * exp(b * sqrt(len_recip*sum_sqrs)) -\n            exp(len_recip*sum_cos) + a + 2.71)\nend\n"],"type":"node"},{"attributes":{"lang":"@example ackley"},"tag":"codeblock","children":["n = 100\nlb = -32.768\nub = 32.768\nx = sample(n, lb, ub, SobolSample())\ny = ackley.(x)\nxs = lb:0.001:ub\nscatter(x, y, label=\"Sampled points\", xlims=(lb, ub), ylims=(0,30), legend=:top)\nplot!(xs, ackley.(xs), label=\"True function\", legend=:top)\n"],"type":"node"},{"attributes":{"lang":"@example ackley"},"tag":"codeblock","children":["my_rad = RadialBasis(x, y, lb, ub)\nmy_krig = Kriging(x, y, lb, ub)\nmy_loba = LobachevskySurrogate(x, y, lb, ub)\n"],"type":"node"},{"attributes":{"lang":"@example ackley"},"tag":"codeblock","children":["scatter(x, y, label=\"Sampled points\", xlims=(lb, ub), ylims=(0, 30), legend=:top)\nplot!(xs, ackley.(xs), label=\"True function\", legend=:top)\nplot!(xs, my_rad.(xs), label=\"Polynomial expansion\", legend=:top)\nplot!(xs, my_krig.(xs), label=\"Lobachevsky\", legend=:top)\nplot!(xs, my_loba.(xs), label=\"Kriging\", legend=:top)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["The fit looks good. Let's now see if we are able to find the minimum value using optimization methods:"],"type":"node"},{"attributes":{"lang":"@example ackley"},"tag":"codeblock","children":["surrogate_optimize(ackley,DYCORS(),lb,ub,my_rad,UniformSample())\nscatter(x, y, label=\"Sampled points\", xlims=(lb, ub), ylims=(0, 30), legend=:top)\nplot!(xs, ackley.(xs), label=\"True function\", legend=:top)\nplot!(xs, my_rad.(xs), label=\"Radial basis optimized\", legend=:top)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["The DYCORS methods successfully finds the minimum."],"type":"node"}],"type":"node"}],"type":"node"}