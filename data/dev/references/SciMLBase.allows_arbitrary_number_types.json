{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"SciMLBase/src/alg_traits.jl","docid":"sourcefiles/SciMLBase/src/alg_traits.jl"}],"methods":[{"line":4,"file":"/Users/lorenz/.julia/packages/OrdinaryDiffEq/irVAX/src/alg_utils.jl","method_id":"SciMLBase.allows_arbitrary_number_types_1","symbol_id":"SciMLBase.allows_arbitrary_number_types","filedoc":"sourcefiles/SciMLBase/src/alg_utils.jl","signature":"allows_arbitrary_number_types(alg::Union{OrdinaryDiffEqAlgorithm, OrdinaryDiffEq.DAEAlgorithm})"},{"line":4,"file":"/Users/lorenz/.julia/packages/DelayDiffEq/5rXFy/src/alg_utils.jl","method_id":"SciMLBase.allows_arbitrary_number_types_2","symbol_id":"SciMLBase.allows_arbitrary_number_types","filedoc":"sourcefiles/SciMLBase/src/alg_utils.jl","signature":"allows_arbitrary_number_types(alg::DelayDiffEq.AbstractMethodOfStepsAlgorithm)"},{"line":4,"file":"/Users/lorenz/.julia/packages/StochasticDiffEq/LYyNp/src/alg_utils.jl","method_id":"SciMLBase.allows_arbitrary_number_types_3","symbol_id":"SciMLBase.allows_arbitrary_number_types","filedoc":"sourcefiles/SciMLBase/src/alg_utils.jl","signature":"allows_arbitrary_number_types(alg::Union{StochasticDiffEqAlgorithm, StochasticDiffEqRODEAlgorithm})"},{"line":29,"file":"/Users/lorenz/.julia/packages/SteadyStateDiffEq/qtEru/src/algorithms.jl","method_id":"SciMLBase.allows_arbitrary_number_types_4","symbol_id":"SciMLBase.allows_arbitrary_number_types","filedoc":"sourcefiles/SciMLBase/src/algorithms.jl","signature":"allows_arbitrary_number_types(alg::DynamicSS)"},{"line":25,"file":"/Users/lorenz/.julia/packages/SteadyStateDiffEq/qtEru/src/algorithms.jl","method_id":"SciMLBase.allows_arbitrary_number_types_5","symbol_id":"SciMLBase.allows_arbitrary_number_types","filedoc":"sourcefiles/SciMLBase/src/algorithms.jl","signature":"allows_arbitrary_number_types(alg::SSRootfind)"},{"line":23,"file":"/Users/lorenz/.julia/packages/SciMLBase/dYFnI/src/alg_traits.jl","method_id":"SciMLBase.allows_arbitrary_number_types_6","symbol_id":"SciMLBase.allows_arbitrary_number_types","filedoc":"sourcefiles/SciMLBase/src/alg_traits.jl","signature":"allows_arbitrary_number_types(alg::SciMLBase.DEAlgorithm)"}],"name":"allows_arbitrary_number_types","title":"allows_arbitrary_number_types","symbol_id":"SciMLBase.allows_arbitrary_number_types","public":false,"module_id":"SciMLBase"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"p","children":["allows_arbitrary_number_types(alg::DEAlgorithm)"],"type":"node"},{"attributes":{},"tag":"p","children":["Trait declaration for whether an algorithm is compatible with direct automatic differentiation, i.e. can have algorithms like ForwardDiff or ReverseDiff attempt to differentiate directly through the solver."],"type":"node"},{"attributes":{},"tag":"p","children":["Defaults to false as only pure-Julia algorithms can have this be true."],"type":"node"}],"type":"node"}],"type":"node"}