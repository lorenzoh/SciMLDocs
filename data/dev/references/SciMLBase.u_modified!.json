{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"SciMLBase/src/SciMLBase.jl","docid":"sourcefiles/SciMLBase/src/SciMLBase.jl"},{"tag":"sourcefile","title":"SciMLBase/src/integrator_interface.jl","docid":"sourcefiles/SciMLBase/src/integrator_interface.jl"},{"tag":"sourcefile","title":"SciMLBase/src/callbacks.jl","docid":"sourcefiles/SciMLBase/src/callbacks.jl"},{"tag":"sourcefile","title":"DiffEqSensitivity/src/backsolve_adjoint.jl","docid":"sourcefiles/DiffEqSensitivity/src/backsolve_adjoint.jl"},{"tag":"sourcefile","title":"DiffEqSensitivity/src/adjoint_common.jl","docid":"sourcefiles/DiffEqSensitivity/src/adjoint_common.jl"}],"methods":[{"line":146,"file":"/Users/lorenz/.julia/packages/Sundials/k9hc3/src/common_interface/integrator_utils.jl","method_id":"SciMLBase.u_modified!_1","symbol_id":"SciMLBase.u_modified!","filedoc":"sourcefiles/SciMLBase/src/common_interface/integrator_utils.jl","signature":"u_modified!(integrator::Sundials.AbstractSundialsIntegrator, bool::Bool)"},{"line":48,"file":"/Users/lorenz/.julia/packages/OrdinaryDiffEq/irVAX/src/integrators/integrator_interface.jl","method_id":"SciMLBase.u_modified!_2","symbol_id":"SciMLBase.u_modified!","filedoc":"sourcefiles/SciMLBase/src/integrators/integrator_interface.jl","signature":"u_modified!(integrator::OrdinaryDiffEq.ODEIntegrator, bool::Bool)"},{"line":90,"file":"/Users/lorenz/.julia/packages/DiffEqJump/o7TPR/src/SSA_stepper.jl","method_id":"SciMLBase.u_modified!_3","symbol_id":"SciMLBase.u_modified!","filedoc":"sourcefiles/SciMLBase/src/SSA_stepper.jl","signature":"u_modified!(integrator::DiffEqJump.SSAIntegrator, bool::Bool)"},{"line":156,"file":"/Users/lorenz/.julia/packages/DelayDiffEq/5rXFy/src/integrators/interface.jl","method_id":"SciMLBase.u_modified!_4","symbol_id":"SciMLBase.u_modified!","filedoc":"sourcefiles/SciMLBase/src/integrators/interface.jl","signature":"u_modified!(integrator::DelayDiffEq.DDEIntegrator, bool::Bool)"},{"line":32,"file":"/Users/lorenz/.julia/packages/StochasticDiffEq/LYyNp/src/integrators/integrator_interface.jl","method_id":"SciMLBase.u_modified!_5","symbol_id":"SciMLBase.u_modified!","filedoc":"sourcefiles/SciMLBase/src/integrators/integrator_interface.jl","signature":"u_modified!(integrator::StochasticDiffEq.SDEIntegrator, bool::Bool)"},{"line":157,"file":"/Users/lorenz/.julia/packages/SciMLBase/dYFnI/src/integrator_interface.jl","method_id":"SciMLBase.u_modified!_6","symbol_id":"SciMLBase.u_modified!","filedoc":"sourcefiles/SciMLBase/src/integrator_interface.jl","signature":"u_modified!(i::SciMLBase.DEIntegrator, bool)"}],"name":"u_modified!","title":"u_modified!","symbol_id":"SciMLBase.u_modified!","public":true,"module_id":"SciMLBase"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["u_modified!(i::DEIntegrator,bool)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Sets ",{"attributes":{},"tag":"code","children":["bool"],"type":"node"}," which states whether a change to ",{"attributes":{},"tag":"code","children":["u"],"type":"node"}," occurred, allowing the solver to handle the discontinuity. By default, this is assumed to be true if a callback is used. This will result in the re-calculation of the derivative at ",{"attributes":{},"tag":"code","children":["t+dt"],"type":"node"},", which is not necessary if the algorithm is FSAL and ",{"attributes":{},"tag":"code","children":["u"],"type":"node"}," does not experience a discontinuous change at the end of the interval. Thus if ",{"attributes":{},"tag":"code","children":["u"],"type":"node"}," is unmodified in a callback, a single call to the derivative calculation can be eliminated by ",{"attributes":{},"tag":"code","children":["u_modified!(integrator,false)"],"type":"node"},"."],"type":"node"}],"type":"node"}],"type":"node"}