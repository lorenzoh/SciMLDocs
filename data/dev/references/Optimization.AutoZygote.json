{"attributes":{"kind":"struct","backlinks":[{"tag":"document","title":"Neural Ordinary Differential Equations with Flux.train!","docid":"DiffEqSensitivity/neural_ode/neural_ode_flux.md"},{"tag":"document","title":"Neural ODEs on GPUs","docid":"DiffEqSensitivity/neural_ode/GPUs.md"},{"tag":"document","title":"Strategies to Avoid Local Minima","docid":"DiffEqSensitivity/training_tips/local_minima.md"},{"tag":"document","title":"Neural Ordinary Differential Equations with GalacticOptim.jl","docid":"DiffEqSensitivity/neural_ode/neural_ode_galacticoptim.md"},{"tag":"document","title":"Parameter Estimation on Highly Stiff Systems","docid":"DiffEqSensitivity/ode_fitting/stiff_ode_fit.md"},{"tag":"sourcefile","title":"Optimization/src/function/zygote.jl","docid":"sourcefiles/Optimization/src/function/zygote.jl"},{"tag":"document","title":"Newton and Hessian-Free Newton-Krylov with Second Order Adjoint Sensitivity Analysis","docid":"DiffEqSensitivity/ode_fitting/second_order_adjoints.md"},{"tag":"document","title":"Rosenbrock function examples","docid":"Optimization/tutorials/rosenbrock.md"},{"tag":"document","title":"Physics-Informed Machine Learning (PIML) with TensorLayer","docid":"DiffEqFlux/examples/tensor_layer.md"},{"tag":"document","title":"[Solving Optimal Control Problems with Universal Differential Equations]( optcontrol)","docid":"DiffEqSensitivity/optimal_control/optimal_control.md"},{"tag":"documentation","title":"OptimizationFunction","docid":"references/SciMLBase.OptimizationFunction"},{"tag":"document","title":"Neural Ordinary Differential Equations","docid":"DiffEqFlux/examples/neural_ode.md"},{"tag":"document","title":"Prediction error method (PEM)","docid":"DiffEqSensitivity/ode_fitting/prediction_error_method.md"},{"tag":"sourcefile","title":"DiffEqFlux/src/train.jl","docid":"sourcefiles/DiffEqFlux/src/train.jl"},{"tag":"document","title":"Handling Divergent and Unstable Trajectories","docid":"DiffEqSensitivity/training_tips/divergence.md"},{"tag":"document","title":"Multiple Shooting","docid":"DiffEqFlux/examples/multiple_shooting.md"},{"tag":"document","title":"Data-Parallel Multithreaded, Distributed, and Multi-GPU Batching","docid":"DiffEqSensitivity/ode_fitting/data_parallel.md"},{"tag":"document","title":"Smoothed Collocation for Fast Two-Stage Training","docid":"DiffEqFlux/examples/collocation.md"},{"tag":"document","title":"Minibatch examples","docid":"Optimization/tutorials/minibatch.md"},{"tag":"sourcefile","title":"NeuralPDE/src/neural_adapter.jl","docid":"sourcefiles/NeuralPDE/src/neural_adapter.jl"},{"tag":"document","title":"Neural Second Order Ordinary Differential Equation","docid":"DiffEqSensitivity/ode_fitting/second_order_neural.md"},{"tag":"document","title":"Universal Differential Equations for Neural Feedback Control","docid":"DiffEqSensitivity/optimal_control/feedback_control.md"},{"tag":"document","title":"Bouncing Ball Hybrid ODE Optimization","docid":"DiffEqSensitivity/hybrid_jump_fitting/bouncing_ball.md"},{"tag":"document","title":"Systems of PDEs","docid":"NeuralPDE/pinn/system.md"},{"tag":"document","title":"Handling Exogenous Input Signals","docid":"DiffEqSensitivity/ode_fitting/exogenous_input.md"},{"tag":"document","title":"Delay Differential Equations","docid":"DiffEqSensitivity/dde_fitting/delay_diffeq.md"},{"tag":"sourcefile","title":"NeuralPDE/src/pinns_pde_solve.jl","docid":"sourcefiles/NeuralPDE/src/pinns_pde_solve.jl"},{"tag":"document","title":"Neural Stochastic Differential Equations","docid":"DiffEqSensitivity/sde_fitting/neural_sde.md"},{"tag":"document","title":"Enforcing Physical Constraints via Universal Differential-Algebraic Equations","docid":"DiffEqSensitivity/dae_fitting/physical_constraints.md"},{"tag":"document","title":"1-D Burgers' Equation With Low-Level API","docid":"NeuralPDE/pinn/low_level.md"},{"tag":"document","title":"Partial Differential Equation (PDE) Constrained Optimization","docid":"DiffEqSensitivity/pde_fitting/pde_constrained.md"},{"tag":"document","title":"Optimization of Ordinary Differential Equations","docid":"DiffEqSensitivity/ode_fitting/optimization_ode.md"},{"tag":"document","title":"Simultaneous Fitting of Multiple Neural Networks","docid":"DiffEqSensitivity/training_tips/multiple_nn.md"},{"tag":"document","title":"Optimization of Stochastic Differential Equations","docid":"DiffEqSensitivity/sde_fitting/optimization_sde.md"}],"methods":[{"line":25,"file":"/Users/lorenz/.julia/packages/Optimization/RUgSr/src/function/zygote.jl","method_id":"Optimization.AutoZygote_1","symbol_id":"Optimization.AutoZygote","filedoc":"sourcefiles/Optimization/src/function/zygote.jl","signature":"Optimization.AutoZygote()"}],"name":"AutoZygote","title":"AutoZygote","symbol_id":"Optimization.AutoZygote","public":false,"module_id":"Optimization"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"p","children":["AutoZygote <: AbstractADType"],"type":"node"},{"attributes":{},"tag":"p","children":["An AbstractADType choice for use in OptimizationFunction for automatically generating the unspecified derivative functions. Usage:"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/SciMLBase.OptimizationFunction"},"tag":"reference","children":["OptimizationFunction"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["f"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/Optimization.AutoZygote"},"tag":"reference","children":["AutoZygote"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"PARAMETERS","children":[{"attributes":{},"tag":"SEMICOLON","children":[";"],"type":"node"},{"attributes":{},"tag":"DDDOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["kwargs"],"type":"node"},{"attributes":{},"tag":"DDDOT","children":["..."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["This uses the ",{"attributes":{"href":"https://github.com/FluxML/Zygote.jl","title":""},"tag":"a","children":["Zygote.jl"],"type":"node"}," package. This is the staple reverse-mode AD that handles a large portion of Julia with good efficiency. Hessian construction is fast via forward-over-reverse mixing ForwardDiff.jl with Zygote.jl"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["Compatible with GPUs"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["Compatible with Hessian-based optimization via ForwardDiff"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["Compatible with Hv-based optimization via ForwardDiff"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["Not compatible with constraint functions"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Note that only the unspecified derivative functions are defined. For example, if a ",{"attributes":{},"tag":"code","children":["hess"],"type":"node"}," function is supplied to the ",{"attributes":{},"tag":"code","children":["OptimizationFunction"],"type":"node"},", then the Hessian is not defined via Zygote."],"type":"node"}],"type":"node"}],"type":"node"}