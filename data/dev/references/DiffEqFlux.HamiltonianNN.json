{"attributes":{"kind":"struct","backlinks":[{"tag":"sourcefile","title":"DiffEqFlux/src/hnn.jl","docid":"sourcefiles/DiffEqFlux/src/hnn.jl"},{"tag":"document","title":"Hamiltonian Neural Network","docid":"DiffEqFlux/examples/hamiltonian_nn.md"},{"tag":"sourcefile","title":"DiffEqFlux/src/DiffEqFlux.jl","docid":"sourcefiles/DiffEqFlux/src/DiffEqFlux.jl"}],"methods":[{"line":49,"file":"/Users/lorenz/.julia/packages/DiffEqFlux/JicEk/src/hnn.jl","method_id":"DiffEqFlux.HamiltonianNN_1","symbol_id":"DiffEqFlux.HamiltonianNN","filedoc":"sourcefiles/DiffEqFlux/src/hnn.jl","signature":"DiffEqFlux.HamiltonianNN(model::DiffEqFlux.FastChain; p)"},{"line":41,"file":"/Users/lorenz/.julia/packages/DiffEqFlux/JicEk/src/hnn.jl","method_id":"DiffEqFlux.HamiltonianNN_2","symbol_id":"DiffEqFlux.HamiltonianNN","filedoc":"sourcefiles/DiffEqFlux/src/hnn.jl","signature":"DiffEqFlux.HamiltonianNN(model; p)"}],"name":"HamiltonianNN","title":"HamiltonianNN","symbol_id":"DiffEqFlux.HamiltonianNN","public":true,"module_id":"DiffEqFlux"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"p","children":["Constructs a Hamiltonian Neural Network [1]. This neural network is useful for learning symmetries and conservation laws by supervision on the gradients of the trajectories. It takes as input a concatenated vector of length ",{"attributes":{},"tag":"code","children":["2n"],"type":"node"}," containing the position (of size ",{"attributes":{},"tag":"code","children":["n"],"type":"node"},") and momentum (of size ",{"attributes":{},"tag":"code","children":["n"],"type":"node"},") of the particles. It then returns the time derivatives for position and momentum."],"type":"node"},{"attributes":{"class":"note"},"tag":"admonition","children":[{"attributes":{},"tag":"admonitiontitle","children":["Note"],"type":"node"},{"attributes":{},"tag":"admonitionbody","children":[{"attributes":{},"tag":"p","children":["This doesn't solve the Hamiltonian Problem. Use ",{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["NeuralHamiltonianDE"],"type":"node"}],"type":"node"}," for such applications."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{"class":"note"},"tag":"admonition","children":[{"attributes":{},"tag":"admonitiontitle","children":["Note"],"type":"node"},{"attributes":{},"tag":"admonitionbody","children":[{"attributes":{},"tag":"p","children":["This layer currently doesn't support GPU. The support will be added in future with some AD fixes."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["To obtain the gradients to train this network, ReverseDiff.gradient is supposed to be used. This prevents the usage of ",{"attributes":{},"tag":"code","children":["DiffEqFlux.sciml_train"],"type":"node"}," or ",{"attributes":{},"tag":"code","children":["Flux.train"],"type":"node"},". Follow this ",{"attributes":{"href":"https://diffeqflux.sciml.ai/dev/examples/hamiltonian_nn/","title":""},"tag":"a","children":["tutorial"],"type":"node"}," to see how to define a training loop to circumvent this issue."],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/DiffEqFlux.HamiltonianNN"},"tag":"reference","children":["HamiltonianNN"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["model"],"type":"node"},{"attributes":{},"tag":"PARAMETERS","children":[{"attributes":{},"tag":"SEMICOLON","children":[";"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["p"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["nothing"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/DiffEqFlux.HamiltonianNN"},"tag":"reference","children":["HamiltonianNN"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"DECLARATION","children":[{"attributes":{},"tag":"IDENTIFIER","children":["model"],"type":"node"},{"attributes":{},"tag":"DECLARATION","children":["::"],"type":"node"},{"attributes":{"reftype":"symbol","document_id":"references/DiffEqFlux.FastChain"},"tag":"reference","children":["FastChain"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"PARAMETERS","children":[{"attributes":{},"tag":"SEMICOLON","children":[";"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["p"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/DiffEqFlux.initial_params"},"tag":"reference","children":["initial_params"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["model"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Arguments:"],"type":"node"},{"attributes":{},"tag":"ol","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["model"],"type":"node"},": A Chain or FastChain neural network that returns the Hamiltonian of the system."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["p"],"type":"node"},": The initial parameters of the neural network."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["References:"],"type":"node"},{"attributes":{},"tag":"p","children":["[1] Greydanus, Samuel, Misko Dzamba, and Jason Yosinski. \"Hamiltonian Neural Networks.\" Advances in Neural Information Processing Systems 32 (2019): 15379-15389."],"type":"node"}],"type":"node"}],"type":"node"}