{"attributes":{"kind":"struct","backlinks":[{"tag":"sourcefile","title":"NeuralPDE/src/ode_solve.jl","docid":"sourcefiles/NeuralPDE/src/ode_solve.jl"},{"tag":"document","title":"Solving ODEs with Neural Networks","docid":"NeuralPDE/examples/ode.md"},{"tag":"sourcefile","title":"NeuralPDE/src/NeuralPDE.jl","docid":"sourcefiles/NeuralPDE/src/NeuralPDE.jl"}],"methods":[{"line":158,"file":"/Users/lorenz/.julia/packages/NeuralPDE/y7uHG/src/NeuralPDE.jl","method_id":"NeuralPDE.NNODE_1","symbol_id":"NeuralPDE.NNODE","filedoc":"sourcefiles/NeuralPDE/src/NeuralPDE.jl","signature":"NeuralPDE.NNODE(chain)"},{"line":158,"file":"/Users/lorenz/.julia/packages/NeuralPDE/y7uHG/src/NeuralPDE.jl","method_id":"NeuralPDE.NNODE_2","symbol_id":"NeuralPDE.NNODE","filedoc":"sourcefiles/NeuralPDE/src/NeuralPDE.jl","signature":"NeuralPDE.NNODE(chain, opt)"},{"line":158,"file":"/Users/lorenz/.julia/packages/NeuralPDE/y7uHG/src/NeuralPDE.jl","method_id":"NeuralPDE.NNODE_3","symbol_id":"NeuralPDE.NNODE","filedoc":"sourcefiles/NeuralPDE/src/NeuralPDE.jl","signature":"NeuralPDE.NNODE(chain, opt, init_params; autodiff, kwargs...)"},{"line":152,"file":"/Users/lorenz/.julia/packages/NeuralPDE/y7uHG/src/NeuralPDE.jl","method_id":"NeuralPDE.NNODE_4","symbol_id":"NeuralPDE.NNODE","filedoc":"sourcefiles/NeuralPDE/src/NeuralPDE.jl","signature":"NeuralPDE.NNODE(chain::C, opt::O, initθ::P, autodiff::Bool, kwargs::K)"}],"name":"NNODE","title":"NNODE","symbol_id":"NeuralPDE.NNODE","public":true,"module_id":"NeuralPDE"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"p","children":["Algorithm for solving differential equation using a neural network. Arguments:"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["chain"],"type":"node"},": A Chain neural network"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["opt"],"type":"node"},": The optimizer to train the neural network. Defaults to ",{"attributes":{},"tag":"code","children":["BFGS()"],"type":"node"},"."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["initθ"],"type":"node"},": The initial parameter of the neural network."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["autodiff"],"type":"node"},": The switch between automatic and numerical differentiation for the PDE operators. The reverse mode of the loss function is always AD."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}