{"attributes":{"kind":"struct","backlinks":[{"tag":"sourcefile","title":"ModelingToolkit/src/systems/nonlinear/nonlinearsystem.jl","docid":"sourcefiles/ModelingToolkit/src/systems/nonlinear/nonlinearsystem.jl"},{"tag":"sourcefile","title":"ModelingToolkit/src/ModelingToolkit.jl","docid":"sourcefiles/ModelingToolkit/src/ModelingToolkit.jl"}],"methods":[{"line":355,"file":"/Users/lorenz/.julia/packages/ModelingToolkit/fp90z/src/systems/nonlinear/nonlinearsystem.jl","method_id":"ModelingToolkit.NonlinearProblemExpr_1","symbol_id":"ModelingToolkit.NonlinearProblemExpr","filedoc":"sourcefiles/ModelingToolkit/src/systems/nonlinear/nonlinearsystem.jl","signature":"ModelingToolkit.NonlinearProblemExpr(sys::ModelingToolkit.NonlinearSystem, args...; kwargs...)"}],"name":"NonlinearProblemExpr","title":"NonlinearProblemExpr","symbol_id":"ModelingToolkit.NonlinearProblemExpr","public":true,"module_id":"ModelingToolkit"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":["function DiffEqBase.NonlinearProblemExpr{iip}(sys::NonlinearSystem,u0map,\n                                          parammap=DiffEqBase.NullParameters();\n                                          jac = false, sparse=false,\n                                          checkbounds = false,\n                                          linenumbers = true, parallel=SerialForm(),\n                                          kwargs...) where iip"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Generates a Julia expression for a NonlinearProblem from a NonlinearSystem and allows for automatically symbolically calculating numerical enhancements."],"type":"node"}],"type":"node"}],"type":"node"}