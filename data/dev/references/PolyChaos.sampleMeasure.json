{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"PolyChaos/src/polynomial_chaos.jl","docid":"sourcefiles/PolyChaos/src/polynomial_chaos.jl"}],"methods":[{"line":170,"file":"/Users/lorenz/.julia/packages/PolyChaos/THVqe/src/polynomial_chaos.jl","method_id":"PolyChaos.sampleMeasure_1","symbol_id":"PolyChaos.sampleMeasure","filedoc":"sourcefiles/PolyChaos/src/polynomial_chaos.jl","signature":"sampleMeasure(n::Int64, w::Function, dom::Tuple{Real, Real}; method)"},{"line":194,"file":"/Users/lorenz/.julia/packages/PolyChaos/THVqe/src/polynomial_chaos.jl","method_id":"PolyChaos.sampleMeasure_2","symbol_id":"PolyChaos.sampleMeasure","filedoc":"sourcefiles/PolyChaos/src/polynomial_chaos.jl","signature":"sampleMeasure(n::Int64, op::PolyChaos.AbstractCanonicalOrthoPoly)"},{"line":196,"file":"/Users/lorenz/.julia/packages/PolyChaos/THVqe/src/polynomial_chaos.jl","method_id":"PolyChaos.sampleMeasure_3","symbol_id":"PolyChaos.sampleMeasure","filedoc":"sourcefiles/PolyChaos/src/polynomial_chaos.jl","signature":"sampleMeasure(n::Int64, dist::Distributions.Distribution{Distributions.Univariate, Distributions.Continuous})"},{"line":220,"file":"/Users/lorenz/.julia/packages/PolyChaos/THVqe/src/polynomial_chaos.jl","method_id":"PolyChaos.sampleMeasure_4","symbol_id":"PolyChaos.sampleMeasure","filedoc":"sourcefiles/PolyChaos/src/polynomial_chaos.jl","signature":"sampleMeasure(n::Int64, mop::PolyChaos.MultiOrthoPoly; method)"},{"line":193,"file":"/Users/lorenz/.julia/packages/PolyChaos/THVqe/src/polynomial_chaos.jl","method_id":"PolyChaos.sampleMeasure_5","symbol_id":"PolyChaos.sampleMeasure","filedoc":"sourcefiles/PolyChaos/src/polynomial_chaos.jl","signature":"sampleMeasure(n::Int64, op::PolyChaos.AbstractOrthoPoly; method)"},{"line":201,"file":"/Users/lorenz/.julia/packages/PolyChaos/THVqe/src/polynomial_chaos.jl","method_id":"PolyChaos.sampleMeasure_6","symbol_id":"PolyChaos.sampleMeasure","filedoc":"sourcefiles/PolyChaos/src/polynomial_chaos.jl","signature":"sampleMeasure(n::Int64, meas::PolyChaos.GaussMeasure)"},{"line":202,"file":"/Users/lorenz/.julia/packages/PolyChaos/THVqe/src/polynomial_chaos.jl","method_id":"PolyChaos.sampleMeasure_7","symbol_id":"PolyChaos.sampleMeasure","filedoc":"sourcefiles/PolyChaos/src/polynomial_chaos.jl","signature":"sampleMeasure(n::Int64, meas::PolyChaos.Uniform01Measure)"},{"line":203,"file":"/Users/lorenz/.julia/packages/PolyChaos/THVqe/src/polynomial_chaos.jl","method_id":"PolyChaos.sampleMeasure_8","symbol_id":"PolyChaos.sampleMeasure","filedoc":"sourcefiles/PolyChaos/src/polynomial_chaos.jl","signature":"sampleMeasure(n::Int64, meas::PolyChaos.Beta01Measure)"},{"line":204,"file":"/Users/lorenz/.julia/packages/PolyChaos/THVqe/src/polynomial_chaos.jl","method_id":"PolyChaos.sampleMeasure_9","symbol_id":"PolyChaos.sampleMeasure","filedoc":"sourcefiles/PolyChaos/src/polynomial_chaos.jl","signature":"sampleMeasure(n::Int64, meas::PolyChaos.GammaMeasure)"},{"line":205,"file":"/Users/lorenz/.julia/packages/PolyChaos/THVqe/src/polynomial_chaos.jl","method_id":"PolyChaos.sampleMeasure_10","symbol_id":"PolyChaos.sampleMeasure","filedoc":"sourcefiles/PolyChaos/src/polynomial_chaos.jl","signature":"sampleMeasure(n::Int64, meas::PolyChaos.LogisticMeasure)"},{"line":207,"file":"/Users/lorenz/.julia/packages/PolyChaos/THVqe/src/polynomial_chaos.jl","method_id":"PolyChaos.sampleMeasure_11","symbol_id":"PolyChaos.sampleMeasure","filedoc":"sourcefiles/PolyChaos/src/polynomial_chaos.jl","signature":"sampleMeasure(n::Int64, meas::PolyChaos.AbstractCanonicalMeasure; method)"},{"line":212,"file":"/Users/lorenz/.julia/packages/PolyChaos/THVqe/src/polynomial_chaos.jl","method_id":"PolyChaos.sampleMeasure_12","symbol_id":"PolyChaos.sampleMeasure","filedoc":"sourcefiles/PolyChaos/src/polynomial_chaos.jl","signature":"sampleMeasure(n::Int64, measure::PolyChaos.ProductMeasure; method)"},{"line":189,"file":"/Users/lorenz/.julia/packages/PolyChaos/THVqe/src/polynomial_chaos.jl","method_id":"PolyChaos.sampleMeasure_13","symbol_id":"PolyChaos.sampleMeasure","filedoc":"sourcefiles/PolyChaos/src/polynomial_chaos.jl","signature":"sampleMeasure(n::Int64, meas::PolyChaos.AbstractMeasure; method)"}],"name":"sampleMeasure","title":"sampleMeasure","symbol_id":"PolyChaos.sampleMeasure","public":true,"module_id":"PolyChaos"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"strong","children":["Univariate"],"type":"node"}],"type":"node"},{"attributes":{"lang":""},"tag":"codeblock","children":["sampleMeasure(n::Int,name::String,w::Function,dom::Tuple{<:Real,<:Real},symm::Bool,d::Dict;method::String=\"adaptiverejection\")\nsampleMeasure(n::Int,m::Measure;method::String=\"adaptiverejection\")\nsampleMeasure(n::Int,op::AbstractOrthoPoly;method::String=\"adaptiverejection\")\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Draw ",{"attributes":{},"tag":"code","children":["n"],"type":"node"}," samples from the measure ",{"attributes":{},"tag":"code","children":["m"],"type":"node"}," described by its"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["name"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["weight function ",{"attributes":{},"tag":"code","children":["w"],"type":"node"},","],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["domain ",{"attributes":{},"tag":"code","children":["dom"],"type":"node"},","],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["symmetry property ",{"attributes":{},"tag":"code","children":["symm"],"type":"node"},","],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["and, if applicable, parameters stored in the dictionary ",{"attributes":{},"tag":"code","children":["d"],"type":"node"},". By default an adaptive rejection sampling method is used (from ",{"attributes":{"href":"https://github.com/mauriciogtec/AdaptiveRejectionSampling.jl","title":""},"tag":"a","children":["AdaptiveRejectionSampling.jl"],"type":"node"},"), unless it is a common random variable for which ",{"attributes":{"href":"https://github.com/JuliaStats/Distributions.jl","title":""},"tag":"a","children":["Distributions.jl"],"type":"node"}," is used."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["The function is dispatched to accept ",{"attributes":{},"tag":"code","children":["AbstractOrthoPoly"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"strong","children":["Multivariate"],"type":"node"}],"type":"node"},{"attributes":{"lang":""},"tag":"codeblock","children":["sampleMeasure(n::Int,m::ProductMeasure;method::Vector{String}=[\"adaptiverejection\" for i=1:length(m.name)])\nsampleMeasure(n::Int,mop::MultiOrthoPoly;method::Vector{String}=[\"adaptiverejection\" for i=1:length(mop.meas.name)])\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Multivariate extension which provides array of samples with ",{"attributes":{},"tag":"code","children":["n"],"type":"node"}," rows and as many columns as the multimeasure has univariate measures."],"type":"node"}],"type":"node"}],"type":"node"}