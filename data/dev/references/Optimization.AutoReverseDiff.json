{"attributes":{"kind":"struct","backlinks":[{"tag":"sourcefile","title":"Optimization/src/function/reversediff.jl","docid":"sourcefiles/Optimization/src/function/reversediff.jl"}],"methods":[{"line":44,"file":"/Users/lorenz/.julia/packages/Optimization/RUgSr/src/function/reversediff.jl","method_id":"Optimization.AutoReverseDiff_1","symbol_id":"Optimization.AutoReverseDiff","filedoc":"sourcefiles/Optimization/src/function/reversediff.jl","signature":"Optimization.AutoReverseDiff(; compile)"},{"line":41,"file":"/Users/lorenz/.julia/packages/Optimization/RUgSr/src/function/reversediff.jl","method_id":"Optimization.AutoReverseDiff_2","symbol_id":"Optimization.AutoReverseDiff","filedoc":"sourcefiles/Optimization/src/function/reversediff.jl","signature":"Optimization.AutoReverseDiff(compile::Bool)"},{"line":41,"file":"/Users/lorenz/.julia/packages/Optimization/RUgSr/src/function/reversediff.jl","method_id":"Optimization.AutoReverseDiff_3","symbol_id":"Optimization.AutoReverseDiff","filedoc":"sourcefiles/Optimization/src/function/reversediff.jl","signature":"Optimization.AutoReverseDiff(compile)"}],"name":"AutoReverseDiff","title":"AutoReverseDiff","symbol_id":"Optimization.AutoReverseDiff","public":false,"module_id":"Optimization"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"p","children":["AutoReverseDiff <: AbstractADType"],"type":"node"},{"attributes":{},"tag":"p","children":["An AbstractADType choice for use in OptimizationFunction for automatically generating the unspecified derivative functions. Usage:"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/SciMLBase.OptimizationFunction"},"tag":"reference","children":["OptimizationFunction"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["f"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/Optimization.AutoReverseDiff"},"tag":"reference","children":["AutoReverseDiff"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"PARAMETERS","children":[{"attributes":{},"tag":"SEMICOLON","children":[";"],"type":"node"},{"attributes":{},"tag":"DDDOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["kwargs"],"type":"node"},{"attributes":{},"tag":"DDDOT","children":["..."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["This uses the ",{"attributes":{"href":"https://github.com/JuliaDiff/ReverseDiff.jl","title":""},"tag":"a","children":["ReverseDiff.jl"],"type":"node"}," package. ",{"attributes":{},"tag":"code","children":["AutoReverseDiff"],"type":"node"}," has a default argument, ",{"attributes":{},"tag":"code","children":["compile"],"type":"node"},", which denotes whether the reverse pass should be compiled. ",{"attributes":{},"tag":"strong","children":[{"attributes":{},"tag":"code","children":["compile"],"type":"node"}," should only"," ","be set to ",{"attributes":{},"tag":"code","children":["true"],"type":"node"}," if ",{"attributes":{},"tag":"code","children":["f"],"type":"node"}," contains no branches (if statements, while loops)"," ","otherwise it can produce incorrect derivatives!"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["AutoReverseDiff"],"type":"node"}," is generally applicable to many pure Julia codes, and with ",{"attributes":{},"tag":"code","children":["compile=true"],"type":"node"}," it is one of the fastest options on code with heavy scalar interactions. Hessian calculations are fast by mixing ForwardDiff with ReverseDiff for forward-over-reverse. However, its performance can falter when ",{"attributes":{},"tag":"code","children":["compile=false"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["Not compatible with GPUs"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["Compatible with Hessian-based optimization by mixing with ForwardDiff"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["Compatible with Hv-based optimization by mixing with ForwardDiff"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["Not compatible with constraint functions"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Note that only the unspecified derivative functions are defined. For example, if a ",{"attributes":{},"tag":"code","children":["hess"],"type":"node"}," function is supplied to the ",{"attributes":{},"tag":"code","children":["OptimizationFunction"],"type":"node"},", then the Hessian is not defined via ReverseDiff."],"type":"node"},{"attributes":{},"tag":"h2","children":["Constructor"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/Optimization.AutoReverseDiff"},"tag":"reference","children":["AutoReverseDiff"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"PARAMETERS","children":[{"attributes":{},"tag":"SEMICOLON","children":[";"],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["compile"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"FALSE","children":["false"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h4","children":["Note: currently compilation is not defined/used!"],"type":"node"}],"type":"node"}],"type":"node"}