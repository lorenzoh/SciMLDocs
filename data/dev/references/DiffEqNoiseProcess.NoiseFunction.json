{"attributes":{"kind":"struct","backlinks":[{"tag":"sourcefile","title":"DiffEqNoiseProcess/src/DiffEqNoiseProcess.jl","docid":"sourcefiles/DiffEqNoiseProcess/src/DiffEqNoiseProcess.jl"},{"tag":"sourcefile","title":"DiffEqNoiseProcess/src/noise_interfaces/noise_function_interface.jl","docid":"sourcefiles/DiffEqNoiseProcess/src/noise_interfaces/noise_function_interface.jl"},{"tag":"sourcefile","title":"DiffEqNoiseProcess/src/types.jl","docid":"sourcefiles/DiffEqNoiseProcess/src/types.jl"}],"methods":[{"line":569,"file":"/Users/lorenz/.julia/packages/DiffEqNoiseProcess/iWugD/src/types.jl","method_id":"DiffEqNoiseProcess.NoiseFunction_1","symbol_id":"DiffEqNoiseProcess.NoiseFunction","filedoc":"sourcefiles/DiffEqNoiseProcess/src/types.jl","signature":"NoiseFunction(t0, W)"},{"line":569,"file":"/Users/lorenz/.julia/packages/DiffEqNoiseProcess/iWugD/src/types.jl","method_id":"DiffEqNoiseProcess.NoiseFunction_2","symbol_id":"DiffEqNoiseProcess.NoiseFunction","filedoc":"sourcefiles/DiffEqNoiseProcess/src/types.jl","signature":"NoiseFunction(t0, W, Z; kwargs...)"}],"name":"NoiseFunction","title":"NoiseFunction","symbol_id":"DiffEqNoiseProcess.NoiseFunction","public":true,"module_id":"DiffEqNoiseProcess"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":["mutable struct NoiseFunction{T,N,wType,zType,Tt,T2,T3,inplace} <: AbstractNoiseProcess{T,N,nothing,inplace}"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["This allows you to use any arbitrary function ",{"attributes":{},"tag":"code","children":["W(t)"],"type":"node"}," as a ",{"attributes":{},"tag":"code","children":["NoiseProcess"],"type":"node"},". This will use the function lazily, only caching values required to minimize function calls, but not store the entire noise array. This requires an initial time point ",{"attributes":{},"tag":"code","children":["t0"],"type":"node"}," in the domain of ",{"attributes":{},"tag":"code","children":["W"],"type":"node"},". A second function is needed if the desired SDE algorithm requires multiple processes."],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":["function NoiseFunction{iip}(t0,W,Z=nothing;\n                            noise_prototype=W(nothing,nothing,t0),\n                            reset=true) where iip"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Additionally, one can use an in-place function ",{"attributes":{},"tag":"code","children":["W(out1,out2,t)"],"type":"node"}," for more efficient generation of the arrays for multi-dimensional processes. When the in-place version is used without a dispatch for the out-of-place version, the ",{"attributes":{},"tag":"code","children":["noise_prototype"],"type":"node"}," needs to be set."],"type":"node"},{"attributes":{},"tag":"h2","children":["NoiseFunction Example"],"type":"node"},{"attributes":{},"tag":"p","children":["The ",{"attributes":{},"tag":"code","children":["NoiseFunction"],"type":"node"}," is pretty simple: pass a function. As a silly example, we can use ",{"attributes":{},"tag":"code","children":["exp"],"type":"node"}," as a noise process by doing:"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"IDENTIFIER","children":["f"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["t"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"IDENTIFIER","children":["exp"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["t"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"},{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"IDENTIFIER","children":["W"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/DiffEqNoiseProcess.NoiseFunction"},"tag":"reference","children":["NoiseFunction"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"FLOAT","children":["0.0"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["f"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["If it's multi-dimensional and an in-place function is used, the ",{"attributes":{},"tag":"code","children":["noise_prototype"],"type":"node"}," must be given. For example:"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"IDENTIFIER","children":["f"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["out"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["t"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"IDENTIFIER","children":["out"],"type":"node"},{"attributes":{},"tag":"EQ","children":[".="],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"IDENTIFIER","children":["exp"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["t"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"},{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"IDENTIFIER","children":["W"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/DiffEqNoiseProcess.NoiseFunction"},"tag":"reference","children":["NoiseFunction"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"FLOAT","children":["0.0"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["f"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["noise_prototype"],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"IDENTIFIER","children":["rand"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"INTEGER","children":["4"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["This allows you to put arbitrarily weird noise into SDEs and RODEs. Have fun."],"type":"node"}],"type":"node"}],"type":"node"}