{"attributes":{"kind":"struct","backlinks":[{"tag":"sourcefile","title":"ModelingToolkit/src/systems/jumps/jumpsystem.jl","docid":"sourcefiles/ModelingToolkit/src/systems/jumps/jumpsystem.jl"},{"tag":"sourcefile","title":"SciMLBase/src/scimlfunctions.jl","docid":"sourcefiles/SciMLBase/src/scimlfunctions.jl"},{"tag":"sourcefile","title":"SciMLBase/src/SciMLBase.jl","docid":"sourcefiles/SciMLBase/src/SciMLBase.jl"},{"tag":"sourcefile","title":"ModelingToolkit/src/systems/discrete_system/discrete_system.jl","docid":"sourcefiles/ModelingToolkit/src/systems/discrete_system/discrete_system.jl"},{"tag":"sourcefile","title":"SciMLBase/src/problems/discrete_problems.jl","docid":"sourcefiles/SciMLBase/src/problems/discrete_problems.jl"}],"methods":[{"line":1871,"file":"/Users/lorenz/.julia/packages/SciMLBase/dYFnI/src/scimlfunctions.jl","method_id":"SciMLBase.DiscreteFunction_1","symbol_id":"SciMLBase.DiscreteFunction","filedoc":"sourcefiles/SciMLBase/src/scimlfunctions.jl","signature":"DiscreteFunction(f::DiscreteFunction; kwargs...)"},{"line":1870,"file":"/Users/lorenz/.julia/packages/SciMLBase/dYFnI/src/scimlfunctions.jl","method_id":"SciMLBase.DiscreteFunction_2","symbol_id":"SciMLBase.DiscreteFunction","filedoc":"sourcefiles/SciMLBase/src/scimlfunctions.jl","signature":"DiscreteFunction(f; kwargs...)"}],"name":"DiscreteFunction","title":"DiscreteFunction","symbol_id":"SciMLBase.DiscreteFunction","public":true,"module_id":"SciMLBase"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"p","children":["DiscreteFunction <: AbstractDiscreteFunction"],"type":"node"},{"attributes":{},"tag":"p","children":["A representation of an discrete dynamical system ",{"attributes":{},"tag":"code","children":["f"],"type":"node"},", defined by:"],"type":"node"},{"attributes":{},"tag":"mathblock","children":["u_{n+1} = f(u,p,t_{n+1})"],"type":"node"},{"attributes":{},"tag":"p","children":["and all of its related functions, such as the Jacobian of ",{"attributes":{},"tag":"code","children":["f"],"type":"node"},", its gradient with respect to time, and more. For all cases, ",{"attributes":{},"tag":"code","children":["u0"],"type":"node"}," is the initial condition, ",{"attributes":{},"tag":"code","children":["p"],"type":"node"}," are the parameters, and ",{"attributes":{},"tag":"code","children":["t"],"type":"node"}," is the independent variable."],"type":"node"},{"attributes":{},"tag":"h2","children":["Constructor"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"CURLY","children":[{"attributes":{"reftype":"symbol","document_id":"references/SciMLBase.DiscreteFunction"},"tag":"reference","children":["DiscreteFunction"],"type":"node"},{"attributes":{},"tag":"LBRACE","children":["{"],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["iip"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["recompile"],"type":"node"},{"attributes":{},"tag":"RBRACE","children":["}"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["f"],"type":"node"},{"attributes":{},"tag":"PARAMETERS","children":[{"attributes":{},"tag":"SEMICOLON","children":[";"],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n                                "],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["analytic"],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["nothing"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":[" \n                                "],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["syms"],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["nothing"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Note that only the function ",{"attributes":{},"tag":"code","children":["f"],"type":"node"}," itself is required. This function should be given as ",{"attributes":{},"tag":"code","children":["f!(du,u,p,t)"],"type":"node"}," or ",{"attributes":{},"tag":"code","children":["du = f(u,p,t)"],"type":"node"},". See the section on ",{"attributes":{},"tag":"code","children":["iip"],"type":"node"}," for more details on in-place vs out-of-place handling."],"type":"node"},{"attributes":{},"tag":"p","children":["All of the remaining functions are optional for improving or accelerating  the usage of ",{"attributes":{},"tag":"code","children":["f"],"type":"node"},". These include:"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["analytic(u0,p,t)"],"type":"node"},": used to pass an analytical solution function for the analytical  solution of the ODE. Generally only used for testing and development of the solvers."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["syms"],"type":"node"},": the symbol names for the elements of the equation. This should match ",{"attributes":{},"tag":"code","children":["u0"],"type":"node"}," in size. For example, if ",{"attributes":{},"tag":"code","children":["u0 = [0.0,1.0]"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["syms = [:x, :y]"],"type":"node"},", this will apply a canonical naming to the values, allowing ",{"attributes":{},"tag":"code","children":["sol[:x]"],"type":"node"}," in the solution and automatically naming values in plots."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h2","children":["iip: In-Place vs Out-Of-Place"],"type":"node"},{"attributes":{},"tag":"p","children":["For more details on this argument, see the ODEFunction documentation."],"type":"node"},{"attributes":{},"tag":"h2","children":["recompile: Controlling Compilation and Specialization"],"type":"node"},{"attributes":{},"tag":"p","children":["For more details on this argument, see the ODEFunction documentation."],"type":"node"},{"attributes":{},"tag":"h2","children":["Fields"],"type":"node"},{"attributes":{},"tag":"p","children":["The fields of the DiscreteFunction type directly match the names of the inputs."],"type":"node"}],"type":"node"}],"type":"node"}