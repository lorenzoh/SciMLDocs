{"attributes":{"backlinks":[],"path":"/home/runner/.julia/packages/LinearSolve/X7B6E/docs/src/solvers/solvers.md","title":"[Linear System Solvers]( linearsystemsolvers)"},"tag":"document","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"h1","children":["[Linear System Solvers](",{"attributes":{},"tag":"citation","children":[],"type":"node"}," linearsystemsolvers)"],"type":"node"},{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["solve(prob::LinearProlem,alg;kwargs)"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Solves for ",{"attributes":{},"tag":"math","children":["Au=b"],"type":"node"}," in the problem defined by ",{"attributes":{},"tag":"code","children":["prob"],"type":"node"}," using the algorithm ",{"attributes":{},"tag":"code","children":["alg"],"type":"node"},". If no algorithm is given, a default algorithm will be chosen."],"type":"node"},{"attributes":{},"tag":"h2","children":["Recommended Methods"],"type":"node"},{"attributes":{},"tag":"p","children":["The default algorithm ",{"attributes":{},"tag":"code","children":["nothing"],"type":"node"}," is good for choosing an algorithm that will work, but one may need to change this to receive more performance or precision. If more precision is necessary, ",{"attributes":{},"tag":"code","children":["QRFactorization()"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["SVDFactorization()"],"type":"node"}," are the best choices, with SVD being the slowest but most precise."],"type":"node"},{"attributes":{},"tag":"p","children":["For efficiency, ",{"attributes":{},"tag":"code","children":["RFLUFactorization"],"type":"node"}," is the fastest for dense LU-factorizations. For sparse LU-factorizations, ",{"attributes":{},"tag":"code","children":["KLUFactorization"],"type":"node"}," if there is less structure to the sparsity pattern and ",{"attributes":{},"tag":"code","children":["UMFPACKFactorization"],"type":"node"}," if there is more structure. Pardiso.jl's methods are also known to be very efficient sparse linear solvers."],"type":"node"},{"attributes":{},"tag":"p","children":["As sparse matrices get larger, iterative solvers tend to get more efficient than factorization methods if a lower tolerance of the solution is required."],"type":"node"},{"attributes":{},"tag":"p","children":["IterativeSolvers.jl uses a low-rank Q update in its GMRES so it tends to be faster than Krylov.jl for CPU-based arrays, but it's only compatible with CPU-based arrays while Krylov.jl is more general and will support accelerators like CUDA. Krylov.jl works with CPUs and GPUs and tends to be more efficient than other Krylov-based methods."],"type":"node"},{"attributes":{},"tag":"p","children":["Finally, a user can pass a custom function for handling the linear solve using ",{"attributes":{},"tag":"code","children":["LinearSolveFunction()"],"type":"node"}," if existing solvers are not optimally suited for their application. The interface is detailed ",{"attributes":{"reftype":"document","href":"#passing-in-a-custom-linear-solver","title":"","document_id":"LinearSolve/solvers/#passing-in-a-custom-linear-solver"},"tag":"reference","children":["here"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h2","children":["Full List of Methods"],"type":"node"},{"attributes":{},"tag":"h3","children":["RecursiveFactorization.jl"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["RFLUFactorization()"],"type":"node"},": a fast pure Julia LU-factorization implementation using RecursiveFactorization.jl. This is by far the fastest LU-factorization implementation, usually outperforming OpenBLAS and MKL, but generally optimized only for Base ",{"attributes":{},"tag":"code","children":["Array"],"type":"node"}," with ",{"attributes":{},"tag":"code","children":["Float32"],"type":"node"},", ",{"attributes":{},"tag":"code","children":["Float64"],"type":"node"},", ",{"attributes":{},"tag":"code","children":["ComplexF32"],"type":"node"},", and ",{"attributes":{},"tag":"code","children":["ComplexF64"],"type":"node"},"."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h3","children":["Base.LinearAlgebra"],"type":"node"},{"attributes":{},"tag":"p","children":["These overloads tend to work for many array types, such as ",{"attributes":{},"tag":"code","children":["CuArrays"],"type":"node"}," for GPU-accelerated solving, using the overloads provided by the respective packages. Given that this can be customized per-package, details given below describe a subset of important arrays (",{"attributes":{},"tag":"code","children":["Matrix"],"type":"node"},", ",{"attributes":{},"tag":"code","children":["SparseMatrixCSC"],"type":"node"},", ",{"attributes":{},"tag":"code","children":["CuMatrix"],"type":"node"},", etc.)"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["LUFactorization(pivot=LinearAlgebra.RowMaximum())"],"type":"node"},": Julia's built in ",{"attributes":{},"tag":"code","children":["lu"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["On dense matrices this uses the current BLAS implementation of the user's computer which by default is OpenBLAS but will use MKL if the user does ",{"attributes":{},"tag":"code","children":["using MKL"],"type":"node"}," in their system."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["On sparse matrices this will use UMFPACK from SuiteSparse. Note that this will not cache the symbolic factorization."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["On CuMatrix it will use a CUDA-accelerated LU from CuSolver."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["On BandedMatrix and BlockBandedMatrix it will use a banded LU."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["QRFactorization(pivot=LinearAlgebra.NoPivot(),blocksize=16)"],"type":"node"},": Julia's built in ",{"attributes":{},"tag":"code","children":["qr"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["On dense matrices this uses the current BLAS implementation of the user's computer which by default is OpenBLAS but will use MKL if the user does ",{"attributes":{},"tag":"code","children":["using MKL"],"type":"node"}," in their system."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["On sparse matrices this will use SPQR from SuiteSparse"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["On CuMatrix it will use a CUDA-accelerated QR from CuSolver."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["On BandedMatrix and BlockBandedMatrix it will use a banded QR."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["SVDFactorization(full=false,alg=LinearAlgebra.DivideAndConquer())"],"type":"node"},": Julia's built in ",{"attributes":{},"tag":"code","children":["svd"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["On dense matrices this uses the current BLAS implementation of the user's computer which by default is OpenBLAS but will use MKL if the user does ",{"attributes":{},"tag":"code","children":["using MKL"],"type":"node"}," in their system."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["GenericFactorization(fact_alg)"],"type":"node"},": Constructs a linear solver from a generic factorization algorithm ",{"attributes":{},"tag":"code","children":["fact_alg"],"type":"node"}," which complies with the Base.LinearAlgebra factorization API. Quoting from Base:"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["If ",{"attributes":{},"tag":"code","children":["A"],"type":"node"}," is upper or lower triangular (or diagonal), no factorization of ",{"attributes":{},"tag":"code","children":["A"],"type":"node"}," is required and the system is solved with either forward or backward substitution. For non-triangular square matrices, an LU factorization is used. For rectangular ",{"attributes":{},"tag":"code","children":["A"],"type":"node"}," the result is the minimum-norm least squares solution computed by a pivoted QR factorization of ",{"attributes":{},"tag":"code","children":["A"],"type":"node"}," and a rank estimate of ",{"attributes":{},"tag":"code","children":["A"],"type":"node"}," based on the R factor. When ",{"attributes":{},"tag":"code","children":["A"],"type":"node"}," is sparse, a similar polyalgorithm is used. For indefinite matrices, the ",{"attributes":{},"tag":"code","children":["LDLt"],"type":"node"}," factorization does not use pivoting during the numerical factorization and therefore the procedure can fail even for invertible matrices."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h3","children":["LinearSolve.jl"],"type":"node"},{"attributes":{},"tag":"p","children":["LinearSolve.jl contains some linear solvers built in."],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["SimpleLUFactorization"],"type":"node"},": a simple LU-factorization implementation without BLAS. Fast for small matrices."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h3","children":["SuiteSparse.jl"],"type":"node"},{"attributes":{},"tag":"p","children":["By default, the SuiteSparse.jl are implemented for efficiency by caching the symbolic factorization. I.e. if ",{"attributes":{},"tag":"code","children":["set_A"],"type":"node"}," is used, it is expected that the new ",{"attributes":{},"tag":"code","children":["A"],"type":"node"}," has the same sparsity pattern as the previous ",{"attributes":{},"tag":"code","children":["A"],"type":"node"},". If this algorithm is to be used in a context where that assumption does not hold, set ",{"attributes":{},"tag":"code","children":["reuse_symbolic=false"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["KLUFactorization(;reuse_symbolic=true)"],"type":"node"},": A fast sparse LU-factorization which specializes on sparsity patterns with \"less structure\"."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["UMFPACKFactorization(;reuse_symbolic=true)"],"type":"node"},": A fast sparse multithreaded LU-factorization which specializes on sparsity patterns that are more structured."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h3","children":["Pardiso.jl"],"type":"node"},{"attributes":{"class":"note"},"tag":"admonition","children":[{"attributes":{},"tag":"admonitiontitle","children":["Note"],"type":"node"},{"attributes":{},"tag":"admonitionbody","children":[{"attributes":{},"tag":"p","children":["Using this solver requires adding the package LinearSolvePardiso.jl"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["The following algorithms are pre-specified:"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["MKLPardisoFactorize(;kwargs...)"],"type":"node"},": A sparse factorization method."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["MKLPardisoIterate(;kwargs...)"],"type":"node"},": A mixed factorization+iterative method."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Those algorithms are defined via:"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"IDENTIFIER","children":["MKLPardisoFactorize"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"PARAMETERS","children":[{"attributes":{},"tag":"SEMICOLON","children":[";"],"type":"node"},{"attributes":{},"tag":"DDDOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["kwargs"],"type":"node"},{"attributes":{},"tag":"DDDOT","children":["..."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"IDENTIFIER","children":["PardisoJL"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"PARAMETERS","children":[{"attributes":{},"tag":"SEMICOLON","children":[";"],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["fact_phase"],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Pardiso"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"IDENTIFIER","children":["NUM_FACT"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n                                             "],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["solve_phase"],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Pardiso"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"IDENTIFIER","children":["SOLVE_ITERATIVE_REFINE"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n                                             "],"type":"node"},{"attributes":{},"tag":"DDDOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["kwargs"],"type":"node"},{"attributes":{},"tag":"DDDOT","children":["..."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"},{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"IDENTIFIER","children":["MKLPardisoIterate"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"PARAMETERS","children":[{"attributes":{},"tag":"SEMICOLON","children":[";"],"type":"node"},{"attributes":{},"tag":"DDDOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["kwargs"],"type":"node"},{"attributes":{},"tag":"DDDOT","children":["..."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"IDENTIFIER","children":["PardisoJL"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"PARAMETERS","children":[{"attributes":{},"tag":"SEMICOLON","children":[";"],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["solve_phase"],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Pardiso"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"IDENTIFIER","children":["NUM_FACT_SOLVE_REFINE"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n                                           "],"type":"node"},{"attributes":{},"tag":"DDDOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["kwargs"],"type":"node"},{"attributes":{},"tag":"DDDOT","children":["..."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["The full set of keyword arguments for ",{"attributes":{},"tag":"code","children":["PardisoJL"],"type":"node"}," are:"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"MACROCALL","children":[{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Base"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"AT_SIGN","children":["@"],"type":"node"},{"attributes":{},"tag":"MACRO_NAME","children":["kwdef"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"STRUCT","children":[{"attributes":{},"tag":"FALSE","children":[""],"type":"node"},{"attributes":{},"tag":"STRUCT","children":["struct"],"type":"node"},{"attributes":{},"tag":"ISSUBTYPE","children":[{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["PardisoJL"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"ISSUBTYPE","children":["<:"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{"reftype":"symbol","document_id":"references/LinearSolve.SciMLLinearSolveAlgorithm"},"tag":"reference","children":["SciMLLinearSolveAlgorithm"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"BLOCK","children":[{"attributes":{},"tag":"NEWLINE_WS","children":["\n    "],"type":"node"},{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"DECLARATION","children":[{"attributes":{},"tag":"IDENTIFIER","children":["nprocs"],"type":"node"},{"attributes":{},"tag":"DECLARATION","children":["::"],"type":"node"},{"attributes":{},"tag":"CURLY","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Union"],"type":"node"},{"attributes":{},"tag":"LBRACE","children":["{"],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["Int"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["Nothing"],"type":"node"},{"attributes":{},"tag":"RBRACE","children":["}"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["nothing"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n    "],"type":"node"},{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"DECLARATION","children":[{"attributes":{},"tag":"IDENTIFIER","children":["solver_type"],"type":"node"},{"attributes":{},"tag":"DECLARATION","children":["::"],"type":"node"},{"attributes":{},"tag":"CURLY","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Union"],"type":"node"},{"attributes":{},"tag":"LBRACE","children":["{"],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["Int"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Pardiso"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Solver"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["Nothing"],"type":"node"},{"attributes":{},"tag":"RBRACE","children":["}"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["nothing"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n    "],"type":"node"},{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"DECLARATION","children":[{"attributes":{},"tag":"IDENTIFIER","children":["matrix_type"],"type":"node"},{"attributes":{},"tag":"DECLARATION","children":["::"],"type":"node"},{"attributes":{},"tag":"CURLY","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Union"],"type":"node"},{"attributes":{},"tag":"LBRACE","children":["{"],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["Int"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Pardiso"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"IDENTIFIER","children":["MatrixType"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["Nothing"],"type":"node"},{"attributes":{},"tag":"RBRACE","children":["}"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["nothing"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n    "],"type":"node"},{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"DECLARATION","children":[{"attributes":{},"tag":"IDENTIFIER","children":["fact_phase"],"type":"node"},{"attributes":{},"tag":"DECLARATION","children":["::"],"type":"node"},{"attributes":{},"tag":"CURLY","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Union"],"type":"node"},{"attributes":{},"tag":"LBRACE","children":["{"],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["Int"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Pardiso"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Phase"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["Nothing"],"type":"node"},{"attributes":{},"tag":"RBRACE","children":["}"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["nothing"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n    "],"type":"node"},{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"DECLARATION","children":[{"attributes":{},"tag":"IDENTIFIER","children":["solve_phase"],"type":"node"},{"attributes":{},"tag":"DECLARATION","children":["::"],"type":"node"},{"attributes":{},"tag":"CURLY","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Union"],"type":"node"},{"attributes":{},"tag":"LBRACE","children":["{"],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["Int"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Pardiso"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Phase"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["Nothing"],"type":"node"},{"attributes":{},"tag":"RBRACE","children":["}"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["nothing"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n    "],"type":"node"},{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"DECLARATION","children":[{"attributes":{},"tag":"IDENTIFIER","children":["release_phase"],"type":"node"},{"attributes":{},"tag":"DECLARATION","children":["::"],"type":"node"},{"attributes":{},"tag":"CURLY","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Union"],"type":"node"},{"attributes":{},"tag":"LBRACE","children":["{"],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["Int"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["Nothing"],"type":"node"},{"attributes":{},"tag":"RBRACE","children":["}"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["nothing"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n    "],"type":"node"},{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"DECLARATION","children":[{"attributes":{},"tag":"IDENTIFIER","children":["iparm"],"type":"node"},{"attributes":{},"tag":"DECLARATION","children":["::"],"type":"node"},{"attributes":{},"tag":"CURLY","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Union"],"type":"node"},{"attributes":{},"tag":"LBRACE","children":["{"],"type":"node"},{"attributes":{},"tag":"CURLY","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Vector"],"type":"node"},{"attributes":{},"tag":"LBRACE","children":["{"],"type":"node"},{"attributes":{},"tag":"CURLY","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Tuple"],"type":"node"},{"attributes":{},"tag":"LBRACE","children":["{"],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["Int"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["Int"],"type":"node"},{"attributes":{},"tag":"RBRACE","children":["}"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RBRACE","children":["}"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["Nothing"],"type":"node"},{"attributes":{},"tag":"RBRACE","children":["}"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["nothing"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n    "],"type":"node"},{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"DECLARATION","children":[{"attributes":{},"tag":"IDENTIFIER","children":["dparm"],"type":"node"},{"attributes":{},"tag":"DECLARATION","children":["::"],"type":"node"},{"attributes":{},"tag":"CURLY","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Union"],"type":"node"},{"attributes":{},"tag":"LBRACE","children":["{"],"type":"node"},{"attributes":{},"tag":"CURLY","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Vector"],"type":"node"},{"attributes":{},"tag":"LBRACE","children":["{"],"type":"node"},{"attributes":{},"tag":"CURLY","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Tuple"],"type":"node"},{"attributes":{},"tag":"LBRACE","children":["{"],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["Int"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["Int"],"type":"node"},{"attributes":{},"tag":"RBRACE","children":["}"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RBRACE","children":["}"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["Nothing"],"type":"node"},{"attributes":{},"tag":"RBRACE","children":["}"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["nothing"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"END","children":["end"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h3","children":["CUDA.jl"],"type":"node"},{"attributes":{},"tag":"p","children":["Note that ",{"attributes":{},"tag":"code","children":["CuArrays"],"type":"node"}," are supported by ",{"attributes":{},"tag":"code","children":["GenericFactorization"],"type":"node"}," in the \"normal\" way. The following are non-standard GPU factorization routines."],"type":"node"},{"attributes":{"class":"note"},"tag":"admonition","children":[{"attributes":{},"tag":"admonitiontitle","children":["Note"],"type":"node"},{"attributes":{},"tag":"admonitionbody","children":[{"attributes":{},"tag":"p","children":["Using this solver requires adding the package LinearSolveCUDA.jl"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["CudaOffloadFactorization()"],"type":"node"},": An offloading technique used to GPU-accelerate CPU-based computations. Requires a sufficiently large ",{"attributes":{},"tag":"code","children":["A"],"type":"node"}," to overcome the data transfer costs."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h3","children":["IterativeSolvers.jl"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["IterativeSolversJL_CG(args...;kwargs...)"],"type":"node"},": A generic CG implementation"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["IterativeSolversJL_GMRES(args...;kwargs...)"],"type":"node"},": A generic GMRES implementation"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["IterativeSolversJL_BICGSTAB(args...;kwargs...)"],"type":"node"},": A generic BICGSTAB implementation"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["IterativeSolversJL_MINRES(args...;kwargs...)"],"type":"node"},": A generic MINRES implementation"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["The general algorithm is:"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/LinearSolve.IterativeSolversJL"},"tag":"reference","children":["IterativeSolversJL"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"DDDOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["args"],"type":"node"},{"attributes":{},"tag":"DDDOT","children":["..."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"PARAMETERS","children":[{"attributes":{},"tag":"SEMICOLON","children":[";"],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n                   "],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["generate_iterator"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["IterativeSolvers"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"IDENTIFIER","children":["gmres_iterable!"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n                   "],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Pl"],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["nothing"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Pr"],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["nothing"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n                   "],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["gmres_restart"],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"INTEGER","children":["0"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"DDDOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["kwargs"],"type":"node"},{"attributes":{},"tag":"DDDOT","children":["..."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h3","children":["Krylov.jl"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["KrylovJL_CG(args...;kwargs...)"],"type":"node"},": A generic CG implementation"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["KrylovJL_GMRES(args...;kwargs...)"],"type":"node"},": A generic GMRES implementation"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["KrylovJL_BICGSTAB(args...;kwargs...)"],"type":"node"},": A generic BICGSTAB implementation"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["KrylovJL_MINRES(args...;kwargs...)"],"type":"node"},": A generic MINRES implementation"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["The general algorithm is:"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/LinearSolve.KrylovJL"},"tag":"reference","children":["KrylovJL"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"DDDOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["args"],"type":"node"},{"attributes":{},"tag":"DDDOT","children":["..."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"PARAMETERS","children":[{"attributes":{},"tag":"SEMICOLON","children":[";"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["KrylovAlg"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Krylov"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"IDENTIFIER","children":["gmres!"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n                  "],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Pl"],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["nothing"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Pr"],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["nothing"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n                  "],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["gmres_restart"],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"INTEGER","children":["0"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["window"],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"INTEGER","children":["0"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n                  "],"type":"node"},{"attributes":{},"tag":"DDDOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["kwargs"],"type":"node"},{"attributes":{},"tag":"DDDOT","children":["..."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h3","children":["KrylovKit.jl"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["KrylovKitJL_CG(args...;kwargs...)"],"type":"node"},": A generic CG implementation"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["KrylovKitJL_GMRES(args...;kwargs...)"],"type":"node"},": A generic GMRES implementation"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["The general algorithm is:"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":["function KrylovKitJL(args...;\n                     KrylovAlg = KrylovKit.GMRES, gmres_restart = 0,\n                     kwargs...)"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}