{"attributes":{"backlinks":[],"path":"/Users/lorenz/.julia/packages/LinearSolve/X7B6E/docs/src/basics/common_solver_opts.md","title":"Common Solver Options (Keyword Arguments for Solve)"},"tag":"document","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"h1","children":["Common Solver Options (Keyword Arguments for Solve)"],"type":"node"},{"attributes":{},"tag":"p","children":["While many algorithms have specific arguments within their constructor, the keyword arguments for ",{"attributes":{},"tag":"code","children":["solve"],"type":"node"}," are common across all of the algorithms in order to give composability. These are also the options taken at ",{"attributes":{},"tag":"code","children":["init"],"type":"node"}," time. The following are the options these algorithms take, along with their defaults."],"type":"node"},{"attributes":{},"tag":"h2","children":["General Controls"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["alias_A"],"type":"node"},": Whether to alias the matrix ",{"attributes":{},"tag":"code","children":["A"],"type":"node"}," or use a copy by default. When true, algorithms like LU-factorization can be faster by reusing the memory via ",{"attributes":{},"tag":"code","children":["lu!"],"type":"node"},", but care must be taken as the original input will be modified. Default is ",{"attributes":{},"tag":"code","children":["false"],"type":"node"},"."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["alias_b"],"type":"node"},": Whether to alias the matrix ",{"attributes":{},"tag":"code","children":["b"],"type":"node"}," or use a copy by default. When true, algorithms can write and change ",{"attributes":{},"tag":"code","children":["b"],"type":"node"}," upon usage. Care must be taken as the original input will be modified. Default is ",{"attributes":{},"tag":"code","children":["false"],"type":"node"},"."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["verbose"],"type":"node"},": Whether to print extra information. Defaults to ",{"attributes":{},"tag":"code","children":["false"],"type":"node"},"."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h2","children":["Iterative Solver Controls"],"type":"node"},{"attributes":{},"tag":"p","children":["Error controls are not used by all algorithms. Specifically, direct solves always solve completely. Error controls only apply to iterative solvers."],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["abstol"],"type":"node"},": The absolute tolerance. Defaults to ",{"attributes":{},"tag":"code","children":["√(eps(eltype(A)))"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["reltol"],"type":"node"},": The relative tolerance. Defaults to ",{"attributes":{},"tag":"code","children":["√(eps(eltype(A)))"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["maxiters"],"type":"node"},": The number of iterations allowed. Defaults to ",{"attributes":{},"tag":"code","children":["length(prob.b)"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["Pl,Pr"],"type":"node"},": The left and right preconditioners respectively. For more information see [the Preconditioners page](",{"attributes":{},"tag":"citation","children":[{"mimes":{"text/plain":"Any[]"},"type":"leaf"},{"mimes":{"text/plain":"Dict{Symbol, String}()"},"type":"leaf"}],"type":"node"}," prec)."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}