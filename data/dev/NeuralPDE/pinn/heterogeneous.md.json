{"attributes":{"backlinks":[],"path":"/Users/lorenz/.julia/packages/NeuralPDE/y7uHG/docs/src/pinn/heterogeneous.md","title":"Differential Equations with Heterogeneous Inputs"},"tag":"document","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"h1","children":["Differential Equations with Heterogeneous Inputs"],"type":"node"},{"attributes":{},"tag":"p","children":["A differential equation is said to have heterogeneous inputs when its dependent variables depend on different independent variables:"],"type":"node"},{"attributes":{},"tag":"mathblock","children":["u(x) + w(x, v) = \\frac{\\partial w(x, v)}{\\partial w}"],"type":"node"},{"attributes":{},"tag":"p","children":["Here, we write an arbitrary heterogeneous system:"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":["@parameters x y\n@variables p(..) q(..) r(..) s(..)\nDx = Differential(x)\nDy = Differential(y)\n\n# 2D PDE\neq  = p(x) + q(y) + Dx(r(x, y)) + Dy(s(y, x)) ~ 0\n\n# Initial and boundary conditions\nbcs = [p(1) ~ 0.f0, q(-1) ~ 0.0f0,\n       r(x, -1) ~ 0.f0, r(1, y) ~ 0.0f0,\n       s(y, 1) ~ 0.0f0, s(-1, x) ~ 0.0f0]\n\n# Space and time domains\ndomains = [x ∈ Interval(0.0, 1.0),\n           y ∈ Interval(0.0, 1.0)]\n\nnumhid = 3\nfastchains = [[FastChain(FastDense(1, numhid, Flux.σ), FastDense(numhid, numhid, Flux.σ), FastDense(numhid, 1)) for i in 1:2];\n                        [FastChain(FastDense(2, numhid, Flux.σ), FastDense(numhid, numhid, Flux.σ), FastDense(numhid, 1)) for i in 1:2]]\ndiscretization = NeuralPDE.PhysicsInformedNN(fastchains, QuadratureTraining()\n\n@named pde_system = PDESystem(eq, bcs, domains, [x,y], [p(x), q(y), r(x, y), s(y, x)])\nprob = SciMLBase.discretize(pde_system, discretization)\nres = Optimization.solve(prob, BFGS(); callback = callback, maxiters=100)"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}