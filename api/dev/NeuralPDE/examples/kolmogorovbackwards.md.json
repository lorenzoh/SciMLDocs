{"attributes":{"backlinks":[],"path":"/Users/lorenz/.julia/packages/NeuralPDE/y7uHG/docs/src/examples/kolmogorovbackwards.md","title":"Solving Kolmogorov Equations with Neural Networks"},"tag":"document","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"h1","children":["Solving Kolmogorov Equations with Neural Networks"],"type":"node"},{"attributes":{},"tag":"p","children":["A Kolmogorov PDE is of the form :"],"type":"node"},{"attributes":{},"tag":"p","children":[{"attributes":{"src":"https://raw.githubusercontent.com/ashutosh-b-b/Kolmogorv-Equations-Notebook/master/KolmogorovPDEImages/KolmogorovPDE.png","alt":""},"tag":"img","children":["KPDE"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Consider S to be a solution process to the SDE:"],"type":"node"},{"attributes":{},"tag":"p","children":[{"attributes":{"src":"https://raw.githubusercontent.com/ashutosh-b-b/Kolmogorv-Equations-Notebook/master/KolmogorovPDEImages/StochasticP.png","alt":""},"tag":"img","children":["StochasticP"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["then the solution to the Kolmogorov PDE is given as:"],"type":"node"},{"attributes":{},"tag":"p","children":[{"attributes":{"src":"https://raw.githubusercontent.com/ashutosh-b-b/Kolmogorv-Equations-Notebook/master/KolmogorovPDEImages/Solution.png","alt":""},"tag":"img","children":["Solution"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["A Kolmogorov PDE Problem can be defined using a ",{"attributes":{},"tag":"code","children":["SDEProblem"],"type":"node"},":"],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/SciMLBase.SDEProblem"},"tag":"reference","children":["SDEProblem"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["μ"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["σ"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["u0"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["tspan"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["xspan"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["d"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Here, ",{"attributes":{},"tag":"code","children":["u0"],"type":"node"}," is the initial distribution of x. Here, we define ",{"attributes":{},"tag":"code","children":["u(0,x)"],"type":"node"}," as the probability density function of ",{"attributes":{},"tag":"code","children":["u0"],"type":"node"},".",{"attributes":{},"tag":"code","children":["μ"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["σ"],"type":"node"}," are obtained from the SDE for the stochastic process above. ",{"attributes":{},"tag":"code","children":["d"],"type":"node"}," represents the dimensions of ",{"attributes":{},"tag":"code","children":["x"],"type":"node"},". ",{"attributes":{},"tag":"code","children":["u0"],"type":"node"}," can be defined using ",{"attributes":{},"tag":"code","children":["Distributions.jl"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["Another way of defining a KolmogorovPDE is to use the ",{"attributes":{},"tag":"code","children":["KolmogorovPDEProblem"],"type":"node"},"."],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/NeuralPDE.KolmogorovPDEProblem"},"tag":"reference","children":["KolmogorovPDEProblem"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["μ"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["σ"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{"reftype":"symbol","document_id":"references/ExponentialUtilities.phi"},"tag":"reference","children":["phi"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["tspan"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["xspan"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["d"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Here, ",{"attributes":{},"tag":"code","children":["phi"],"type":"node"}," is the initial condition on u(t,x) when t = 0. ",{"attributes":{},"tag":"code","children":["μ"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["σ"],"type":"node"}," are obtained from the SDE for the stochastic process above. ",{"attributes":{},"tag":"code","children":["d"],"type":"node"}," represents the dimensions of ",{"attributes":{},"tag":"code","children":["x"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["To solve this problem use:"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["NNKolmogorov(chain, opt , sdealg)"],"type":"node"},": Uses a neural network to realize a regression function which is the solution for the linear Kolmogorov Equation."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Here, ",{"attributes":{},"tag":"code","children":["chain"],"type":"node"}," is a Flux.jl chain with a ",{"attributes":{},"tag":"code","children":["d"],"type":"node"},"-dimensional input and a 1-dimensional output.",{"attributes":{},"tag":"code","children":["opt"],"type":"node"}," is a Flux.jl optimizer. And ",{"attributes":{},"tag":"code","children":["sdealg"],"type":"node"}," is a high-order algorithm to calculate the solution for the SDE, which is used to define the learning data for the problem. Its default value is the classic Euler-Maruyama algorithm."],"type":"node"}],"type":"node"}],"type":"node"}