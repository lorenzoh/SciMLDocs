{"attributes":{"backlinks":[],"path":"/Users/lorenz/.julia/packages/Surrogates/zwNvG/docs/src/Salustowicz.md","title":"Salustowicz"},"tag":"document","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"h2","children":["Salustowicz Benchmark Function"],"type":"node"},{"attributes":{},"tag":"p","children":["The true underlying function HyGP had to approximate is the 1D Salustowicz function. The function can be evaluated in the given domain: ",{"attributes":{},"tag":"math","children":["x \\in [0, 10]"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["The Salustowicz benchmark function is as follows:"],"type":"node"},{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"math","children":["f(x) = e^{(-x)} x^3 cos(x) sin(x) (cos(x) sin^2(x) - 1)"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Let's import these two packages  ",{"attributes":{},"tag":"code","children":["Surrogates"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["Plots"],"type":"node"},":"],"type":"node"},{"attributes":{"lang":"@example salustowicz1D"},"tag":"codeblock","children":["using Surrogates\nusing Plots\ndefault()\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Now, let's define our objective function:"],"type":"node"},{"attributes":{"lang":"@example salustowicz1D"},"tag":"codeblock","children":["function salustowicz(x)\n    term1 = 2.72^(-x) * x^3 * cos(x) * sin(x);\n    term2 = (cos(x) * sin(x)*sin(x) - 1);\n    y = term1 * term2;\nend\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Let's sample f in 30 points between 0 and 10 using the ",{"attributes":{},"tag":"code","children":["sample"],"type":"node"}," function. The sampling points are chosen using a Sobol Sample, this can be done by passing ",{"attributes":{},"tag":"code","children":["SobolSample()"],"type":"node"}," to the ",{"attributes":{},"tag":"code","children":["sample"],"type":"node"}," function."],"type":"node"},{"attributes":{"lang":"@example salustowicz1D"},"tag":"codeblock","children":["n_samples = 30\nlower_bound = 0\nupper_bound = 10\nnum_round = 2\nx = sample(n_samples, lower_bound, upper_bound, SobolSample())\ny = salustowicz.(x)\nxs = lower_bound:0.001:upper_bound\nscatter(x, y, label=\"Sampled points\", xlims=(lower_bound, upper_bound), legend=:top)\nplot!(xs, salustowicz.(xs), label=\"True function\", legend=:top)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Now, let's fit Salustowicz Function with different Surrogates:"],"type":"node"},{"attributes":{"lang":"@example salustowicz1D"},"tag":"codeblock","children":["InverseDistance = InverseDistanceSurrogate(x, y, lower_bound, upper_bound)\nlobachevsky_surrogate = LobachevskySurrogate(x, y, lower_bound, upper_bound, alpha = 2.0, n = 6)\nscatter(x, y, label=\"Sampled points\", xlims=(lower_bound, upper_bound), legend=:topright)\nplot!(xs, salustowicz.(xs), label=\"True function\", legend=:topright)\nplot!(xs, InverseDistance.(xs), label=\"InverseDistanceSurrogate\", legend=:topright)\nplot!(xs, lobachevsky_surrogate.(xs), label=\"Lobachevsky\", legend=:topright)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Not's let's see Kriging Surrogate with different hyper parameter:"],"type":"node"},{"attributes":{"lang":"@example salustowicz1D"},"tag":"codeblock","children":["kriging_surrogate1 = Kriging(x, y, lower_bound, upper_bound, p=0.9);\nkriging_surrogate2 = Kriging(x, y, lower_bound, upper_bound, p=1.5);\nkriging_surrogate3 = Kriging(x, y, lower_bound, upper_bound, p=1.9);\nscatter(x, y, label=\"Sampled points\", xlims=(lower_bound, upper_bound), legend=:topright)\nplot!(xs, salustowicz.(xs), label=\"True function\", legend=:topright)\nplot!(xs, kriging_surrogate1.(xs), label=\"kriging_surrogate1\", ribbon=p->std_error_at_point(kriging_surrogate1, p), legend=:topright)\nplot!(xs, kriging_surrogate2.(xs), label=\"kriging_surrogate2\", ribbon=p->std_error_at_point(kriging_surrogate2, p), legend=:topright)\nplot!(xs, kriging_surrogate3.(xs), label=\"kriging_surrogate3\", ribbon=p->std_error_at_point(kriging_surrogate3, p), legend=:topright)\n"],"type":"node"}],"type":"node"}],"type":"node"}