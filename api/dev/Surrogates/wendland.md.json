{"attributes":{"backlinks":[],"path":"/Users/lorenz/.julia/packages/Surrogates/zwNvG/docs/src/wendland.md","title":"Wendland Surrogate"},"tag":"document","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"h1","children":["Wendland Surrogate"],"type":"node"},{"attributes":{},"tag":"p","children":["The Wendland surrogate is a compact surrogate: it allocates much less memory then other surrogates. The coefficients are found using an iterative solver."],"type":"node"},{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"math","children":["f = x -> exp(-x^2)"],"type":"node"}],"type":"node"},{"attributes":{"lang":"@example wendland"},"tag":"codeblock","children":["using Surrogates\nusing Plots\n"],"type":"node"},{"attributes":{"lang":"@example wendland"},"tag":"codeblock","children":["n = 40\nlower_bound = 0.0\nupper_bound = 1.0\nf = x -> exp(-x^2)\nx = sample(n,lower_bound,upper_bound,SobolSample())\ny = f.(x)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["We choose to sample f in 30 points between 5 to 25 using ",{"attributes":{},"tag":"code","children":["sample"],"type":"node"}," function. The sampling points are chosen using a Sobol sequence, this can be done by passing ",{"attributes":{},"tag":"code","children":["SobolSample()"],"type":"node"}," to the ",{"attributes":{},"tag":"code","children":["sample"],"type":"node"}," function."],"type":"node"},{"attributes":{},"tag":"h2","children":["Building Surrogate"],"type":"node"},{"attributes":{},"tag":"p","children":["The choice of the right parameter is especially important here: a slight change in Ïµ would produce a totally different fit. Try it yourself with this function!"],"type":"node"},{"attributes":{"lang":"@example wendland"},"tag":"codeblock","children":["my_eps = 0.5\nwend = Wendland(x,y,lower_bound,upper_bound,eps=my_eps)\n"],"type":"node"},{"attributes":{"lang":"@example wendland"},"tag":"codeblock","children":["plot(x, y, seriestype=:scatter, label=\"Sampled points\", xlims=(lower_bound, upper_bound), legend=:top)\nplot!(f, label=\"True function\",  xlims=(lower_bound, upper_bound), legend=:top)\nplot!(wend, label=\"Surrogate function\",  xlims=(lower_bound, upper_bound), legend=:top)\n"],"type":"node"}],"type":"node"}],"type":"node"}