{"attributes":{"backlinks":[],"path":"/Users/lorenz/.julia/packages/Surrogates/zwNvG/docs/src/rosenbrock.md","title":"Rosenbrock function"},"tag":"document","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"h1","children":["Rosenbrock function"],"type":"node"},{"attributes":{},"tag":"p","children":["The Rosenbrock function is defined as: ",{"attributes":{},"tag":"math","children":["f(x) = \\sum_{i=1}^{d-1}[ (x_{i+1}-x_i)^2 + (x_i - 1)^2]"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["I will treat the 2D version, which is commonly defined as: ",{"attributes":{},"tag":"math","children":["f(x,y) = (1-x)^2 + 100(y-x^2)^2"],"type":"node"}," Let's import Surrogates and Plots:"],"type":"node"},{"attributes":{"lang":"@example rosen"},"tag":"codeblock","children":["using Surrogates\nusing Plots\ndefault()\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Define the objective function:"],"type":"node"},{"attributes":{"lang":"@example rosen"},"tag":"codeblock","children":["function f(x)\n    x1 = x[1]\n    x2 = x[2]\n    return (1-x1)^2 + 100*(x2-x1^2)^2\nend\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Let's plot it:"],"type":"node"},{"attributes":{"lang":"@example rosen"},"tag":"codeblock","children":["n = 100\nlb = [0.0,0.0]\nub = [8.0,8.0]\nxys = sample(n,lb,ub,SobolSample());\nzs = f.(xys);\nx, y = 0:8, 0:8\np1 = surface(x, y, (x1,x2) -> f((x1,x2)))\nxs = [xy[1] for xy in xys]\nys = [xy[2] for xy in xys]\nscatter!(xs, ys, zs) # hide\np2 = contour(x, y, (x1,x2) -> f((x1,x2)))\nscatter!(xs, ys)\nplot(p1, p2, title=\"True function\")\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Fitting different Surrogates:"],"type":"node"},{"attributes":{"lang":"@example rosen"},"tag":"codeblock","children":["mypoly = PolynomialChaosSurrogate(xys, zs,  lb, ub)\nloba = LobachevskySurrogate(xys, zs, lb, ub)\ninver = InverseDistanceSurrogate(xys, zs,  lb, ub)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Plotting:"],"type":"node"},{"attributes":{"lang":"@example rosen"},"tag":"codeblock","children":["p1 = surface(x, y, (x, y) -> mypoly([x y]))\nscatter!(xs, ys, zs, marker_z=zs)\np2 = contour(x, y, (x, y) -> mypoly([x y]))\nscatter!(xs, ys, marker_z=zs)\nplot(p1, p2, title=\"Polynomial expansion\")\n"],"type":"node"},{"attributes":{"lang":"@example rosen"},"tag":"codeblock","children":["p1 = surface(x, y, (x, y) -> loba([x y]))\nscatter!(xs, ys, zs, marker_z=zs)\np2 = contour(x, y, (x, y) -> loba([x y]))\nscatter!(xs, ys, marker_z=zs)\nplot(p1, p2, title=\"Lobachevsky\")\n"],"type":"node"},{"attributes":{"lang":"@example rosen"},"tag":"codeblock","children":["p1 = surface(x, y, (x, y) -> inver([x y]))\nscatter!(xs, ys, zs, marker_z=zs)\np2 = contour(x, y, (x, y) -> inver([x y]))\nscatter!(xs, ys, marker_z=zs)\nplot(p1, p2, title=\"Inverse distance surrogate\")\n"],"type":"node"}],"type":"node"}],"type":"node"}