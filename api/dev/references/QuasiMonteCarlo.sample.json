{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"QuasiMonteCarlo/src/QuasiMonteCarlo.jl","docid":"sourcefiles/QuasiMonteCarlo/src/QuasiMonteCarlo.jl"},{"tag":"sourcefile","title":"GlobalSensitivity/src/regression_sensitivity.jl","docid":"sourcefiles/GlobalSensitivity/src/regression_sensitivity.jl"},{"tag":"document","title":"QuasiMonteCarlo.jl: Quasi-Monte Carlo (QMC) Samples Made Easy","docid":"QuasiMonteCarlo/index.md"},{"tag":"sourcefile","title":"GlobalSensitivity/src/delta_sensitivity.jl","docid":"sourcefiles/GlobalSensitivity/src/delta_sensitivity.jl"},{"tag":"document","title":"Bayesian Neural ODEs: NUTS","docid":"DiffEqSensitivity/bayesian/BayesianNODE_NUTS.md"},{"tag":"sourcefile","title":"GlobalSensitivity/src/easi_sensitivity.jl","docid":"sourcefiles/GlobalSensitivity/src/easi_sensitivity.jl"},{"tag":"sourcefile","title":"Surrogates/src/Surrogates.jl","docid":"sourcefiles/Surrogates/src/Surrogates.jl"},{"tag":"sourcefile","title":"Surrogates/src/Sampling.jl","docid":"sourcefiles/Surrogates/src/Sampling.jl"},{"tag":"sourcefile","title":"NeuralPDE/src/pinns_pde_solve.jl","docid":"sourcefiles/NeuralPDE/src/pinns_pde_solve.jl"},{"tag":"sourcefile","title":"Surrogates/src/Optimization.jl","docid":"sourcefiles/Surrogates/src/Optimization.jl"}],"methods":[{"line":380,"file":"/Users/lorenz/.julia/packages/QuasiMonteCarlo/afiKW/src/QuasiMonteCarlo.jl","method_id":"QuasiMonteCarlo.sample_1","symbol_id":"QuasiMonteCarlo.sample","filedoc":"sourcefiles/QuasiMonteCarlo/src/QuasiMonteCarlo.jl","signature":"sample(n, d, D::Distributions.Distribution)"},{"line":132,"file":"/Users/lorenz/.julia/packages/QuasiMonteCarlo/afiKW/src/QuasiMonteCarlo.jl","method_id":"QuasiMonteCarlo.sample_2","symbol_id":"QuasiMonteCarlo.sample","filedoc":"sourcefiles/QuasiMonteCarlo/src/QuasiMonteCarlo.jl","signature":"sample(n, lb, ub, S::QuasiMonteCarlo.GridSample)"},{"line":175,"file":"/Users/lorenz/.julia/packages/QuasiMonteCarlo/afiKW/src/QuasiMonteCarlo.jl","method_id":"QuasiMonteCarlo.sample_3","symbol_id":"QuasiMonteCarlo.sample","filedoc":"sourcefiles/QuasiMonteCarlo/src/QuasiMonteCarlo.jl","signature":"sample(n, lb, ub, T::QuasiMonteCarlo.LatinHypercubeSample)"},{"line":226,"file":"/Users/lorenz/.julia/packages/QuasiMonteCarlo/afiKW/src/QuasiMonteCarlo.jl","method_id":"QuasiMonteCarlo.sample_4","symbol_id":"QuasiMonteCarlo.sample","filedoc":"sourcefiles/QuasiMonteCarlo/src/QuasiMonteCarlo.jl","signature":"sample(n, lb, ub, S::QuasiMonteCarlo.LowDiscrepancySample)"},{"line":275,"file":"/Users/lorenz/.julia/packages/QuasiMonteCarlo/afiKW/src/QuasiMonteCarlo.jl","method_id":"QuasiMonteCarlo.sample_5","symbol_id":"QuasiMonteCarlo.sample","filedoc":"sourcefiles/QuasiMonteCarlo/src/QuasiMonteCarlo.jl","signature":"sample(n, lb, ub, K::QuasiMonteCarlo.KroneckerSample)"},{"line":356,"file":"/Users/lorenz/.julia/packages/QuasiMonteCarlo/afiKW/src/QuasiMonteCarlo.jl","method_id":"QuasiMonteCarlo.sample_6","symbol_id":"QuasiMonteCarlo.sample","filedoc":"sourcefiles/QuasiMonteCarlo/src/QuasiMonteCarlo.jl","signature":"sample(n, lb, ub, section_sampler::QuasiMonteCarlo.SectionSample)"},{"line":147,"file":"/Users/lorenz/.julia/packages/QuasiMonteCarlo/afiKW/src/QuasiMonteCarlo.jl","method_id":"QuasiMonteCarlo.sample_7","symbol_id":"QuasiMonteCarlo.sample","filedoc":"sourcefiles/QuasiMonteCarlo/src/QuasiMonteCarlo.jl","signature":"sample(n, lb, ub, ::QuasiMonteCarlo.UniformSample)"},{"line":161,"file":"/Users/lorenz/.julia/packages/QuasiMonteCarlo/afiKW/src/QuasiMonteCarlo.jl","method_id":"QuasiMonteCarlo.sample_8","symbol_id":"QuasiMonteCarlo.sample","filedoc":"sourcefiles/QuasiMonteCarlo/src/QuasiMonteCarlo.jl","signature":"sample(n, lb, ub, ::QuasiMonteCarlo.SobolSample)"},{"line":196,"file":"/Users/lorenz/.julia/packages/QuasiMonteCarlo/afiKW/src/QuasiMonteCarlo.jl","method_id":"QuasiMonteCarlo.sample_9","symbol_id":"QuasiMonteCarlo.sample","filedoc":"sourcefiles/QuasiMonteCarlo/src/QuasiMonteCarlo.jl","signature":"sample(n, lb, ub, ::QuasiMonteCarlo.LatticeRuleSample)"},{"line":303,"file":"/Users/lorenz/.julia/packages/QuasiMonteCarlo/afiKW/src/QuasiMonteCarlo.jl","method_id":"QuasiMonteCarlo.sample_10","symbol_id":"QuasiMonteCarlo.sample","filedoc":"sourcefiles/QuasiMonteCarlo/src/QuasiMonteCarlo.jl","signature":"sample(n, lb, ub, G::QuasiMonteCarlo.GoldenSample)"}],"name":"sample","title":"sample","symbol_id":"QuasiMonteCarlo.sample","public":false,"module_id":"QuasiMonteCarlo"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"IDENTIFIER","children":["A"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"DOT","children":[{"attributes":{"reftype":"symbol","document_id":"references/QuasiMonteCarlo"},"tag":"reference","children":["QuasiMonteCarlo"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{"reftype":"symbol","document_id":"references/QuasiMonteCarlo.sample"},"tag":"reference","children":["sample"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["n"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["lb"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["ub"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["sample_method"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["where:"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["n"],"type":"node"}," is the number of points to sample."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["lb"],"type":"node"}," is the lower bound for each variable. The length determines the dimensionality."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["ub"],"type":"node"}," is the upper bound."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["sample_method"],"type":"node"}," is the quasi-Monte Carlo sampling strategy. Note that any Distributions.jl distribution can be used in addition to any ",{"attributes":{},"tag":"code","children":["SamplingAlgorithm"],"type":"node"},"."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"hr","children":[{"mimes":{"text/plain":"Any[]"},"type":"leaf"},{"mimes":{"text/plain":"Dict{Symbol, String}()"},"type":"leaf"}],"type":"node"},{"attributes":{},"tag":"p","children":["sample(n,lb,ub,S::GridSample) Returns a tuple containing numbers in a grid."],"type":"node"},{"attributes":{},"tag":"hr","children":[{"mimes":{"text/plain":"Any[]"},"type":"leaf"},{"mimes":{"text/plain":"Dict{Symbol, String}()"},"type":"leaf"}],"type":"node"},{"attributes":{},"tag":"p","children":["sample(n,lb,ub,::UniformRandom) Returns a tuple containing uniform random numbers."],"type":"node"},{"attributes":{},"tag":"hr","children":[{"mimes":{"text/plain":"Any[]"},"type":"leaf"},{"mimes":{"text/plain":"Dict{Symbol, String}()"},"type":"leaf"}],"type":"node"},{"attributes":{},"tag":"p","children":["sample(n,lb,ub,::SobolSampling) Returns a tuple containing Sobol sequences."],"type":"node"},{"attributes":{},"tag":"hr","children":[{"mimes":{"text/plain":"Any[]"},"type":"leaf"},{"mimes":{"text/plain":"Dict{Symbol, String}()"},"type":"leaf"}],"type":"node"},{"attributes":{},"tag":"p","children":["sample(n,lb,ub,T::LatinHypercubeSample) Returns a tuple containing LatinHypercube sequences."],"type":"node"},{"attributes":{},"tag":"hr","children":[{"mimes":{"text/plain":"Any[]"},"type":"leaf"},{"mimes":{"text/plain":"Dict{Symbol, String}()"},"type":"leaf"}],"type":"node"},{"attributes":{},"tag":"p","children":["sample(n,lb,ub,::LatticeRuleSample) Returns a matrix with the ",{"attributes":{},"tag":"code","children":["n"],"type":"node"}," rank-1 lattice points in each column if ",{"attributes":{},"tag":"code","children":["lb"],"type":"node"}," is a vector, or a vector with the ",{"attributes":{},"tag":"code","children":["n"],"type":"node"}," rank-1 lattice points if ",{"attributes":{},"tag":"code","children":["lb"],"type":"node"}," is a number."],"type":"node"},{"attributes":{},"tag":"hr","children":[{"mimes":{"text/plain":"Any[]"},"type":"leaf"},{"mimes":{"text/plain":"Dict{Symbol, String}()"},"type":"leaf"}],"type":"node"},{"attributes":{},"tag":"p","children":["sample(n,lb,ub,S::LowDiscrepancySample) Low-discrepancy sample:"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["Dimension 1: Van der Corput sequence"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["Dimension > 1: Halton sequence If dimension d > 1, all bases must be coprime with one other."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"hr","children":[{"mimes":{"text/plain":"Any[]"},"type":"leaf"},{"mimes":{"text/plain":"Dict{Symbol, String}()"},"type":"leaf"}],"type":"node"},{"attributes":{},"tag":"p","children":["sample(n,d,K::KroneckerSample)"],"type":"node"},{"attributes":{},"tag":"p","children":["Returns a Tuple containing numbers following the Kronecker sample"],"type":"node"},{"attributes":{},"tag":"hr","children":[{"mimes":{"text/plain":"Any[]"},"type":"leaf"},{"mimes":{"text/plain":"Dict{Symbol, String}()"},"type":"leaf"}],"type":"node"},{"attributes":{},"tag":"p","children":["sample(n,lb,ub,K::SectionSample)"],"type":"node"},{"attributes":{},"tag":"p","children":["Returns Tuples constrained to a section."],"type":"node"},{"attributes":{},"tag":"p","children":["In surrogate-based identification and control, optimization can alternate between unconstrained sampling in the full-dimensional parameter space, and sampling constrained on specific sections (e.g. a planes in a 3D volume),"],"type":"node"},{"attributes":{},"tag":"p","children":["A SectionSampler allows sampling and optimizing on a subset of 'free' dimensions while keeping 'fixed' ones constrained. The sampler is defined as in e.g."],"type":"node"},{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["section_sampler_y_is_10 = SectionSample([NaN64, NaN64, 10.0, 10.0], UniformSample())"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["where the first argument is a Vector in which numbers are fixed coordinates and ",{"attributes":{},"tag":"code","children":["NaN"],"type":"node"},"s correspond to free dimensions, and the second argument is a SamplingAlgorithm which is used to sample in the free dimensions."],"type":"node"},{"attributes":{},"tag":"hr","children":[{"mimes":{"text/plain":"Any[]"},"type":"leaf"},{"mimes":{"text/plain":"Dict{Symbol, String}()"},"type":"leaf"}],"type":"node"},{"attributes":{},"tag":"p","children":["sample(n,d,D::Distribution) Returns a tuple containing numbers distributed as D."],"type":"node"}],"type":"node"}],"type":"node"}