{"attributes":{"kind":"struct","backlinks":[{"tag":"sourcefile","title":"NeuralPDE/src/kolmogorov_solve.jl","docid":"sourcefiles/NeuralPDE/src/kolmogorov_solve.jl"},{"tag":"document","title":"Neural Network Solvers for Kolmogorov Backwards Equations","docid":"NeuralPDE/solvers/kolmogorovbackwards_solver.md"},{"tag":"sourcefile","title":"NeuralPDE/src/NeuralPDE.jl","docid":"sourcefiles/NeuralPDE/src/NeuralPDE.jl"}],"methods":[{"line":25,"file":"/Users/lorenz/.julia/packages/NeuralPDE/y7uHG/src/kolmogorov_solve.jl","method_id":"NeuralPDE.NNKolmogorov_1","symbol_id":"NeuralPDE.NNKolmogorov","filedoc":"sourcefiles/NeuralPDE/src/kolmogorov_solve.jl","signature":"NeuralPDE.NNKolmogorov(chain; opt, sdealg, ensemblealg)"},{"line":20,"file":"/Users/lorenz/.julia/packages/NeuralPDE/y7uHG/src/kolmogorov_solve.jl","method_id":"NeuralPDE.NNKolmogorov_2","symbol_id":"NeuralPDE.NNKolmogorov","filedoc":"sourcefiles/NeuralPDE/src/kolmogorov_solve.jl","signature":"NeuralPDE.NNKolmogorov(chain::C, opt::O, sdealg::S, ensemblealg::E)"}],"name":"NNKolmogorov","title":"NNKolmogorov","symbol_id":"NeuralPDE.NNKolmogorov","public":true,"module_id":"NeuralPDE"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"p","children":["Algorithm for solving Backward Kolmogorov Equations."],"type":"node"},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"DOT","children":[{"attributes":{"reftype":"symbol","document_id":"references/NeuralPDE"},"tag":"reference","children":["NeuralPDE"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{"reftype":"symbol","document_id":"references/NeuralPDE.NNKolmogorov"},"tag":"reference","children":["NNKolmogorov"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{"reftype":"symbol","document_id":"references/RecursiveArrayTools.chain"},"tag":"reference","children":["chain"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["opt"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["sdealg"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["ensemblealg"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Arguments:"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["chain"],"type":"node"},": A Chain neural network with a d-dimensional output."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["opt"],"type":"node"},": The optimizer to train the neural network. Defaults to ",{"attributes":{},"tag":"code","children":["ADAM(0.1)"],"type":"node"},"."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["sdealg"],"type":"node"},": The algorithm used to solve the discretized SDE according to the process that X follows. Defaults to ",{"attributes":{},"tag":"code","children":["EM()"],"type":"node"},"."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["ensemblealg"],"type":"node"},": The algorithm used to solve the Ensemble Problem that performs Ensemble simulations for the SDE. Defaults to ",{"attributes":{},"tag":"code","children":["EnsembleThreads()"],"type":"node"},". See the ",{"attributes":{"href":"https://diffeq.sciml.ai/stable/features/ensemble/#EnsembleAlgorithms-1","title":""},"tag":"a","children":["Ensemble Algorithms"],"type":"node"}," documentation for more details."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["kwargs"],"type":"node"},": Additional arguments splatted to the SDE solver. See the ",{"attributes":{"href":"https://diffeq.sciml.ai/dev/basics/common_solver_opts/","title":""},"tag":"a","children":["Common Solver Arguments"],"type":"node"}," documentation for more details. [1]Beck, Christian, et al. \"Solving stochastic differential equations and Kolmogorov equations by means of deep learning.\" arXiv preprint arXiv:1806.00421 (2018)."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}