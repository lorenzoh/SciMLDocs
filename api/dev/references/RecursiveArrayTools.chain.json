{"attributes":{"kind":"struct","backlinks":[{"tag":"document","title":"Neural Ordinary Differential Equations with Flux.train!","docid":"DiffEqSensitivity/neural_ode/neural_ode_flux.md"},{"tag":"document","title":"Neural ODEs on GPUs","docid":"DiffEqSensitivity/neural_ode/GPUs.md"},{"tag":"document","title":"Solving a 100-dimensional Hamilton-Jacobi-Bellman Equation","docid":"NeuralPDE/examples/100_HJB.md"},{"tag":"document","title":"Optimal Stopping Times of American Options","docid":"NeuralPDE/examples/optimal_stopping_american.md"},{"tag":"document","title":"Strategies to Avoid Local Minima","docid":"DiffEqSensitivity/training_tips/local_minima.md"},{"tag":"sourcefile","title":"SymbolicNumericIntegration/src/utils.jl","docid":"sourcefiles/SymbolicNumericIntegration/src/utils.jl"},{"tag":"document","title":"Neural Ordinary Differential Equations with GalacticOptim.jl","docid":"DiffEqSensitivity/neural_ode/neural_ode_galacticoptim.md"},{"tag":"document","title":"Integro Differential Equations","docid":"NeuralPDE/pinn/integro_diff.md"},{"tag":"document","title":"Training Neural Networks in Hybrid Differential Equations","docid":"DiffEqSensitivity/hybrid_jump_fitting/hybrid_diffeq.md"},{"tag":"document","title":"Newton and Hessian-Free Newton-Krylov with Second Order Adjoint Sensitivity Analysis","docid":"DiffEqSensitivity/ode_fitting/second_order_adjoints.md"},{"tag":"sourcefile","title":"DiffEqFlux/src/neural_de.jl","docid":"sourcefiles/DiffEqFlux/src/neural_de.jl"},{"tag":"document","title":"[Solving Optimal Control Problems with Universal Differential Equations]( optcontrol)","docid":"DiffEqSensitivity/optimal_control/optimal_control.md"},{"tag":"document","title":"Neural Ordinary Differential Equations","docid":"DiffEqFlux/examples/neural_ode.md"},{"tag":"sourcefile","title":"SymbolicNumericIntegration/src/rules.jl","docid":"sourcefiles/SymbolicNumericIntegration/src/rules.jl"},{"tag":"document","title":"Convolutional Neural ODE MNIST Classifier on GPU","docid":"DiffEqSensitivity/neural_ode/mnist_conv_neural_ode.md"},{"tag":"document","title":"Solving the 100-dimensional Black-Scholes-Barenblatt Equation","docid":"NeuralPDE/examples/blackscholes.md"},{"tag":"document","title":"Solving ODEs with Neural Networks","docid":"NeuralPDE/examples/ode.md"},{"tag":"document","title":"Multiple Shooting","docid":"DiffEqFlux/examples/multiple_shooting.md"},{"tag":"document","title":"Data-Parallel Multithreaded, Distributed, and Multi-GPU Batching","docid":"DiffEqSensitivity/ode_fitting/data_parallel.md"},{"tag":"document","title":"Smoothed Collocation for Fast Two-Stage Training","docid":"DiffEqFlux/examples/collocation.md"},{"tag":"sourcefile","title":"RecursiveArrayTools/src/utils.jl","docid":"sourcefiles/RecursiveArrayTools/src/utils.jl"},{"tag":"document","title":"[GPU-based MNIST Neural ODE Classifier]( mnist)","docid":"DiffEqSensitivity/neural_ode/mnist_neural_ode.md"},{"tag":"document","title":"Hamiltonian Neural Network","docid":"DiffEqFlux/examples/hamiltonian_nn.md"},{"tag":"sourcefile","title":"SymbolicNumericIntegration/src/homotopy.jl","docid":"sourcefiles/SymbolicNumericIntegration/src/homotopy.jl"},{"tag":"document","title":"Neural Second Order Ordinary Differential Equation","docid":"DiffEqSensitivity/ode_fitting/second_order_neural.md"},{"tag":"document","title":"Neural Graph Differential Equations","docid":"DiffEqSensitivity/neural_ode/neural_gde.md"},{"tag":"document","title":"Neural Network Solvers for Kolmogorov Backwards Equations","docid":"NeuralPDE/solvers/kolmogorovbackwards_solver.md"},{"tag":"document","title":"Universal Differential Equations for Neural Feedback Control","docid":"DiffEqSensitivity/optimal_control/feedback_control.md"},{"tag":"document","title":"Handling Exogenous Input Signals","docid":"DiffEqSensitivity/ode_fitting/exogenous_input.md"},{"tag":"sourcefile","title":"DiffEqFlux/src/ffjord.jl","docid":"sourcefiles/DiffEqFlux/src/ffjord.jl"},{"tag":"document","title":"Solving Random Ordinary Differential Equations","docid":"NeuralPDE/examples/nnrode_example.md"},{"tag":"document","title":"NeuralOperators","docid":"NeuralOperators/index.md"},{"tag":"sourcefile","title":"NeuralOperators/src/model.jl","docid":"sourcefiles/NeuralOperators/src/model.jl"},{"tag":"document","title":"Neural Stochastic Differential Equations","docid":"DiffEqSensitivity/sde_fitting/neural_sde.md"},{"tag":"sourcefile","title":"RecursiveArrayTools/src/array_partition.jl","docid":"sourcefiles/RecursiveArrayTools/src/array_partition.jl"},{"tag":"document","title":"Enforcing Physical Constraints via Universal Differential-Algebraic Equations","docid":"DiffEqSensitivity/dae_fitting/physical_constraints.md"},{"tag":"sourcefile","title":"ModelingToolkit/src/ModelingToolkit.jl","docid":"sourcefiles/ModelingToolkit/src/ModelingToolkit.jl"},{"tag":"document","title":"Augmented Neural Ordinary Differential Equations","docid":"DiffEqFlux/examples/augmented_neural_ode.md"},{"tag":"document","title":"Transfer Learning with Neural Adapter","docid":"NeuralPDE/pinn/neural_adapter.md"},{"tag":"document","title":"Simultaneous Fitting of Multiple Neural Networks","docid":"DiffEqSensitivity/training_tips/multiple_nn.md"}],"methods":[{"line":229,"file":"/Users/lorenz/.julia/packages/RecursiveArrayTools/YoTgv/src/utils.jl","method_id":"RecursiveArrayTools.Chain_1","symbol_id":"RecursiveArrayTools.Chain","filedoc":"sourcefiles/RecursiveArrayTools/src/utils.jl","signature":"RecursiveArrayTools.Chain(xss::T)"}],"name":"Chain","title":"Chain","symbol_id":"RecursiveArrayTools.Chain","public":false,"module_id":"RecursiveArrayTools"},"tag":"documentation","children":[],"type":"node"}