{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"ExponentialUtilities/src/exp_baseexp.jl","docid":"sourcefiles/ExponentialUtilities/src/exp_baseexp.jl"},{"tag":"sourcefile","title":"ExponentialUtilities/src/exp.jl","docid":"sourcefiles/ExponentialUtilities/src/exp.jl"},{"tag":"sourcefile","title":"ExponentialUtilities/src/exp_noalloc.jl","docid":"sourcefiles/ExponentialUtilities/src/exp_noalloc.jl"},{"tag":"sourcefile","title":"ExponentialUtilities/src/exp_generic.jl","docid":"sourcefiles/ExponentialUtilities/src/exp_generic.jl"},{"tag":"sourcefile","title":"ExponentialUtilities/src/krylov_phiv.jl","docid":"sourcefiles/ExponentialUtilities/src/krylov_phiv.jl"},{"tag":"sourcefile","title":"ExponentialUtilities/src/ExponentialUtilities.jl","docid":"sourcefiles/ExponentialUtilities/src/ExponentialUtilities.jl"},{"tag":"document","title":"ExponentialUtilities.jl: High-Performance Matrix Exponentiation and Products","docid":"ExponentialUtilities/index.md"},{"tag":"sourcefile","title":"ExponentialUtilities/src/phi.jl","docid":"sourcefiles/ExponentialUtilities/src/phi.jl"}],"methods":[{"line":25,"file":"/Users/lorenz/.julia/packages/ExponentialUtilities/j8g4q/src/exp_baseexp.jl","method_id":"ExponentialUtilities.exponential!_1","symbol_id":"ExponentialUtilities.exponential!","filedoc":"sourcefiles/ExponentialUtilities/src/exp_baseexp.jl","signature":"exponential!(A::StridedMatrix{T}, method::ExponentialUtilities.ExpMethodHigham2005Base)"},{"line":25,"file":"/Users/lorenz/.julia/packages/ExponentialUtilities/j8g4q/src/exp_baseexp.jl","method_id":"ExponentialUtilities.exponential!_2","symbol_id":"ExponentialUtilities.exponential!","filedoc":"sourcefiles/ExponentialUtilities/src/exp_baseexp.jl","signature":"exponential!(A::StridedMatrix{T}, method::ExponentialUtilities.ExpMethodHigham2005Base, cache)"},{"line":16,"file":"/Users/lorenz/.julia/packages/ExponentialUtilities/j8g4q/src/exp.jl","method_id":"ExponentialUtilities.exponential!_3","symbol_id":"ExponentialUtilities.exponential!","filedoc":"sourcefiles/ExponentialUtilities/src/exp.jl","signature":"exponential!(A)"},{"line":116,"file":"/Users/lorenz/.julia/packages/ExponentialUtilities/j8g4q/src/exp_generic.jl","method_id":"ExponentialUtilities.exponential!_4","symbol_id":"ExponentialUtilities.exponential!","filedoc":"sourcefiles/ExponentialUtilities/src/exp_generic.jl","signature":"exponential!(x, method::ExponentialUtilities.ExpMethodGeneric{Vk})"},{"line":116,"file":"/Users/lorenz/.julia/packages/ExponentialUtilities/j8g4q/src/exp_generic.jl","method_id":"ExponentialUtilities.exponential!_5","symbol_id":"ExponentialUtilities.exponential!","filedoc":"sourcefiles/ExponentialUtilities/src/exp_generic.jl","signature":"exponential!(x, method::ExponentialUtilities.ExpMethodGeneric{Vk}, cache)"},{"line":48,"file":"/Users/lorenz/.julia/packages/ExponentialUtilities/j8g4q/src/exp.jl","method_id":"ExponentialUtilities.exponential!_6","symbol_id":"ExponentialUtilities.exponential!","filedoc":"sourcefiles/ExponentialUtilities/src/exp.jl","signature":"exponential!(A, method::ExponentialUtilities.ExpMethodDiagonalization)"},{"line":48,"file":"/Users/lorenz/.julia/packages/ExponentialUtilities/j8g4q/src/exp.jl","method_id":"ExponentialUtilities.exponential!_7","symbol_id":"ExponentialUtilities.exponential!","filedoc":"sourcefiles/ExponentialUtilities/src/exp.jl","signature":"exponential!(A, method::ExponentialUtilities.ExpMethodDiagonalization, cache)"},{"line":68,"file":"/Users/lorenz/.julia/packages/ExponentialUtilities/j8g4q/src/exp.jl","method_id":"ExponentialUtilities.exponential!_8","symbol_id":"ExponentialUtilities.exponential!","filedoc":"sourcefiles/ExponentialUtilities/src/exp.jl","signature":"exponential!(A, method::ExponentialUtilities.ExpMethodNative)"},{"line":68,"file":"/Users/lorenz/.julia/packages/ExponentialUtilities/j8g4q/src/exp.jl","method_id":"ExponentialUtilities.exponential!_9","symbol_id":"ExponentialUtilities.exponential!","filedoc":"sourcefiles/ExponentialUtilities/src/exp.jl","signature":"exponential!(A, method::ExponentialUtilities.ExpMethodNative, cache)"},{"line":80,"file":"/Users/lorenz/.julia/packages/ExponentialUtilities/j8g4q/src/exp_noalloc.jl","method_id":"ExponentialUtilities.exponential!_10","symbol_id":"ExponentialUtilities.exponential!","filedoc":"sourcefiles/ExponentialUtilities/src/exp_noalloc.jl","signature":"exponential!(A, method::ExponentialUtilities.ExpMethodHigham2005)"},{"line":80,"file":"/Users/lorenz/.julia/packages/ExponentialUtilities/j8g4q/src/exp_noalloc.jl","method_id":"ExponentialUtilities.exponential!_11","symbol_id":"ExponentialUtilities.exponential!","filedoc":"sourcefiles/ExponentialUtilities/src/exp_noalloc.jl","signature":"exponential!(A, method::ExponentialUtilities.ExpMethodHigham2005, _cache)"}],"name":"exponential!","title":"exponential!","symbol_id":"ExponentialUtilities.exponential!","public":true,"module_id":"ExponentialUtilities"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["E=exponential!(A,[method [cache]])\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Computes the matrix exponential with method specified in ",{"attributes":{},"tag":"code","children":["method"],"type":"node"},". The contents of ",{"attributes":{},"tag":"code","children":["A"],"type":"node"}," is modified allowing for less allocations. The ",{"attributes":{},"tag":"code","children":["method"],"type":"node"}," parameter specifies the implementation and implementation parameters, e.g. ",{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["ExpMethodNative"],"type":"node"}],"type":"node"},", ",{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["ExpMethodDiagonalization"],"type":"node"}],"type":"node"},", ",{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["ExpMethodGeneric"],"type":"node"}],"type":"node"},", ",{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["ExpMethodHigham2005"],"type":"node"}],"type":"node"},". Memory needed can be preallocated and provided in parameter ",{"attributes":{},"tag":"code","children":["cache"],"type":"node"}," such that the memory can recycled when calling ",{"attributes":{},"tag":"code","children":["exponential!"],"type":"node"}," several times. The preallocation is done with the command ",{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["alloc_mem"],"type":"node"}],"type":"node"},": ",{"attributes":{},"tag":"code","children":["cache=alloc_mem(A,method)"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["Example"],"type":"node"},{"attributes":{"lang":"julia-repl"},"tag":"codeblock","children":["julia> A=randn(50,50);\njulia> Acopy=B*2;\njulia> method=ExpMethodHigham2005();\njulia> cache=alloc_mem(A,method); # Main allocation done here\njulia> E1=exponential!(A,method,cache) # Very little allocation here\njulia> E2=exponential!(B,method,cache) # Very little allocation here\n"],"type":"node"}],"type":"node"}],"type":"node"}