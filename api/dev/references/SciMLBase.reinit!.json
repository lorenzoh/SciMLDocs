{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"NonlinearSolve/src/solve.jl","docid":"sourcefiles/NonlinearSolve/src/solve.jl"},{"tag":"sourcefile","title":"DiffEqNoiseProcess/src/noise_interfaces/common.jl","docid":"sourcefiles/DiffEqNoiseProcess/src/noise_interfaces/common.jl"},{"tag":"sourcefile","title":"SciMLBase/src/SciMLBase.jl","docid":"sourcefiles/SciMLBase/src/SciMLBase.jl"},{"tag":"sourcefile","title":"SciMLBase/src/integrator_interface.jl","docid":"sourcefiles/SciMLBase/src/integrator_interface.jl"},{"tag":"sourcefile","title":"DiffEqSensitivity/src/interpolating_adjoint.jl","docid":"sourcefiles/DiffEqSensitivity/src/interpolating_adjoint.jl"}],"methods":[{"line":2,"file":"/Users/lorenz/.julia/packages/DiffEqNoiseProcess/iWugD/src/noise_interfaces/common.jl","method_id":"SciMLBase.reinit!_1","symbol_id":"SciMLBase.reinit!","filedoc":"sourcefiles/SciMLBase/src/noise_interfaces/common.jl","signature":"reinit!(W::Union{NoiseApproximation, NoiseProcess}, dt; t0, erase_sol, setup_next)"},{"line":215,"file":"/Users/lorenz/.julia/packages/Sundials/k9hc3/src/common_interface/integrator_utils.jl","method_id":"SciMLBase.reinit!_2","symbol_id":"SciMLBase.reinit!","filedoc":"sourcefiles/SciMLBase/src/common_interface/integrator_utils.jl","signature":"reinit!(integrator::Sundials.AbstractSundialsIntegrator)"},{"line":215,"file":"/Users/lorenz/.julia/packages/Sundials/k9hc3/src/common_interface/integrator_utils.jl","method_id":"SciMLBase.reinit!_3","symbol_id":"SciMLBase.reinit!","filedoc":"sourcefiles/SciMLBase/src/common_interface/integrator_utils.jl","signature":"reinit!(integrator::Sundials.AbstractSundialsIntegrator, u0; t0, tf, erase_sol, tstops, saveat, reinit_callbacks, initialize_save, reinit_retcode, reinit_cache)"},{"line":113,"file":"/Users/lorenz/.julia/packages/NonlinearSolve/kBzny/src/solve.jl","method_id":"SciMLBase.reinit!_4","symbol_id":"SciMLBase.reinit!","filedoc":"sourcefiles/SciMLBase/src/solve.jl","signature":"reinit!(solver::NonlinearSolve.NewtonImmutableSolver, prob::NonlinearProblem{uType, false})"},{"line":106,"file":"/Users/lorenz/.julia/packages/NonlinearSolve/kBzny/src/solve.jl","method_id":"SciMLBase.reinit!_5","symbol_id":"SciMLBase.reinit!","filedoc":"sourcefiles/SciMLBase/src/solve.jl","signature":"reinit!(solver::NonlinearSolve.NewtonImmutableSolver, prob::NonlinearProblem{uType, true})"},{"line":261,"file":"/Users/lorenz/.julia/packages/OrdinaryDiffEq/irVAX/src/integrators/integrator_interface.jl","method_id":"SciMLBase.reinit!_6","symbol_id":"SciMLBase.reinit!","filedoc":"sourcefiles/SciMLBase/src/integrators/integrator_interface.jl","signature":"reinit!(integrator::OrdinaryDiffEq.ODEIntegrator)"},{"line":23,"file":"/Users/lorenz/.julia/packages/OrdinaryDiffEq/irVAX/src/integrators/controllers.jl","method_id":"SciMLBase.reinit!_7","symbol_id":"SciMLBase.reinit!","filedoc":"sourcefiles/SciMLBase/src/integrators/controllers.jl","signature":"reinit!(integrator::OrdinaryDiffEq.ODEIntegrator, controller::OrdinaryDiffEq.AbstractController)"},{"line":261,"file":"/Users/lorenz/.julia/packages/OrdinaryDiffEq/irVAX/src/integrators/integrator_interface.jl","method_id":"SciMLBase.reinit!_8","symbol_id":"SciMLBase.reinit!","filedoc":"sourcefiles/SciMLBase/src/integrators/integrator_interface.jl","signature":"reinit!(integrator::OrdinaryDiffEq.ODEIntegrator, u0; t0, tf, erase_sol, tstops, saveat, d_discontinuities, reset_dt, reinit_callbacks, initialize_save, reinit_cache, reinit_retcode)"},{"line":313,"file":"/Users/lorenz/.julia/packages/DelayDiffEq/5rXFy/src/integrators/interface.jl","method_id":"SciMLBase.reinit!_9","symbol_id":"SciMLBase.reinit!","filedoc":"sourcefiles/SciMLBase/src/integrators/interface.jl","signature":"reinit!(integrator::DelayDiffEq.DDEIntegrator)"},{"line":313,"file":"/Users/lorenz/.julia/packages/DelayDiffEq/5rXFy/src/integrators/interface.jl","method_id":"SciMLBase.reinit!_10","symbol_id":"SciMLBase.reinit!","filedoc":"sourcefiles/SciMLBase/src/integrators/interface.jl","signature":"reinit!(integrator::DelayDiffEq.DDEIntegrator, u0; t0, tf, erase_sol, tstops, saveat, d_discontinuities, order_discontinuity_t0, reset_dt, reinit_callbacks, initialize_save, reinit_cache)"},{"line":286,"file":"/Users/lorenz/.julia/packages/StochasticDiffEq/LYyNp/src/integrators/integrator_interface.jl","method_id":"SciMLBase.reinit!_11","symbol_id":"SciMLBase.reinit!","filedoc":"sourcefiles/SciMLBase/src/integrators/integrator_interface.jl","signature":"reinit!(integrator::StochasticDiffEq.SDEIntegrator)"},{"line":286,"file":"/Users/lorenz/.julia/packages/StochasticDiffEq/LYyNp/src/integrators/integrator_interface.jl","method_id":"SciMLBase.reinit!_12","symbol_id":"SciMLBase.reinit!","filedoc":"sourcefiles/SciMLBase/src/integrators/integrator_interface.jl","signature":"reinit!(integrator::StochasticDiffEq.SDEIntegrator, u0; t0, tf, erase_sol, tstops, saveat, d_discontinuities, reinit_cache, reinit_callbacks, initialize_save, reset_dt)"},{"line":46,"file":"/Users/lorenz/.julia/packages/DiffEqNoiseProcess/iWugD/src/noise_interfaces/common.jl","method_id":"SciMLBase.reinit!_13","symbol_id":"SciMLBase.reinit!","filedoc":"sourcefiles/SciMLBase/src/noise_interfaces/common.jl","signature":"reinit!(W::SciMLBase.AbstractNoiseProcess, dt; t0, erase_sol, setup_next)"},{"line":266,"file":"/Users/lorenz/.julia/packages/DelayDiffEq/5rXFy/src/integrators/interface.jl","method_id":"SciMLBase.reinit!_14","symbol_id":"SciMLBase.reinit!","filedoc":"sourcefiles/SciMLBase/src/integrators/interface.jl","signature":"reinit!(integrator::DelayDiffEq.HistoryODEIntegrator)"},{"line":266,"file":"/Users/lorenz/.julia/packages/DelayDiffEq/5rXFy/src/integrators/interface.jl","method_id":"SciMLBase.reinit!_15","symbol_id":"SciMLBase.reinit!","filedoc":"sourcefiles/SciMLBase/src/integrators/interface.jl","signature":"reinit!(integrator::DelayDiffEq.HistoryODEIntegrator, u0; t0, tf, erase_sol)"},{"line":219,"file":"/Users/lorenz/.julia/packages/SciMLBase/dYFnI/src/integrator_interface.jl","method_id":"SciMLBase.reinit!_16","symbol_id":"SciMLBase.reinit!","filedoc":"sourcefiles/SciMLBase/src/integrator_interface.jl","signature":"reinit!(integrator::SciMLBase.DEIntegrator, args...; kwargs...)"}],"name":"reinit!","title":"reinit!","symbol_id":"SciMLBase.reinit!","public":true,"module_id":"SciMLBase"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["reinit!(integrator::DEIntegrator,args...; kwargs...)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["The reinit function lets you restart the integration at a new value."],"type":"node"},{"attributes":{},"tag":"h1","children":["Arguments"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["u0"],"type":"node"},": Value of ",{"attributes":{},"tag":"code","children":["u"],"type":"node"}," to start at. Default value is ",{"attributes":{},"tag":"code","children":["integrator.sol.prob.u0"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h1","children":["Keyword Arguments"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["t0"],"type":"node"},": Starting timepoint. Default value is ",{"attributes":{},"tag":"code","children":["integrator.sol.prob.tspan[1]"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["tf"],"type":"node"},": Ending timepoint. Default value is ",{"attributes":{},"tag":"code","children":["integrator.sol.prob.tspan[2]"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["erase_sol=true"],"type":"node"},": Whether to start with no other values in the solution, or keep the previous solution."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["tstops"],"type":"node"},", ",{"attributes":{},"tag":"code","children":["d_discontinuities"],"type":"node"},", & ",{"attributes":{},"tag":"code","children":["saveat"],"type":"node"},": Cache where these are stored. Default is the original cache."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["reset_dt"],"type":"node"},": Set whether to reset the current value of ",{"attributes":{},"tag":"code","children":["dt"],"type":"node"}," using the automatic ",{"attributes":{},"tag":"code","children":["dt"],"type":"node"}," determination algorithm. Default is ",{"attributes":{},"tag":"code","children":["(integrator.dtcache == zero(integrator.dt)) && integrator.opts.adaptive"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["reinit_callbacks"],"type":"node"},": Set whether to run the callback initializations again (and ",{"attributes":{},"tag":"code","children":["initialize_save"],"type":"node"}," is for that). Default is ",{"attributes":{},"tag":"code","children":["true"],"type":"node"},"."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["reinit_cache"],"type":"node"},": Set whether to re-run the cache initialization function (i.e. resetting FSAL, not allocating vectors) which should usually be true for correctness. Default is ",{"attributes":{},"tag":"code","children":["true"],"type":"node"},"."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Additionally, once can access ",{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["auto_dt_reset!"],"type":"node"}],"type":"node"}," which will run the auto ",{"attributes":{},"tag":"code","children":["dt"],"type":"node"}," initialization algorithm."],"type":"node"}],"type":"node"}],"type":"node"}