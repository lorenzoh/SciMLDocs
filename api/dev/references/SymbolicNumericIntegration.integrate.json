{"attributes":{"kind":"function","backlinks":[],"methods":[{"line":36,"file":"/Users/lorenz/.julia/packages/SymbolicNumericIntegration/OUbIs/src/integral.jl","method_id":"SymbolicNumericIntegration.integrate_1","symbol_id":"SymbolicNumericIntegration.integrate","filedoc":"sourcefiles/SymbolicNumericIntegration/src/integral.jl","signature":"integrate(eq)"},{"line":36,"file":"/Users/lorenz/.julia/packages/SymbolicNumericIntegration/OUbIs/src/integral.jl","method_id":"SymbolicNumericIntegration.integrate_2","symbol_id":"SymbolicNumericIntegration.integrate","filedoc":"sourcefiles/SymbolicNumericIntegration/src/integral.jl","signature":"integrate(eq, x; abstol, num_steps, num_trials, radius, show_basis, opt, bypass, symbolic, max_basis, verbose, complex_plane, homotopy)"}],"name":"integrate","title":"integrate","symbol_id":"SymbolicNumericIntegration.integrate","public":true,"module_id":"SymbolicNumericIntegration"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["integrate is the main entry point\n\ninput:\n------\neq: a Symbolics expression to integrate\nx: the independent variable (optional)\n\nabstol: the desired tolerance\nnum_steps: the number of different steps with expanding basis to be tried\nnum_trials: the number of trials in each step (no changes to the basis)\nradius: the radius of the disk in the complex plane to generate random test points\nshow_basis: if true, the basis (list of candidate terms) is printed\nopt: the sparse regression optimizer\nbypass: if true, do not integrate terms separately but consider all at once\nsymbolic: try symbolic integration first\nmax_basis: the maximum number of candidate terms to consider\nverbose: print a detailed report\ncomplex_plane: generate random test points on the complex plane (if false, the points will be on real axis)\nhomotomy: use the homotopy algorithm to generat the basis\n\noutput:\n-------\nsolved, unsolved, err\n\nsolved is the solved integral and unsolved is the residual unsolved portion of the input\nerr is the numerical error in reaching the solution\n"],"type":"node"}],"type":"node"}],"type":"node"}