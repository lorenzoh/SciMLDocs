{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"PolyChaos/src/stieltjes.jl","docid":"sourcefiles/PolyChaos/src/stieltjes.jl"}],"methods":[{"line":124,"file":"/Users/lorenz/.julia/packages/PolyChaos/THVqe/src/stieltjes.jl","method_id":"PolyChaos.mcdiscretization_1","symbol_id":"PolyChaos.mcdiscretization","filedoc":"sourcefiles/PolyChaos/src/stieltjes.jl","signature":"mcdiscretization(N::Int64, quads::AbstractVector)"},{"line":124,"file":"/Users/lorenz/.julia/packages/PolyChaos/THVqe/src/stieltjes.jl","method_id":"PolyChaos.mcdiscretization_2","symbol_id":"PolyChaos.mcdiscretization","filedoc":"sourcefiles/PolyChaos/src/stieltjes.jl","signature":"mcdiscretization(N::Int64, quads::AbstractVector, discretemeasure::AbstractMatrix{<:Real}; discretization, Nmax, ε, gaussquad, removezeroweights)"}],"name":"mcdiscretization","title":"mcdiscretization","symbol_id":"PolyChaos.mcdiscretization","public":true,"module_id":"PolyChaos"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["mcdiscretization(N::Int,quads::Vector{},discretemeasure::AbstractMatrix{<:Real}=zeros(0,2);discretization::Function=stieltjes,Nmax::Integer=300,ε::Float64=1e-8,gaussquad::Bool=false)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["This routine returns ",{"attributes":{},"tag":"math","children":["N"],"type":"node"}," recurrence coefficients of the polynomials that are orthogonal relative to a weight function ",{"attributes":{},"tag":"math","children":["w"],"type":"node"}," that is decomposed as a sum of ",{"attributes":{},"tag":"math","children":["m"],"type":"node"}," weights ",{"attributes":{},"tag":"math","children":["w_i"],"type":"node"}," with domains ",{"attributes":{},"tag":"math","children":["[a_i,b_i]"],"type":"node"}," for ",{"attributes":{},"tag":"math","children":["i=1,\\dots,m"],"type":"node"},","],"type":"node"},{"attributes":{},"tag":"mathblock","children":["w(t) = \\sum_{i}^{m} w_i(t) \\quad \\text{with } \\operatorname{dom}(w_i) = [a_i, b_i]."],"type":"node"},{"attributes":{},"tag":"p","children":["For each weight ",{"attributes":{},"tag":"math","children":["w_i"],"type":"node"}," and its domain ",{"attributes":{},"tag":"math","children":["[a_i, b_i]"],"type":"node"}," the function ",{"attributes":{},"tag":"code","children":["mcdiscretization()"],"type":"node"}," expects a quadrature rule of the form nodes::AbstractVector, weights::AbstractVector = my_quad_i(N::Int) all of which are stacked in the parameter ",{"attributes":{},"tag":"code","children":["quad"],"type":"node"}," quad = [ my_quad_1, ..., my_quad_m ] If the weight function has a discrete part (specified by ",{"attributes":{},"tag":"code","children":["discretemeasure"],"type":"node"},") it is added on to the discretized continuous weight function."],"type":"node"},{"attributes":{},"tag":"p","children":["The function ",{"attributes":{},"tag":"code","children":["mcdiscretization()"],"type":"node"}," performs a sequence of discretizations of the given weight ",{"attributes":{},"tag":"math","children":["w(t)"],"type":"node"},", each discretization being followed by an application of the Stieltjes or Lanczos procedure (keyword ",{"attributes":{},"tag":"code","children":["discretization in [stieltjes, lanczos]"],"type":"node"},") to produce approximations to the desired recurrence coefficients. The function applies to each subinterval ",{"attributes":{},"tag":"math","children":["i"],"type":"node"}," an ",{"attributes":{},"tag":"code","children":["N"],"type":"node"},"-point quadrature rule (the ",{"attributes":{},"tag":"math","children":["i"],"type":"node"},"th entry of ",{"attributes":{},"tag":"code","children":["quad"],"type":"node"},") to discretize the weight function ",{"attributes":{},"tag":"math","children":["w_i"],"type":"node"}," on that subinterval. If the procedure converges to within a prescribed accuracy ",{"attributes":{},"tag":"code","children":["ε"],"type":"node"}," before ",{"attributes":{},"tag":"code","children":["N"],"type":"node"}," reaches its maximum allowed value ",{"attributes":{},"tag":"code","children":["Nmax"],"type":"node"},". If the function does not converge, the function prompts an error message."],"type":"node"},{"attributes":{},"tag":"p","children":["The keyword ",{"attributes":{},"tag":"code","children":["gaussquad"],"type":"node"}," should be set to ",{"attributes":{},"tag":"code","children":["true"],"type":"node"}," if Gauss quadrature rules are available ",{"attributes":{},"tag":"em","children":["for all"],"type":"node"}," ",{"attributes":{},"tag":"math","children":["m"],"type":"node"}," weights ",{"attributes":{},"tag":"math","children":["w_i(t)"],"type":"node"}," with ",{"attributes":{},"tag":"math","children":["i = 1, \\dots, m"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["For further information, please see W. Gautschi \"Orthogonal Polynomials: Approximation and Computation\", Section 2.2.4."],"type":"node"}],"type":"node"}],"type":"node"}