{"attributes":{"backlinks":[],"path":"/Users/lorenz/.julia/packages/LabelledArrays/lfn1b/docs/src/SLArrays.md","title":"SLArrays"},"tag":"document","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"h1","children":["SLArrays"],"type":"node"},{"attributes":{},"tag":"p","children":["The ",{"attributes":{},"tag":"code","children":["SLArray"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["SLVector"],"type":"node"}," macros create static LabelledArrays. First the user would create the array type, then use that constructor to generate instances of the labelled array."],"type":"node"},{"attributes":{},"tag":"h2","children":[{"attributes":{},"tag":"code","children":["@SLArray"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["@SLVector"],"type":"node"}," macros"],"type":"node"},{"attributes":{},"tag":"p","children":["Macro constructors are convenient for building most ",{"attributes":{},"tag":"code","children":["SLArray"],"type":"node"}," objects. An ",{"attributes":{},"tag":"code","children":["@SLArray"],"type":"node"}," may be of arbitrary dimension while an ",{"attributes":{},"tag":"code","children":["@SLVector"],"type":"node"}," is a one dimensional array."],"type":"node"},{"attributes":{"lang":"@docs"},"tag":"codeblock","children":["@SLArray\n@SLVector\n"],"type":"node"},{"attributes":{},"tag":"h2","children":[{"attributes":{},"tag":"code","children":["SLArray"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["SLVector"],"type":"node"}," constructors"],"type":"node"},{"attributes":{},"tag":"p","children":["Alternatively, users can construct a static labelled array using the ",{"attributes":{},"tag":"code","children":["SLVector"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["SLArrays"],"type":"node"}," constructors by writing out the entries as keyword arguments:"],"type":"node"},{"attributes":{"lang":"@docs"},"tag":"codeblock","children":["SLArray\nSLVector\n"],"type":"node"},{"attributes":{},"tag":"h2","children":["Manipulating ",{"attributes":{},"tag":"code","children":["SLArrays"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["SLVectors"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Users may want a list of the labels or keys in an ",{"attributes":{},"tag":"code","children":["SLArray"],"type":"node"}," or ",{"attributes":{},"tag":"code","children":["SLVector"],"type":"node"},". The ",{"attributes":{},"tag":"code","children":["symbols(::SLArray)"],"type":"node"}," function returns a tuple of array labels."],"type":"node"},{"attributes":{"lang":"@docs"},"tag":"codeblock","children":["symbols(::SLArray)\n"],"type":"node"}],"type":"node"}],"type":"node"}